/*---------------------------------*/
/* GML */
/*---------------------------------*/

CREATE TABLE Envelope(
	ID				    NUMBER PRIMARY KEY,
	SRS_DIMENSION	NUMBER(1),
	SRS_NAME		  VARCHAR2(100),

	LOWER_CORNER	SDO_GEOMETRY,
	UPPER_CORNER	SDO_GEOMETRY
);

/*---------------------------------*/
/* CityGML Core Module */
/*---------------------------------*/

CREATE TABLE CityModel(
	ID	            NUMBER PRIMARY KEY,
	SID	            VARCHAR2(2000) UNIQUE,
	GMLID 			    VARCHAR2(256), 
	NAME		 	      VARCHAR2(1000),
	NAME_CODESPACE 	VARCHAR2(2000), 
	DESCRIPTION 	  VARCHAR2(2000), 
	ENVELOPE_ID 	  NUMBER,

	FOREIGN KEY (ENVELOPE_ID) REFERENCES Envelope(ID)
);

CREATE TABLE CityObject(
	ID	                NUMBER PRIMARY KEY,
	CITYOBJECT_TYPE     VARCHAR2(50),
	GMLID 	            VARCHAR2(256), 
	NAME 	              VARCHAR2(1000),
	NAME_CODESPACE 	    VARCHAR2(2000), 
	DESCRIPTION 	      VARCHAR2(2000), 
	CREATION_DATE	      DATE,
	TERMINATION_DATE	  DATE,
	RELATIVE_TO_TERRAIN	VARCHAR2(256),
	RELATIVE_TO_WATER	  VARCHAR2(256)
);

CREATE TABLE CityObjectMember(
	CITYMODEL_ID			NUMBER NOT NULL,
	CITYOBJECT_ID			NUMBER NOT NULL,

	PRIMARY KEY (CITYMODEL_ID, CITYOBJECT_ID),
	FOREIGN KEY (CITYMODEL_ID) REFERENCES CityModel(ID),
	FOREIGN KEY (CITYOBJECT_ID) REFERENCES CityObject(ID)
);

CREATE TABLE Generalization(
	CITYOBJECT_ID		  NUMBER NOT NULL,
	GENERALIZES_TO_ID	NUMBER NOT NULL,

	PRIMARY KEY (CITYOBJECT_ID, GENERALIZES_TO_ID),
	FOREIGN KEY (CITYOBJECT_ID) REFERENCES CityObject(ID),
	FOREIGN KEY (GENERALIZES_TO_ID) REFERENCES CityObject(ID)
);

CREATE TABLE ADDRESS(
	ID	          NUMBER PRIMARY KEY,
	STREET	      VARCHAR2(1000),
	HOUSE_NUMBER	VARCHAR2(256),
	POST_BOX		  VARCHAR2(256),
	ZIP_CODE		  VARCHAR2(256),
	CITY			    VARCHAR2(256),
	STATE		  	  VARCHAR2(256),
	COUNTRY			  VARCHAR2(256),
	MULTIPOINT_ID	SDO_GEOMETRY,
	XAL_SOURCE		VARCHAR2(2000) /* CLOB */
);

/*---------------------------------*/
/* Building Module */
/*---------------------------------*/

CREATE TABLE Building(
	ID							      NUMBER PRIMARY KEY,
	PARENT_ID					    NUMBER,
	CLAZZ						      VARCHAR2(256),
	CLASS_CODESPACE				VARCHAR2(1000),
	FUNC						      VARCHAR2(256),
	FUNC_CODESPACE				VARCHAR2(1000),
	USAGE						      VARCHAR2(256),
	USAGE_CODESPACE				VARCHAR2(1000),
	YEAR_OF_CONSTRUCTION  NUMBER,
	YEAR_OF_DEMOLITION		NUMBER,
	ROOF_TYPE					    VARCHAR2(256),
	ROOF_TYPE_CODESPACE		VARCHAR2(1000),
	MEASURED_HEIGHT				DOUBLE PRECISION,
	MEASURED_HEIGHT_UNIT	VARCHAR2(1000),
	STOREYS_ABOVE_GROUND	NUMBER,
	STOREYS_BELOW_GROUND	NUMBER,
	STOREY_HEIGHTS_ABOVE_GROUND	VARCHAR2(1000),
	STOREY_HEIGHTS_ABOVE_UNIT	  VARCHAR2(1000),
	STOREY_HEIGHTS_BELOW_GROUND	VARCHAR2(1000),
	STOREY_HEIGHTS_BELOW_UNIT	  VARCHAR2(1000),

	ADDRESS_ID					  NUMBER,
	
	LOD1SOLID					    SDO_GEOMETRY,
	LOD2SOLID					    SDO_GEOMETRY,
	LOD3SOLID					    SDO_GEOMETRY,
	LOD4SOLID					    SDO_GEOMETRY,
	
	LOD1MULTISURFACE		  SDO_GEOMETRY,
	LOD2MULTISURFACE			SDO_GEOMETRY,
	LOD3MULTISURFACE			SDO_GEOMETRY,
	LOD4MULTISURFACE			SDO_GEOMETRY,
	
	LOD2MULTICURVE				SDO_GEOMETRY,
	LOD3MULTICURVE				SDO_GEOMETRY,
	LOD4MULTICURVE				SDO_GEOMETRY,
	
	LOD1TERRAININTERSECTION				SDO_GEOMETRY,
	LOD2TERRAININTERSECTION				SDO_GEOMETRY,
	LOD3TERRAININTERSECTION				SDO_GEOMETRY,
	LOD4TERRAININTERSECTION				SDO_GEOMETRY,

	LOD0FOOTPRINT					SDO_GEOMETRY,
	LOD0ROOFEDGE					SDO_GEOMETRY,

	FOREIGN KEY (ID) REFERENCES CityObject(ID),
	FOREIGN KEY (PARENT_ID) REFERENCES Building(ID),	
	FOREIGN KEY (ADDRESS_ID) REFERENCES ADDRESS(ID)
);

CREATE TABLE BuildingInstallation(
	ID			        NUMBER PRIMARY KEY,
	BUILDING_ID		  NUMBER,
	CLAZZ			      VARCHAR2(256),
	CLASS_CODESPACE	VARCHAR2(1000),
	FUNC			      VARCHAR2(256),
	FUNC_CODESPACE	VARCHAR2(1000),
	USAGE			      VARCHAR2(256),
	USAGE_CODESPACE	VARCHAR2(1000),
	IS_INTERIOR		  NUMBER(1),

	LOD2GEOMETRY		SDO_GEOMETRY,
	LOD3GEOMETRY		SDO_GEOMETRY,
	LOD4GEOMETRY		SDO_GEOMETRY,
	
	LOD2IMPLICITREPRESENTATION		NUMBER,
	LOD3IMPLICITREPRESENTATION		NUMBER,
	LOD4IMPLICITREPRESENTATION		NUMBER,
	
	FOREIGN KEY (ID) REFERENCES CityObject(ID),
	FOREIGN KEY (BUILDING_ID) REFERENCES Building(ID)
);

CREATE TABLE Room(
	ID		          NUMBER PRIMARY KEY,
	BUILDING_ID	    NUMBER,
	CLAZZ		        VARCHAR2(256),
	CLASS_CODESPACE	VARCHAR2(1000),
	FUNC		        VARCHAR2(256),
	FUNC_CODESPACE	VARCHAR2(1000),
	USAGE			      VARCHAR2(256),
	USAGE_CODESPACE	VARCHAR2(1000),

	LOD4SOLID					SDO_GEOMETRY,
	LOD4MULTISURFACE	SDO_GEOMETRY,

	FOREIGN KEY (ID) REFERENCES CityObject(ID),
	FOREIGN KEY (BUILDING_ID) REFERENCES Building(ID)
);

CREATE TABLE RoomInstallation(
	ID		          NUMBER PRIMARY KEY,
	ROOM_ID		      NUMBER,
	CLAZZ		        VARCHAR2(256),
	CLASS_CODESPACE	VARCHAR2(1000),
	FUNC		        VARCHAR2(256),
	FUNC_CODESPACE	VARCHAR2(1000),
	USAGE			      VARCHAR2(256),
	USAGE_CODESPACE	VARCHAR2(1000),
	IS_MOVEABLE		  NUMBER(1),

	LOD4GEOMETRY							  SDO_GEOMETRY,
	LOD4IMPLICITREPRESENTATION	NUMBER,
	
	FOREIGN KEY (ID) REFERENCES CityObject(ID),
	FOREIGN KEY (ROOM_ID) REFERENCES Room(ID)
);

CREATE TABLE BuildingBoundary(
	ID				                NUMBER PRIMARY KEY,
	BOUNDARY_TYPE			        VARCHAR2(20),
	BUILDING_ID			          NUMBER,
	ROOM_ID				            NUMBER,
	BUILDING_INSTALLATION_ID  NUMBER,
	ROOM_INSTALLATION_ID		  NUMBER,

	LOD2MULTISURFACE			SDO_GEOMETRY,
	LOD3MULTISURFACE			SDO_GEOMETRY,
	LOD4MULTISURFACE			SDO_GEOMETRY,
	
	FOREIGN KEY (ID) REFERENCES CityObject(ID),
	FOREIGN KEY (BUILDING_ID) REFERENCES Building(ID),
	FOREIGN KEY (ROOM_ID) REFERENCES Room(ID),
	FOREIGN KEY (BUILDING_INSTALLATION_ID) REFERENCES BuildingInstallation(ID),
	FOREIGN KEY (ROOM_INSTALLATION_ID) REFERENCES RoomInstallation(ID)
);

CREATE TABLE BuildingOpening(
	ID				          NUMBER PRIMARY KEY,
	ADDRESS_ID		      NUMBER,
	BUILDINGBOUNDARY_ID	NUMBER,
	OPENING_TYPE	      VARCHAR2(10),
	
	LOD3MULTISURFACE				SDO_GEOMETRY,
	LOD4MULTISURFACE				SDO_GEOMETRY,
	
	LOD3IMPLICITREPRESENTATION		NUMBER,
	LOD4IMPLICITREPRESENTATION		NUMBER,

	FOREIGN KEY (ID) REFERENCES CityObject(ID),
	FOREIGN KEY (ADDRESS_ID) REFERENCES ADDRESS(ID),
	FOREIGN KEY (BUILDINGBOUNDARY_ID) REFERENCES BuildingBoundary(ID)
);

CREATE SEQUENCE Envelope_id_seq;
CREATE SEQUENCE CityModel_id_seq;
CREATE SEQUENCE CityObject_id_seq;
CREATE SEQUENCE ADDRESS_id_seq;

CREATE OR REPLACE TRIGGER Envelope_trg
  BEFORE INSERT ON Envelope
  FOR EACH ROW
BEGIN
  SELECT Envelope_id_seq.nextval INTO :new.id FROM dual;
END;

CREATE OR REPLACE TRIGGER CityModel_trg
  BEFORE INSERT ON CityModel
  FOR EACH ROW
BEGIN
  SELECT CityModel_id_seq.nextval INTO :new.id FROM dual;
END;

CREATE OR REPLACE TRIGGER CityObject_trg
  BEFORE INSERT ON CityObject
  FOR EACH ROW
BEGIN
  SELECT CityObject_id_seq.nextval INTO :new.id FROM dual;
END;


CREATE OR REPLACE TRIGGER ADDRESS_trg
  BEFORE INSERT ON ADDRESS
  FOR EACH ROW
BEGIN
  SELECT ADDRESS_id_seq.nextval INTO :new.id FROM dual;
END;

CREATE INDEX lod4solid_sidx ON ROOM(LOD4SOLID) INDEXTYPE IS mdsys.spatial_index;
