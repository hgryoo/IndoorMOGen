//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.10.10 at 10:41:43 AM KST 
//


package net.opengis.citygml.relief.v_2_0;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import net.opengis.gml.v_3_1_1.MultiPointPropertyType;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Type describing the mass point component of a relief feature. As subclass of _CityObject, a MassPoint
 * 				Relief inherits all attributes and relations, in particular an id, names, external references, and generalization
 * 				relations. 
 * 
 * <p>Java class for MassPointReliefType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="MassPointReliefType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.opengis.net/citygml/relief/2.0}AbstractReliefComponentType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="reliefPoints" type="{http://www.opengis.net/gml}MultiPointPropertyType"/&gt;
 *         &lt;element ref="{http://www.opengis.net/citygml/relief/2.0}_GenericApplicationPropertyOfMassPointRelief" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "MassPointReliefType", propOrder = {
    "reliefPoints",
    "genericApplicationPropertyOfMassPointRelief"
})
public class MassPointReliefType
    extends AbstractReliefComponentType
    implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    @XmlElement(required = true)
    protected MultiPointPropertyType reliefPoints;
    @XmlElement(name = "_GenericApplicationPropertyOfMassPointRelief")
    protected List<Object> genericApplicationPropertyOfMassPointRelief;

    /**
     * Gets the value of the reliefPoints property.
     * 
     * @return
     *     possible object is
     *     {@link MultiPointPropertyType }
     *     
     */
    public MultiPointPropertyType getReliefPoints() {
        return reliefPoints;
    }

    /**
     * Sets the value of the reliefPoints property.
     * 
     * @param value
     *     allowed object is
     *     {@link MultiPointPropertyType }
     *     
     */
    public void setReliefPoints(MultiPointPropertyType value) {
        this.reliefPoints = value;
    }

    public boolean isSetReliefPoints() {
        return (this.reliefPoints!= null);
    }

    /**
     * Gets the value of the genericApplicationPropertyOfMassPointRelief property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the genericApplicationPropertyOfMassPointRelief property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getGenericApplicationPropertyOfMassPointRelief().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Object }
     * 
     * 
     */
    public List<Object> getGenericApplicationPropertyOfMassPointRelief() {
        if (genericApplicationPropertyOfMassPointRelief == null) {
            genericApplicationPropertyOfMassPointRelief = new ArrayList<Object>();
        }
        return this.genericApplicationPropertyOfMassPointRelief;
    }

    public boolean isSetGenericApplicationPropertyOfMassPointRelief() {
        return ((this.genericApplicationPropertyOfMassPointRelief!= null)&&(!this.genericApplicationPropertyOfMassPointRelief.isEmpty()));
    }

    public void unsetGenericApplicationPropertyOfMassPointRelief() {
        this.genericApplicationPropertyOfMassPointRelief = null;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            MultiPointPropertyType theReliefPoints;
            theReliefPoints = this.getReliefPoints();
            strategy.appendField(locator, this, "reliefPoints", buffer, theReliefPoints);
        }
        {
            List<Object> theGenericApplicationPropertyOfMassPointRelief;
            theGenericApplicationPropertyOfMassPointRelief = (this.isSetGenericApplicationPropertyOfMassPointRelief()?this.getGenericApplicationPropertyOfMassPointRelief():null);
            strategy.appendField(locator, this, "genericApplicationPropertyOfMassPointRelief", buffer, theGenericApplicationPropertyOfMassPointRelief);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof MassPointReliefType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final MassPointReliefType that = ((MassPointReliefType) object);
        {
            MultiPointPropertyType lhsReliefPoints;
            lhsReliefPoints = this.getReliefPoints();
            MultiPointPropertyType rhsReliefPoints;
            rhsReliefPoints = that.getReliefPoints();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "reliefPoints", lhsReliefPoints), LocatorUtils.property(thatLocator, "reliefPoints", rhsReliefPoints), lhsReliefPoints, rhsReliefPoints)) {
                return false;
            }
        }
        {
            List<Object> lhsGenericApplicationPropertyOfMassPointRelief;
            lhsGenericApplicationPropertyOfMassPointRelief = (this.isSetGenericApplicationPropertyOfMassPointRelief()?this.getGenericApplicationPropertyOfMassPointRelief():null);
            List<Object> rhsGenericApplicationPropertyOfMassPointRelief;
            rhsGenericApplicationPropertyOfMassPointRelief = (that.isSetGenericApplicationPropertyOfMassPointRelief()?that.getGenericApplicationPropertyOfMassPointRelief():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "genericApplicationPropertyOfMassPointRelief", lhsGenericApplicationPropertyOfMassPointRelief), LocatorUtils.property(thatLocator, "genericApplicationPropertyOfMassPointRelief", rhsGenericApplicationPropertyOfMassPointRelief), lhsGenericApplicationPropertyOfMassPointRelief, rhsGenericApplicationPropertyOfMassPointRelief)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            MultiPointPropertyType theReliefPoints;
            theReliefPoints = this.getReliefPoints();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "reliefPoints", theReliefPoints), currentHashCode, theReliefPoints);
        }
        {
            List<Object> theGenericApplicationPropertyOfMassPointRelief;
            theGenericApplicationPropertyOfMassPointRelief = (this.isSetGenericApplicationPropertyOfMassPointRelief()?this.getGenericApplicationPropertyOfMassPointRelief():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "genericApplicationPropertyOfMassPointRelief", theGenericApplicationPropertyOfMassPointRelief), currentHashCode, theGenericApplicationPropertyOfMassPointRelief);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        super.copyTo(locator, draftCopy, strategy);
        if (draftCopy instanceof MassPointReliefType) {
            final MassPointReliefType copy = ((MassPointReliefType) draftCopy);
            if (this.isSetReliefPoints()) {
                MultiPointPropertyType sourceReliefPoints;
                sourceReliefPoints = this.getReliefPoints();
                MultiPointPropertyType copyReliefPoints = ((MultiPointPropertyType) strategy.copy(LocatorUtils.property(locator, "reliefPoints", sourceReliefPoints), sourceReliefPoints));
                copy.setReliefPoints(copyReliefPoints);
            } else {
                copy.reliefPoints = null;
            }
            if (this.isSetGenericApplicationPropertyOfMassPointRelief()) {
                List<Object> sourceGenericApplicationPropertyOfMassPointRelief;
                sourceGenericApplicationPropertyOfMassPointRelief = (this.isSetGenericApplicationPropertyOfMassPointRelief()?this.getGenericApplicationPropertyOfMassPointRelief():null);
                @SuppressWarnings("unchecked")
                List<Object> copyGenericApplicationPropertyOfMassPointRelief = ((List<Object> ) strategy.copy(LocatorUtils.property(locator, "genericApplicationPropertyOfMassPointRelief", sourceGenericApplicationPropertyOfMassPointRelief), sourceGenericApplicationPropertyOfMassPointRelief));
                copy.unsetGenericApplicationPropertyOfMassPointRelief();
                if (copyGenericApplicationPropertyOfMassPointRelief!= null) {
                    List<Object> uniqueGenericApplicationPropertyOfMassPointReliefl = copy.getGenericApplicationPropertyOfMassPointRelief();
                    uniqueGenericApplicationPropertyOfMassPointReliefl.addAll(copyGenericApplicationPropertyOfMassPointRelief);
                }
            } else {
                copy.unsetGenericApplicationPropertyOfMassPointRelief();
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new MassPointReliefType();
    }

}
