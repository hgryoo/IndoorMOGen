//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.10.10 at 10:41:43 AM KST 
//


package net.opengis.gml.v_3_1_1;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAnyElement;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlType;
import net.opengis.citygml.appearance.v_2_0.AbstractSurfaceDataType;
import net.opengis.citygml.appearance.v_2_0.AbstractTextureType;
import net.opengis.citygml.appearance.v_2_0.AppearanceType;
import net.opengis.citygml.appearance.v_2_0.GeoreferencedTextureType;
import net.opengis.citygml.appearance.v_2_0.ParameterizedTextureType;
import net.opengis.citygml.appearance.v_2_0.X3DMaterialType;
import net.opengis.citygml.bridge.v_2_0.AbstractBridgeType;
import net.opengis.citygml.bridge.v_2_0.BridgeConstructionElementType;
import net.opengis.citygml.bridge.v_2_0.BridgeFurnitureType;
import net.opengis.citygml.bridge.v_2_0.BridgeInstallationType;
import net.opengis.citygml.bridge.v_2_0.BridgePartType;
import net.opengis.citygml.bridge.v_2_0.BridgeRoomType;
import net.opengis.citygml.bridge.v_2_0.BridgeType;
import net.opengis.citygml.bridge.v_2_0.IntBridgeInstallationType;
import net.opengis.citygml.building.v_2_0.AbstractBuildingType;
import net.opengis.citygml.building.v_2_0.BuildingFurnitureType;
import net.opengis.citygml.building.v_2_0.BuildingInstallationType;
import net.opengis.citygml.building.v_2_0.BuildingPartType;
import net.opengis.citygml.building.v_2_0.BuildingType;
import net.opengis.citygml.building.v_2_0.IntBuildingInstallationType;
import net.opengis.citygml.building.v_2_0.RoomType;
import net.opengis.citygml.cityfurniture.v_2_0.CityFurnitureType;
import net.opengis.citygml.cityobjectgroup.v_2_0.CityObjectGroupType;
import net.opengis.citygml.generics.v_2_0.GenericCityObjectType;
import net.opengis.citygml.landUse.v_2_0.LandUseType;
import net.opengis.citygml.relief.v_2_0.AbstractReliefComponentType;
import net.opengis.citygml.relief.v_2_0.BreaklineReliefType;
import net.opengis.citygml.relief.v_2_0.MassPointReliefType;
import net.opengis.citygml.relief.v_2_0.RasterReliefType;
import net.opengis.citygml.relief.v_2_0.ReliefFeatureType;
import net.opengis.citygml.relief.v_2_0.TINReliefType;
import net.opengis.citygml.transportation.v_2_0.AbstractTransportationObjectType;
import net.opengis.citygml.transportation.v_2_0.AuxiliaryTrafficAreaType;
import net.opengis.citygml.transportation.v_2_0.RailwayType;
import net.opengis.citygml.transportation.v_2_0.RoadType;
import net.opengis.citygml.transportation.v_2_0.SquareType;
import net.opengis.citygml.transportation.v_2_0.TrackType;
import net.opengis.citygml.transportation.v_2_0.TrafficAreaType;
import net.opengis.citygml.transportation.v_2_0.TransportationComplexType;
import net.opengis.citygml.tunnel.v_2_0.AbstractTunnelType;
import net.opengis.citygml.tunnel.v_2_0.HollowSpaceType;
import net.opengis.citygml.tunnel.v_2_0.IntTunnelInstallationType;
import net.opengis.citygml.tunnel.v_2_0.TunnelFurnitureType;
import net.opengis.citygml.tunnel.v_2_0.TunnelInstallationType;
import net.opengis.citygml.tunnel.v_2_0.TunnelPartType;
import net.opengis.citygml.tunnel.v_2_0.TunnelType;
import net.opengis.citygml.v_2_0.AbstractCityObjectType;
import net.opengis.citygml.v_2_0.AbstractSiteType;
import net.opengis.citygml.v_2_0.AddressType;
import net.opengis.citygml.v_2_0.CityModelType;
import net.opengis.citygml.vegetation.v_2_0.AbstractVegetationObjectType;
import net.opengis.citygml.vegetation.v_2_0.PlantCoverType;
import net.opengis.citygml.vegetation.v_2_0.SolitaryVegetationObjectType;
import net.opengis.citygml.waterbody.v_2_0.AbstractWaterBoundarySurfaceType;
import net.opengis.citygml.waterbody.v_2_0.AbstractWaterObjectType;
import net.opengis.citygml.waterbody.v_2_0.WaterBodyType;
import net.opengis.citygml.waterbody.v_2_0.WaterClosureSurfaceType;
import net.opengis.citygml.waterbody.v_2_0.WaterGroundSurfaceType;
import net.opengis.citygml.waterbody.v_2_0.WaterSurfaceType;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;
import org.w3c.dom.Element;


/**
 * Container for features - follow gml:ArrayAssociationType pattern.
 * 
 * <p>Java class for FeatureArrayPropertyType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="FeatureArrayPropertyType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{http://www.opengis.net/gml}_Feature" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "FeatureArrayPropertyType", propOrder = {
    "feature"
})
public class FeatureArrayPropertyType
    implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    @XmlElementRef(name = "_Feature", namespace = "http://www.opengis.net/gml", type = JAXBElement.class, required = false)
    @XmlAnyElement(lax = true)
    protected List<Object> feature;

    /**
     * Gets the value of the feature property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the feature property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getFeature().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link JAXBElement }{@code <}{@link RasterReliefType }{@code >}
     * {@link JAXBElement }{@code <}{@link net.opengis.citygml.building.v_2_0.InteriorWallSurfaceType }{@code >}
     * {@link JAXBElement }{@code <}{@link MultiCurveCoverageType }{@code >}
     * {@link JAXBElement }{@code <}{@link WaterSurfaceType }{@code >}
     * {@link JAXBElement }{@code <}{@link AuxiliaryTrafficAreaType }{@code >}
     * {@link JAXBElement }{@code <}{@link net.opengis.citygml.building.v_2_0.WallSurfaceType }{@code >}
     * {@link JAXBElement }{@code <}{@link net.opengis.citygml.bridge.v_2_0.WallSurfaceType }{@code >}
     * {@link JAXBElement }{@code <}{@link ReliefFeatureType }{@code >}
     * {@link JAXBElement }{@code <}{@link TunnelInstallationType }{@code >}
     * {@link JAXBElement }{@code <}{@link WaterClosureSurfaceType }{@code >}
     * {@link JAXBElement }{@code <}{@link WaterBodyType }{@code >}
     * {@link JAXBElement }{@code <}{@link AppearanceType }{@code >}
     * {@link JAXBElement }{@code <}{@link CityObjectGroupType }{@code >}
     * {@link JAXBElement }{@code <}{@link SquareType }{@code >}
     * {@link JAXBElement }{@code <}{@link HollowSpaceType }{@code >}
     * {@link JAXBElement }{@code <}{@link net.opengis.citygml.tunnel.v_2_0.WindowType }{@code >}
     * {@link Element }
     * {@link JAXBElement }{@code <}{@link GeoreferencedTextureType }{@code >}
     * {@link JAXBElement }{@code <}{@link CityFurnitureType }{@code >}
     * {@link JAXBElement }{@code <}{@link FeatureCollectionType }{@code >}
     * {@link JAXBElement }{@code <}{@link net.opengis.citygml.building.v_2_0.AbstractOpeningType }{@code >}
     * {@link JAXBElement }{@code <}{@link MultiSurfaceCoverageType }{@code >}
     * {@link JAXBElement }{@code <}{@link AbstractBuildingType }{@code >}
     * {@link JAXBElement }{@code <}{@link ObservationType }{@code >}
     * {@link JAXBElement }{@code <}{@link net.opengis.citygml.tunnel.v_2_0.FloorSurfaceType }{@code >}
     * {@link JAXBElement }{@code <}{@link BridgeFurnitureType }{@code >}
     * {@link JAXBElement }{@code <}{@link PlantCoverType }{@code >}
     * {@link JAXBElement }{@code <}{@link TunnelFurnitureType }{@code >}
     * {@link JAXBElement }{@code <}{@link AbstractTransportationObjectType }{@code >}
     * {@link JAXBElement }{@code <}{@link net.opengis.citygml.bridge.v_2_0.AbstractOpeningType }{@code >}
     * {@link JAXBElement }{@code <}{@link TINReliefType }{@code >}
     * {@link JAXBElement }{@code <}{@link net.opengis.citygml.building.v_2_0.GroundSurfaceType }{@code >}
     * {@link JAXBElement }{@code <}{@link BuildingFurnitureType }{@code >}
     * {@link JAXBElement }{@code <}{@link TunnelPartType }{@code >}
     * {@link JAXBElement }{@code <}{@link RailwayType }{@code >}
     * {@link JAXBElement }{@code <}{@link RectifiedGridCoverageType }{@code >}
     * {@link JAXBElement }{@code <}{@link AbstractCoverageType }{@code >}
     * {@link JAXBElement }{@code <}{@link AbstractContinuousCoverageType }{@code >}
     * {@link JAXBElement }{@code <}{@link AbstractTunnelType }{@code >}
     * {@link JAXBElement }{@code <}{@link AbstractWaterBoundarySurfaceType }{@code >}
     * {@link JAXBElement }{@code <}{@link net.opengis.citygml.bridge.v_2_0.AbstractBoundarySurfaceType }{@code >}
     * {@link JAXBElement }{@code <}{@link net.opengis.citygml.building.v_2_0.AbstractBoundarySurfaceType }{@code >}
     * {@link JAXBElement }{@code <}{@link net.opengis.citygml.tunnel.v_2_0.CeilingSurfaceType }{@code >}
     * {@link JAXBElement }{@code <}{@link BuildingType }{@code >}
     * {@link JAXBElement }{@code <}{@link AbstractTextureType }{@code >}
     * {@link JAXBElement }{@code <}{@link TunnelType }{@code >}
     * {@link JAXBElement }{@code <}{@link net.opengis.citygml.building.v_2_0.CeilingSurfaceType }{@code >}
     * {@link JAXBElement }{@code <}{@link RoomType }{@code >}
     * {@link JAXBElement }{@code <}{@link CityModelType }{@code >}
     * {@link JAXBElement }{@code <}{@link AbstractSurfaceDataType }{@code >}
     * {@link JAXBElement }{@code <}{@link net.opengis.citygml.tunnel.v_2_0.OuterFloorSurfaceType }{@code >}
     * {@link JAXBElement }{@code <}{@link GridCoverageType }{@code >}
     * {@link JAXBElement }{@code <}{@link AbstractVegetationObjectType }{@code >}
     * {@link JAXBElement }{@code <}{@link BuildingPartType }{@code >}
     * {@link JAXBElement }{@code <}{@link BridgeConstructionElementType }{@code >}
     * {@link JAXBElement }{@code <}{@link MultiSolidCoverageType }{@code >}
     * {@link JAXBElement }{@code <}{@link net.opengis.citygml.bridge.v_2_0.CeilingSurfaceType }{@code >}
     * {@link Object }
     * {@link JAXBElement }{@code <}{@link IntBridgeInstallationType }{@code >}
     * {@link JAXBElement }{@code <}{@link AbstractCityObjectType }{@code >}
     * {@link JAXBElement }{@code <}{@link AbstractReliefComponentType }{@code >}
     * {@link JAXBElement }{@code <}{@link GenericCityObjectType }{@code >}
     * {@link JAXBElement }{@code <}{@link MassPointReliefType }{@code >}
     * {@link JAXBElement }{@code <}{@link LandUseType }{@code >}
     * {@link JAXBElement }{@code <}{@link DirectedObservationType }{@code >}
     * {@link JAXBElement }{@code <}{@link net.opengis.citygml.bridge.v_2_0.InteriorWallSurfaceType }{@code >}
     * {@link JAXBElement }{@code <}{@link net.opengis.citygml.tunnel.v_2_0.AbstractOpeningType }{@code >}
     * {@link JAXBElement }{@code <}{@link DirectedObservationAtDistanceType }{@code >}
     * {@link JAXBElement }{@code <}{@link BreaklineReliefType }{@code >}
     * {@link JAXBElement }{@code <}{@link net.opengis.citygml.tunnel.v_2_0.ClosureSurfaceType }{@code >}
     * {@link JAXBElement }{@code <}{@link net.opengis.citygml.bridge.v_2_0.RoofSurfaceType }{@code >}
     * {@link JAXBElement }{@code <}{@link net.opengis.citygml.building.v_2_0.OuterCeilingSurfaceType }{@code >}
     * {@link JAXBElement }{@code <}{@link TransportationComplexType }{@code >}
     * {@link JAXBElement }{@code <}{@link net.opengis.citygml.building.v_2_0.WindowType }{@code >}
     * {@link JAXBElement }{@code <}{@link net.opengis.citygml.tunnel.v_2_0.GroundSurfaceType }{@code >}
     * {@link JAXBElement }{@code <}{@link BridgeInstallationType }{@code >}
     * {@link JAXBElement }{@code <}{@link BridgePartType }{@code >}
     * {@link JAXBElement }{@code <}{@link TrafficAreaType }{@code >}
     * {@link JAXBElement }{@code <}{@link BridgeType }{@code >}
     * {@link JAXBElement }{@code <}{@link WaterGroundSurfaceType }{@code >}
     * {@link JAXBElement }{@code <}{@link net.opengis.citygml.bridge.v_2_0.GroundSurfaceType }{@code >}
     * {@link JAXBElement }{@code <}{@link AbstractFeatureType }{@code >}
     * {@link JAXBElement }{@code <}{@link net.opengis.citygml.tunnel.v_2_0.RoofSurfaceType }{@code >}
     * {@link JAXBElement }{@code <}{@link ParameterizedTextureType }{@code >}
     * {@link JAXBElement }{@code <}{@link MultiPointCoverageType }{@code >}
     * {@link JAXBElement }{@code <}{@link IntTunnelInstallationType }{@code >}
     * {@link JAXBElement }{@code <}{@link net.opengis.citygml.tunnel.v_2_0.WallSurfaceType }{@code >}
     * {@link JAXBElement }{@code <}{@link net.opengis.citygml.tunnel.v_2_0.AbstractBoundarySurfaceType }{@code >}
     * {@link JAXBElement }{@code <}{@link net.opengis.citygml.bridge.v_2_0.FloorSurfaceType }{@code >}
     * {@link JAXBElement }{@code <}{@link net.opengis.citygml.building.v_2_0.OuterFloorSurfaceType }{@code >}
     * {@link JAXBElement }{@code <}{@link net.opengis.citygml.tunnel.v_2_0.DoorType }{@code >}
     * {@link JAXBElement }{@code <}{@link net.opengis.citygml.bridge.v_2_0.WindowType }{@code >}
     * {@link JAXBElement }{@code <}{@link BridgeRoomType }{@code >}
     * {@link JAXBElement }{@code <}{@link net.opengis.citygml.bridge.v_2_0.ClosureSurfaceType }{@code >}
     * {@link JAXBElement }{@code <}{@link TrackType }{@code >}
     * {@link JAXBElement }{@code <}{@link SolitaryVegetationObjectType }{@code >}
     * {@link JAXBElement }{@code <}{@link AbstractBridgeType }{@code >}
     * {@link JAXBElement }{@code <}{@link AbstractWaterObjectType }{@code >}
     * {@link JAXBElement }{@code <}{@link net.opengis.citygml.bridge.v_2_0.DoorType }{@code >}
     * {@link JAXBElement }{@code <}{@link net.opengis.citygml.building.v_2_0.DoorType }{@code >}
     * {@link JAXBElement }{@code <}{@link AbstractSiteType }{@code >}
     * {@link JAXBElement }{@code <}{@link net.opengis.citygml.building.v_2_0.FloorSurfaceType }{@code >}
     * {@link JAXBElement }{@code <}{@link net.opengis.citygml.building.v_2_0.RoofSurfaceType }{@code >}
     * {@link JAXBElement }{@code <}{@link AbstractDiscreteCoverageType }{@code >}
     * {@link JAXBElement }{@code <}{@link net.opengis.citygml.bridge.v_2_0.OuterFloorSurfaceType }{@code >}
     * {@link JAXBElement }{@code <}{@link AddressType }{@code >}
     * {@link JAXBElement }{@code <}{@link AbstractFeatureCollectionType }{@code >}
     * {@link JAXBElement }{@code <}{@link IntBuildingInstallationType }{@code >}
     * {@link JAXBElement }{@code <}{@link RoadType }{@code >}
     * {@link JAXBElement }{@code <}{@link net.opengis.citygml.bridge.v_2_0.OuterCeilingSurfaceType }{@code >}
     * {@link JAXBElement }{@code <}{@link net.opengis.citygml.tunnel.v_2_0.OuterCeilingSurfaceType }{@code >}
     * {@link JAXBElement }{@code <}{@link net.opengis.citygml.building.v_2_0.ClosureSurfaceType }{@code >}
     * {@link JAXBElement }{@code <}{@link X3DMaterialType }{@code >}
     * {@link JAXBElement }{@code <}{@link net.opengis.citygml.tunnel.v_2_0.InteriorWallSurfaceType }{@code >}
     * {@link JAXBElement }{@code <}{@link BuildingInstallationType }{@code >}
     * 
     * 
     */
    public List<Object> getFeature() {
        if (feature == null) {
            feature = new ArrayList<Object>();
        }
        return this.feature;
    }

    public boolean isSetFeature() {
        return ((this.feature!= null)&&(!this.feature.isEmpty()));
    }

    public void unsetFeature() {
        this.feature = null;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            List<Object> theFeature;
            theFeature = (this.isSetFeature()?this.getFeature():null);
            strategy.appendField(locator, this, "feature", buffer, theFeature);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof FeatureArrayPropertyType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final FeatureArrayPropertyType that = ((FeatureArrayPropertyType) object);
        {
            List<Object> lhsFeature;
            lhsFeature = (this.isSetFeature()?this.getFeature():null);
            List<Object> rhsFeature;
            rhsFeature = (that.isSetFeature()?that.getFeature():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "feature", lhsFeature), LocatorUtils.property(thatLocator, "feature", rhsFeature), lhsFeature, rhsFeature)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            List<Object> theFeature;
            theFeature = (this.isSetFeature()?this.getFeature():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "feature", theFeature), currentHashCode, theFeature);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof FeatureArrayPropertyType) {
            final FeatureArrayPropertyType copy = ((FeatureArrayPropertyType) draftCopy);
            if (this.isSetFeature()) {
                List<Object> sourceFeature;
                sourceFeature = (this.isSetFeature()?this.getFeature():null);
                @SuppressWarnings("unchecked")
                List<Object> copyFeature = ((List<Object> ) strategy.copy(LocatorUtils.property(locator, "feature", sourceFeature), sourceFeature));
                copy.unsetFeature();
                if (copyFeature!= null) {
                    List<Object> uniqueFeaturel = copy.getFeature();
                    uniqueFeaturel.addAll(copyFeature);
                }
            } else {
                copy.unsetFeature();
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new FeatureArrayPropertyType();
    }

}
