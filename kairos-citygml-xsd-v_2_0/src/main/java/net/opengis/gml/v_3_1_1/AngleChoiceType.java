//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.10.10 at 10:41:43 AM KST 
//


package net.opengis.gml.v_3_1_1;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Value of an angle quantity provided in either degree-minute-second format or single value format.
 * 
 * <p>Java class for AngleChoiceType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="AngleChoiceType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;choice&gt;
 *         &lt;element ref="{http://www.opengis.net/gml}angle"/&gt;
 *         &lt;element ref="{http://www.opengis.net/gml}dmsAngle"/&gt;
 *       &lt;/choice&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "AngleChoiceType", propOrder = {
    "angle",
    "dmsAngle"
})
public class AngleChoiceType
    implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    protected MeasureType angle;
    protected DMSAngleType dmsAngle;

    /**
     * Gets the value of the angle property.
     * 
     * @return
     *     possible object is
     *     {@link MeasureType }
     *     
     */
    public MeasureType getAngle() {
        return angle;
    }

    /**
     * Sets the value of the angle property.
     * 
     * @param value
     *     allowed object is
     *     {@link MeasureType }
     *     
     */
    public void setAngle(MeasureType value) {
        this.angle = value;
    }

    public boolean isSetAngle() {
        return (this.angle!= null);
    }

    /**
     * Gets the value of the dmsAngle property.
     * 
     * @return
     *     possible object is
     *     {@link DMSAngleType }
     *     
     */
    public DMSAngleType getDmsAngle() {
        return dmsAngle;
    }

    /**
     * Sets the value of the dmsAngle property.
     * 
     * @param value
     *     allowed object is
     *     {@link DMSAngleType }
     *     
     */
    public void setDmsAngle(DMSAngleType value) {
        this.dmsAngle = value;
    }

    public boolean isSetDmsAngle() {
        return (this.dmsAngle!= null);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            MeasureType theAngle;
            theAngle = this.getAngle();
            strategy.appendField(locator, this, "angle", buffer, theAngle);
        }
        {
            DMSAngleType theDmsAngle;
            theDmsAngle = this.getDmsAngle();
            strategy.appendField(locator, this, "dmsAngle", buffer, theDmsAngle);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof AngleChoiceType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final AngleChoiceType that = ((AngleChoiceType) object);
        {
            MeasureType lhsAngle;
            lhsAngle = this.getAngle();
            MeasureType rhsAngle;
            rhsAngle = that.getAngle();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "angle", lhsAngle), LocatorUtils.property(thatLocator, "angle", rhsAngle), lhsAngle, rhsAngle)) {
                return false;
            }
        }
        {
            DMSAngleType lhsDmsAngle;
            lhsDmsAngle = this.getDmsAngle();
            DMSAngleType rhsDmsAngle;
            rhsDmsAngle = that.getDmsAngle();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dmsAngle", lhsDmsAngle), LocatorUtils.property(thatLocator, "dmsAngle", rhsDmsAngle), lhsDmsAngle, rhsDmsAngle)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            MeasureType theAngle;
            theAngle = this.getAngle();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "angle", theAngle), currentHashCode, theAngle);
        }
        {
            DMSAngleType theDmsAngle;
            theDmsAngle = this.getDmsAngle();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dmsAngle", theDmsAngle), currentHashCode, theDmsAngle);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof AngleChoiceType) {
            final AngleChoiceType copy = ((AngleChoiceType) draftCopy);
            if (this.isSetAngle()) {
                MeasureType sourceAngle;
                sourceAngle = this.getAngle();
                MeasureType copyAngle = ((MeasureType) strategy.copy(LocatorUtils.property(locator, "angle", sourceAngle), sourceAngle));
                copy.setAngle(copyAngle);
            } else {
                copy.angle = null;
            }
            if (this.isSetDmsAngle()) {
                DMSAngleType sourceDmsAngle;
                sourceDmsAngle = this.getDmsAngle();
                DMSAngleType copyDmsAngle = ((DMSAngleType) strategy.copy(LocatorUtils.property(locator, "dmsAngle", sourceDmsAngle), sourceDmsAngle));
                copy.setDmsAngle(copyDmsAngle);
            } else {
                copy.dmsAngle = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new AngleChoiceType();
    }

}
