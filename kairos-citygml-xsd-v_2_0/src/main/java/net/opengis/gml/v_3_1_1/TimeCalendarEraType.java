//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.10.10 at 10:41:43 AM KST 
//


package net.opengis.gml.v_3_1_1;

import java.math.BigDecimal;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * In every calendar, years are numbered relative to the date of a 
 *       reference event that defines a calendar era. 
 *       In this implementation, we omit the back-pointer "datingSystem".
 * 
 * <p>Java class for TimeCalendarEraType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="TimeCalendarEraType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.opengis.net/gml}DefinitionType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="referenceEvent" type="{http://www.opengis.net/gml}StringOrRefType"/&gt;
 *         &lt;element name="referenceDate" type="{http://www.w3.org/2001/XMLSchema}date" minOccurs="0"/&gt;
 *         &lt;element name="julianReference" type="{http://www.w3.org/2001/XMLSchema}decimal"/&gt;
 *         &lt;element name="epochOfUse" type="{http://www.opengis.net/gml}TimePeriodPropertyType"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "TimeCalendarEraType", propOrder = {
    "referenceEvent",
    "referenceDate",
    "julianReference",
    "epochOfUse"
})
public class TimeCalendarEraType
    extends DefinitionType
    implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    @XmlElement(required = true)
    protected StringOrRefType referenceEvent;
    @XmlElement(defaultValue = "0001-01-01")
    @XmlSchemaType(name = "date")
    protected XMLGregorianCalendar referenceDate;
    @XmlElement(required = true)
    protected BigDecimal julianReference;
    @XmlElement(required = true)
    protected TimePeriodPropertyType epochOfUse;

    /**
     * Gets the value of the referenceEvent property.
     * 
     * @return
     *     possible object is
     *     {@link StringOrRefType }
     *     
     */
    public StringOrRefType getReferenceEvent() {
        return referenceEvent;
    }

    /**
     * Sets the value of the referenceEvent property.
     * 
     * @param value
     *     allowed object is
     *     {@link StringOrRefType }
     *     
     */
    public void setReferenceEvent(StringOrRefType value) {
        this.referenceEvent = value;
    }

    public boolean isSetReferenceEvent() {
        return (this.referenceEvent!= null);
    }

    /**
     * Gets the value of the referenceDate property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getReferenceDate() {
        return referenceDate;
    }

    /**
     * Sets the value of the referenceDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setReferenceDate(XMLGregorianCalendar value) {
        this.referenceDate = value;
    }

    public boolean isSetReferenceDate() {
        return (this.referenceDate!= null);
    }

    /**
     * Gets the value of the julianReference property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getJulianReference() {
        return julianReference;
    }

    /**
     * Sets the value of the julianReference property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setJulianReference(BigDecimal value) {
        this.julianReference = value;
    }

    public boolean isSetJulianReference() {
        return (this.julianReference!= null);
    }

    /**
     * Gets the value of the epochOfUse property.
     * 
     * @return
     *     possible object is
     *     {@link TimePeriodPropertyType }
     *     
     */
    public TimePeriodPropertyType getEpochOfUse() {
        return epochOfUse;
    }

    /**
     * Sets the value of the epochOfUse property.
     * 
     * @param value
     *     allowed object is
     *     {@link TimePeriodPropertyType }
     *     
     */
    public void setEpochOfUse(TimePeriodPropertyType value) {
        this.epochOfUse = value;
    }

    public boolean isSetEpochOfUse() {
        return (this.epochOfUse!= null);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            StringOrRefType theReferenceEvent;
            theReferenceEvent = this.getReferenceEvent();
            strategy.appendField(locator, this, "referenceEvent", buffer, theReferenceEvent);
        }
        {
            XMLGregorianCalendar theReferenceDate;
            theReferenceDate = this.getReferenceDate();
            strategy.appendField(locator, this, "referenceDate", buffer, theReferenceDate);
        }
        {
            BigDecimal theJulianReference;
            theJulianReference = this.getJulianReference();
            strategy.appendField(locator, this, "julianReference", buffer, theJulianReference);
        }
        {
            TimePeriodPropertyType theEpochOfUse;
            theEpochOfUse = this.getEpochOfUse();
            strategy.appendField(locator, this, "epochOfUse", buffer, theEpochOfUse);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof TimeCalendarEraType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final TimeCalendarEraType that = ((TimeCalendarEraType) object);
        {
            StringOrRefType lhsReferenceEvent;
            lhsReferenceEvent = this.getReferenceEvent();
            StringOrRefType rhsReferenceEvent;
            rhsReferenceEvent = that.getReferenceEvent();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "referenceEvent", lhsReferenceEvent), LocatorUtils.property(thatLocator, "referenceEvent", rhsReferenceEvent), lhsReferenceEvent, rhsReferenceEvent)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsReferenceDate;
            lhsReferenceDate = this.getReferenceDate();
            XMLGregorianCalendar rhsReferenceDate;
            rhsReferenceDate = that.getReferenceDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "referenceDate", lhsReferenceDate), LocatorUtils.property(thatLocator, "referenceDate", rhsReferenceDate), lhsReferenceDate, rhsReferenceDate)) {
                return false;
            }
        }
        {
            BigDecimal lhsJulianReference;
            lhsJulianReference = this.getJulianReference();
            BigDecimal rhsJulianReference;
            rhsJulianReference = that.getJulianReference();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "julianReference", lhsJulianReference), LocatorUtils.property(thatLocator, "julianReference", rhsJulianReference), lhsJulianReference, rhsJulianReference)) {
                return false;
            }
        }
        {
            TimePeriodPropertyType lhsEpochOfUse;
            lhsEpochOfUse = this.getEpochOfUse();
            TimePeriodPropertyType rhsEpochOfUse;
            rhsEpochOfUse = that.getEpochOfUse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "epochOfUse", lhsEpochOfUse), LocatorUtils.property(thatLocator, "epochOfUse", rhsEpochOfUse), lhsEpochOfUse, rhsEpochOfUse)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            StringOrRefType theReferenceEvent;
            theReferenceEvent = this.getReferenceEvent();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "referenceEvent", theReferenceEvent), currentHashCode, theReferenceEvent);
        }
        {
            XMLGregorianCalendar theReferenceDate;
            theReferenceDate = this.getReferenceDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "referenceDate", theReferenceDate), currentHashCode, theReferenceDate);
        }
        {
            BigDecimal theJulianReference;
            theJulianReference = this.getJulianReference();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "julianReference", theJulianReference), currentHashCode, theJulianReference);
        }
        {
            TimePeriodPropertyType theEpochOfUse;
            theEpochOfUse = this.getEpochOfUse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "epochOfUse", theEpochOfUse), currentHashCode, theEpochOfUse);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        super.copyTo(locator, draftCopy, strategy);
        if (draftCopy instanceof TimeCalendarEraType) {
            final TimeCalendarEraType copy = ((TimeCalendarEraType) draftCopy);
            if (this.isSetReferenceEvent()) {
                StringOrRefType sourceReferenceEvent;
                sourceReferenceEvent = this.getReferenceEvent();
                StringOrRefType copyReferenceEvent = ((StringOrRefType) strategy.copy(LocatorUtils.property(locator, "referenceEvent", sourceReferenceEvent), sourceReferenceEvent));
                copy.setReferenceEvent(copyReferenceEvent);
            } else {
                copy.referenceEvent = null;
            }
            if (this.isSetReferenceDate()) {
                XMLGregorianCalendar sourceReferenceDate;
                sourceReferenceDate = this.getReferenceDate();
                XMLGregorianCalendar copyReferenceDate = ((XMLGregorianCalendar) strategy.copy(LocatorUtils.property(locator, "referenceDate", sourceReferenceDate), sourceReferenceDate));
                copy.setReferenceDate(copyReferenceDate);
            } else {
                copy.referenceDate = null;
            }
            if (this.isSetJulianReference()) {
                BigDecimal sourceJulianReference;
                sourceJulianReference = this.getJulianReference();
                BigDecimal copyJulianReference = ((BigDecimal) strategy.copy(LocatorUtils.property(locator, "julianReference", sourceJulianReference), sourceJulianReference));
                copy.setJulianReference(copyJulianReference);
            } else {
                copy.julianReference = null;
            }
            if (this.isSetEpochOfUse()) {
                TimePeriodPropertyType sourceEpochOfUse;
                sourceEpochOfUse = this.getEpochOfUse();
                TimePeriodPropertyType copyEpochOfUse = ((TimePeriodPropertyType) strategy.copy(LocatorUtils.property(locator, "epochOfUse", sourceEpochOfUse), sourceEpochOfUse));
                copy.setEpochOfUse(copyEpochOfUse);
            } else {
                copy.epochOfUse = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new TimeCalendarEraType();
    }

}
