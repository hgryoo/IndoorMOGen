//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.10.10 at 10:41:43 AM KST 
//


package oasis.names.tc.ciq.xsdschema.xal;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAnyAttribute;
import javax.xml.bind.annotation.XmlAnyElement;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;
import javax.xml.namespace.QName;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}AddressLine" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="PostBoxNumber"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                 &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
 *                 &lt;anyAttribute namespace='##other'/&gt;
 *               &lt;/restriction&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="PostBoxNumberPrefix" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                 &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
 *                 &lt;attribute name="NumberPrefixSeparator" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *                 &lt;anyAttribute namespace='##other'/&gt;
 *               &lt;/restriction&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="PostBoxNumberSuffix" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                 &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
 *                 &lt;attribute name="NumberSuffixSeparator" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *                 &lt;anyAttribute namespace='##other'/&gt;
 *               &lt;/restriction&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="PostBoxNumberExtension" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                 &lt;attribute name="NumberExtensionSeparator" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *                 &lt;anyAttribute namespace='##other'/&gt;
 *               &lt;/restriction&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="Firm" type="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}FirmType" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}PostalCode" minOccurs="0"/&gt;
 *         &lt;any namespace='##other' maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *       &lt;attribute name="Indicator" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *       &lt;anyAttribute namespace='##other'/&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "addressLine",
    "postBoxNumber",
    "postBoxNumberPrefix",
    "postBoxNumberSuffix",
    "postBoxNumberExtension",
    "firm",
    "postalCode",
    "any"
})
@XmlRootElement(name = "PostBox")
public class PostBoxElement
    implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    @XmlElement(name = "AddressLine")
    protected List<AddressLineElement> addressLine;
    @XmlElement(name = "PostBoxNumber", required = true)
    protected PostBoxElement.PostBoxNumber postBoxNumber;
    @XmlElement(name = "PostBoxNumberPrefix")
    protected PostBoxElement.PostBoxNumberPrefix postBoxNumberPrefix;
    @XmlElement(name = "PostBoxNumberSuffix")
    protected PostBoxElement.PostBoxNumberSuffix postBoxNumberSuffix;
    @XmlElement(name = "PostBoxNumberExtension")
    protected PostBoxElement.PostBoxNumberExtension postBoxNumberExtension;
    @XmlElement(name = "Firm")
    protected FirmType firm;
    @XmlElement(name = "PostalCode")
    protected PostalCodeElement postalCode;
    @XmlAnyElement(lax = true)
    protected List<Object> any;
    @XmlAttribute(name = "Type")
    @XmlSchemaType(name = "anySimpleType")
    protected String type;
    @XmlAttribute(name = "Indicator")
    @XmlSchemaType(name = "anySimpleType")
    protected String indicator;
    @XmlAnyAttribute
    private Map<QName, String> otherAttributes = new HashMap<QName, String>();

    /**
     * Gets the value of the addressLine property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the addressLine property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAddressLine().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AddressLineElement }
     * 
     * 
     */
    public List<AddressLineElement> getAddressLine() {
        if (addressLine == null) {
            addressLine = new ArrayList<AddressLineElement>();
        }
        return this.addressLine;
    }

    public boolean isSetAddressLine() {
        return ((this.addressLine!= null)&&(!this.addressLine.isEmpty()));
    }

    public void unsetAddressLine() {
        this.addressLine = null;
    }

    /**
     * Gets the value of the postBoxNumber property.
     * 
     * @return
     *     possible object is
     *     {@link PostBoxElement.PostBoxNumber }
     *     
     */
    public PostBoxElement.PostBoxNumber getPostBoxNumber() {
        return postBoxNumber;
    }

    /**
     * Sets the value of the postBoxNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link PostBoxElement.PostBoxNumber }
     *     
     */
    public void setPostBoxNumber(PostBoxElement.PostBoxNumber value) {
        this.postBoxNumber = value;
    }

    public boolean isSetPostBoxNumber() {
        return (this.postBoxNumber!= null);
    }

    /**
     * Gets the value of the postBoxNumberPrefix property.
     * 
     * @return
     *     possible object is
     *     {@link PostBoxElement.PostBoxNumberPrefix }
     *     
     */
    public PostBoxElement.PostBoxNumberPrefix getPostBoxNumberPrefix() {
        return postBoxNumberPrefix;
    }

    /**
     * Sets the value of the postBoxNumberPrefix property.
     * 
     * @param value
     *     allowed object is
     *     {@link PostBoxElement.PostBoxNumberPrefix }
     *     
     */
    public void setPostBoxNumberPrefix(PostBoxElement.PostBoxNumberPrefix value) {
        this.postBoxNumberPrefix = value;
    }

    public boolean isSetPostBoxNumberPrefix() {
        return (this.postBoxNumberPrefix!= null);
    }

    /**
     * Gets the value of the postBoxNumberSuffix property.
     * 
     * @return
     *     possible object is
     *     {@link PostBoxElement.PostBoxNumberSuffix }
     *     
     */
    public PostBoxElement.PostBoxNumberSuffix getPostBoxNumberSuffix() {
        return postBoxNumberSuffix;
    }

    /**
     * Sets the value of the postBoxNumberSuffix property.
     * 
     * @param value
     *     allowed object is
     *     {@link PostBoxElement.PostBoxNumberSuffix }
     *     
     */
    public void setPostBoxNumberSuffix(PostBoxElement.PostBoxNumberSuffix value) {
        this.postBoxNumberSuffix = value;
    }

    public boolean isSetPostBoxNumberSuffix() {
        return (this.postBoxNumberSuffix!= null);
    }

    /**
     * Gets the value of the postBoxNumberExtension property.
     * 
     * @return
     *     possible object is
     *     {@link PostBoxElement.PostBoxNumberExtension }
     *     
     */
    public PostBoxElement.PostBoxNumberExtension getPostBoxNumberExtension() {
        return postBoxNumberExtension;
    }

    /**
     * Sets the value of the postBoxNumberExtension property.
     * 
     * @param value
     *     allowed object is
     *     {@link PostBoxElement.PostBoxNumberExtension }
     *     
     */
    public void setPostBoxNumberExtension(PostBoxElement.PostBoxNumberExtension value) {
        this.postBoxNumberExtension = value;
    }

    public boolean isSetPostBoxNumberExtension() {
        return (this.postBoxNumberExtension!= null);
    }

    /**
     * Gets the value of the firm property.
     * 
     * @return
     *     possible object is
     *     {@link FirmType }
     *     
     */
    public FirmType getFirm() {
        return firm;
    }

    /**
     * Sets the value of the firm property.
     * 
     * @param value
     *     allowed object is
     *     {@link FirmType }
     *     
     */
    public void setFirm(FirmType value) {
        this.firm = value;
    }

    public boolean isSetFirm() {
        return (this.firm!= null);
    }

    /**
     * Gets the value of the postalCode property.
     * 
     * @return
     *     possible object is
     *     {@link PostalCodeElement }
     *     
     */
    public PostalCodeElement getPostalCode() {
        return postalCode;
    }

    /**
     * Sets the value of the postalCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link PostalCodeElement }
     *     
     */
    public void setPostalCode(PostalCodeElement value) {
        this.postalCode = value;
    }

    public boolean isSetPostalCode() {
        return (this.postalCode!= null);
    }

    /**
     * Gets the value of the any property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the any property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAny().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Object }
     * 
     * 
     */
    public List<Object> getAny() {
        if (any == null) {
            any = new ArrayList<Object>();
        }
        return this.any;
    }

    public boolean isSetAny() {
        return ((this.any!= null)&&(!this.any.isEmpty()));
    }

    public void unsetAny() {
        this.any = null;
    }

    /**
     * Gets the value of the type property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getType() {
        return type;
    }

    /**
     * Sets the value of the type property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setType(String value) {
        this.type = value;
    }

    public boolean isSetType() {
        return (this.type!= null);
    }

    /**
     * Gets the value of the indicator property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getIndicator() {
        return indicator;
    }

    /**
     * Sets the value of the indicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIndicator(String value) {
        this.indicator = value;
    }

    public boolean isSetIndicator() {
        return (this.indicator!= null);
    }

    /**
     * Gets a map that contains attributes that aren't bound to any typed property on this class.
     * 
     * <p>
     * the map is keyed by the name of the attribute and 
     * the value is the string value of the attribute.
     * 
     * the map returned by this method is live, and you can add new attribute
     * by updating the map directly. Because of this design, there's no setter.
     * 
     * 
     * @return
     *     always non-null
     */
    public Map<QName, String> getOtherAttributes() {
        return otherAttributes;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            List<AddressLineElement> theAddressLine;
            theAddressLine = (this.isSetAddressLine()?this.getAddressLine():null);
            strategy.appendField(locator, this, "addressLine", buffer, theAddressLine);
        }
        {
            PostBoxElement.PostBoxNumber thePostBoxNumber;
            thePostBoxNumber = this.getPostBoxNumber();
            strategy.appendField(locator, this, "postBoxNumber", buffer, thePostBoxNumber);
        }
        {
            PostBoxElement.PostBoxNumberPrefix thePostBoxNumberPrefix;
            thePostBoxNumberPrefix = this.getPostBoxNumberPrefix();
            strategy.appendField(locator, this, "postBoxNumberPrefix", buffer, thePostBoxNumberPrefix);
        }
        {
            PostBoxElement.PostBoxNumberSuffix thePostBoxNumberSuffix;
            thePostBoxNumberSuffix = this.getPostBoxNumberSuffix();
            strategy.appendField(locator, this, "postBoxNumberSuffix", buffer, thePostBoxNumberSuffix);
        }
        {
            PostBoxElement.PostBoxNumberExtension thePostBoxNumberExtension;
            thePostBoxNumberExtension = this.getPostBoxNumberExtension();
            strategy.appendField(locator, this, "postBoxNumberExtension", buffer, thePostBoxNumberExtension);
        }
        {
            FirmType theFirm;
            theFirm = this.getFirm();
            strategy.appendField(locator, this, "firm", buffer, theFirm);
        }
        {
            PostalCodeElement thePostalCode;
            thePostalCode = this.getPostalCode();
            strategy.appendField(locator, this, "postalCode", buffer, thePostalCode);
        }
        {
            List<Object> theAny;
            theAny = (this.isSetAny()?this.getAny():null);
            strategy.appendField(locator, this, "any", buffer, theAny);
        }
        {
            String theType;
            theType = this.getType();
            strategy.appendField(locator, this, "type", buffer, theType);
        }
        {
            String theIndicator;
            theIndicator = this.getIndicator();
            strategy.appendField(locator, this, "indicator", buffer, theIndicator);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof PostBoxElement)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final PostBoxElement that = ((PostBoxElement) object);
        {
            List<AddressLineElement> lhsAddressLine;
            lhsAddressLine = (this.isSetAddressLine()?this.getAddressLine():null);
            List<AddressLineElement> rhsAddressLine;
            rhsAddressLine = (that.isSetAddressLine()?that.getAddressLine():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "addressLine", lhsAddressLine), LocatorUtils.property(thatLocator, "addressLine", rhsAddressLine), lhsAddressLine, rhsAddressLine)) {
                return false;
            }
        }
        {
            PostBoxElement.PostBoxNumber lhsPostBoxNumber;
            lhsPostBoxNumber = this.getPostBoxNumber();
            PostBoxElement.PostBoxNumber rhsPostBoxNumber;
            rhsPostBoxNumber = that.getPostBoxNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "postBoxNumber", lhsPostBoxNumber), LocatorUtils.property(thatLocator, "postBoxNumber", rhsPostBoxNumber), lhsPostBoxNumber, rhsPostBoxNumber)) {
                return false;
            }
        }
        {
            PostBoxElement.PostBoxNumberPrefix lhsPostBoxNumberPrefix;
            lhsPostBoxNumberPrefix = this.getPostBoxNumberPrefix();
            PostBoxElement.PostBoxNumberPrefix rhsPostBoxNumberPrefix;
            rhsPostBoxNumberPrefix = that.getPostBoxNumberPrefix();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "postBoxNumberPrefix", lhsPostBoxNumberPrefix), LocatorUtils.property(thatLocator, "postBoxNumberPrefix", rhsPostBoxNumberPrefix), lhsPostBoxNumberPrefix, rhsPostBoxNumberPrefix)) {
                return false;
            }
        }
        {
            PostBoxElement.PostBoxNumberSuffix lhsPostBoxNumberSuffix;
            lhsPostBoxNumberSuffix = this.getPostBoxNumberSuffix();
            PostBoxElement.PostBoxNumberSuffix rhsPostBoxNumberSuffix;
            rhsPostBoxNumberSuffix = that.getPostBoxNumberSuffix();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "postBoxNumberSuffix", lhsPostBoxNumberSuffix), LocatorUtils.property(thatLocator, "postBoxNumberSuffix", rhsPostBoxNumberSuffix), lhsPostBoxNumberSuffix, rhsPostBoxNumberSuffix)) {
                return false;
            }
        }
        {
            PostBoxElement.PostBoxNumberExtension lhsPostBoxNumberExtension;
            lhsPostBoxNumberExtension = this.getPostBoxNumberExtension();
            PostBoxElement.PostBoxNumberExtension rhsPostBoxNumberExtension;
            rhsPostBoxNumberExtension = that.getPostBoxNumberExtension();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "postBoxNumberExtension", lhsPostBoxNumberExtension), LocatorUtils.property(thatLocator, "postBoxNumberExtension", rhsPostBoxNumberExtension), lhsPostBoxNumberExtension, rhsPostBoxNumberExtension)) {
                return false;
            }
        }
        {
            FirmType lhsFirm;
            lhsFirm = this.getFirm();
            FirmType rhsFirm;
            rhsFirm = that.getFirm();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "firm", lhsFirm), LocatorUtils.property(thatLocator, "firm", rhsFirm), lhsFirm, rhsFirm)) {
                return false;
            }
        }
        {
            PostalCodeElement lhsPostalCode;
            lhsPostalCode = this.getPostalCode();
            PostalCodeElement rhsPostalCode;
            rhsPostalCode = that.getPostalCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "postalCode", lhsPostalCode), LocatorUtils.property(thatLocator, "postalCode", rhsPostalCode), lhsPostalCode, rhsPostalCode)) {
                return false;
            }
        }
        {
            List<Object> lhsAny;
            lhsAny = (this.isSetAny()?this.getAny():null);
            List<Object> rhsAny;
            rhsAny = (that.isSetAny()?that.getAny():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "any", lhsAny), LocatorUtils.property(thatLocator, "any", rhsAny), lhsAny, rhsAny)) {
                return false;
            }
        }
        {
            String lhsType;
            lhsType = this.getType();
            String rhsType;
            rhsType = that.getType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "type", lhsType), LocatorUtils.property(thatLocator, "type", rhsType), lhsType, rhsType)) {
                return false;
            }
        }
        {
            String lhsIndicator;
            lhsIndicator = this.getIndicator();
            String rhsIndicator;
            rhsIndicator = that.getIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "indicator", lhsIndicator), LocatorUtils.property(thatLocator, "indicator", rhsIndicator), lhsIndicator, rhsIndicator)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            List<AddressLineElement> theAddressLine;
            theAddressLine = (this.isSetAddressLine()?this.getAddressLine():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "addressLine", theAddressLine), currentHashCode, theAddressLine);
        }
        {
            PostBoxElement.PostBoxNumber thePostBoxNumber;
            thePostBoxNumber = this.getPostBoxNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "postBoxNumber", thePostBoxNumber), currentHashCode, thePostBoxNumber);
        }
        {
            PostBoxElement.PostBoxNumberPrefix thePostBoxNumberPrefix;
            thePostBoxNumberPrefix = this.getPostBoxNumberPrefix();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "postBoxNumberPrefix", thePostBoxNumberPrefix), currentHashCode, thePostBoxNumberPrefix);
        }
        {
            PostBoxElement.PostBoxNumberSuffix thePostBoxNumberSuffix;
            thePostBoxNumberSuffix = this.getPostBoxNumberSuffix();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "postBoxNumberSuffix", thePostBoxNumberSuffix), currentHashCode, thePostBoxNumberSuffix);
        }
        {
            PostBoxElement.PostBoxNumberExtension thePostBoxNumberExtension;
            thePostBoxNumberExtension = this.getPostBoxNumberExtension();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "postBoxNumberExtension", thePostBoxNumberExtension), currentHashCode, thePostBoxNumberExtension);
        }
        {
            FirmType theFirm;
            theFirm = this.getFirm();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "firm", theFirm), currentHashCode, theFirm);
        }
        {
            PostalCodeElement thePostalCode;
            thePostalCode = this.getPostalCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "postalCode", thePostalCode), currentHashCode, thePostalCode);
        }
        {
            List<Object> theAny;
            theAny = (this.isSetAny()?this.getAny():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "any", theAny), currentHashCode, theAny);
        }
        {
            String theType;
            theType = this.getType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "type", theType), currentHashCode, theType);
        }
        {
            String theIndicator;
            theIndicator = this.getIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "indicator", theIndicator), currentHashCode, theIndicator);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof PostBoxElement) {
            final PostBoxElement copy = ((PostBoxElement) draftCopy);
            if (this.isSetAddressLine()) {
                List<AddressLineElement> sourceAddressLine;
                sourceAddressLine = (this.isSetAddressLine()?this.getAddressLine():null);
                @SuppressWarnings("unchecked")
                List<AddressLineElement> copyAddressLine = ((List<AddressLineElement> ) strategy.copy(LocatorUtils.property(locator, "addressLine", sourceAddressLine), sourceAddressLine));
                copy.unsetAddressLine();
                if (copyAddressLine!= null) {
                    List<AddressLineElement> uniqueAddressLinel = copy.getAddressLine();
                    uniqueAddressLinel.addAll(copyAddressLine);
                }
            } else {
                copy.unsetAddressLine();
            }
            if (this.isSetPostBoxNumber()) {
                PostBoxElement.PostBoxNumber sourcePostBoxNumber;
                sourcePostBoxNumber = this.getPostBoxNumber();
                PostBoxElement.PostBoxNumber copyPostBoxNumber = ((PostBoxElement.PostBoxNumber) strategy.copy(LocatorUtils.property(locator, "postBoxNumber", sourcePostBoxNumber), sourcePostBoxNumber));
                copy.setPostBoxNumber(copyPostBoxNumber);
            } else {
                copy.postBoxNumber = null;
            }
            if (this.isSetPostBoxNumberPrefix()) {
                PostBoxElement.PostBoxNumberPrefix sourcePostBoxNumberPrefix;
                sourcePostBoxNumberPrefix = this.getPostBoxNumberPrefix();
                PostBoxElement.PostBoxNumberPrefix copyPostBoxNumberPrefix = ((PostBoxElement.PostBoxNumberPrefix) strategy.copy(LocatorUtils.property(locator, "postBoxNumberPrefix", sourcePostBoxNumberPrefix), sourcePostBoxNumberPrefix));
                copy.setPostBoxNumberPrefix(copyPostBoxNumberPrefix);
            } else {
                copy.postBoxNumberPrefix = null;
            }
            if (this.isSetPostBoxNumberSuffix()) {
                PostBoxElement.PostBoxNumberSuffix sourcePostBoxNumberSuffix;
                sourcePostBoxNumberSuffix = this.getPostBoxNumberSuffix();
                PostBoxElement.PostBoxNumberSuffix copyPostBoxNumberSuffix = ((PostBoxElement.PostBoxNumberSuffix) strategy.copy(LocatorUtils.property(locator, "postBoxNumberSuffix", sourcePostBoxNumberSuffix), sourcePostBoxNumberSuffix));
                copy.setPostBoxNumberSuffix(copyPostBoxNumberSuffix);
            } else {
                copy.postBoxNumberSuffix = null;
            }
            if (this.isSetPostBoxNumberExtension()) {
                PostBoxElement.PostBoxNumberExtension sourcePostBoxNumberExtension;
                sourcePostBoxNumberExtension = this.getPostBoxNumberExtension();
                PostBoxElement.PostBoxNumberExtension copyPostBoxNumberExtension = ((PostBoxElement.PostBoxNumberExtension) strategy.copy(LocatorUtils.property(locator, "postBoxNumberExtension", sourcePostBoxNumberExtension), sourcePostBoxNumberExtension));
                copy.setPostBoxNumberExtension(copyPostBoxNumberExtension);
            } else {
                copy.postBoxNumberExtension = null;
            }
            if (this.isSetFirm()) {
                FirmType sourceFirm;
                sourceFirm = this.getFirm();
                FirmType copyFirm = ((FirmType) strategy.copy(LocatorUtils.property(locator, "firm", sourceFirm), sourceFirm));
                copy.setFirm(copyFirm);
            } else {
                copy.firm = null;
            }
            if (this.isSetPostalCode()) {
                PostalCodeElement sourcePostalCode;
                sourcePostalCode = this.getPostalCode();
                PostalCodeElement copyPostalCode = ((PostalCodeElement) strategy.copy(LocatorUtils.property(locator, "postalCode", sourcePostalCode), sourcePostalCode));
                copy.setPostalCode(copyPostalCode);
            } else {
                copy.postalCode = null;
            }
            if (this.isSetAny()) {
                List<Object> sourceAny;
                sourceAny = (this.isSetAny()?this.getAny():null);
                @SuppressWarnings("unchecked")
                List<Object> copyAny = ((List<Object> ) strategy.copy(LocatorUtils.property(locator, "any", sourceAny), sourceAny));
                copy.unsetAny();
                if (copyAny!= null) {
                    List<Object> uniqueAnyl = copy.getAny();
                    uniqueAnyl.addAll(copyAny);
                }
            } else {
                copy.unsetAny();
            }
            if (this.isSetType()) {
                String sourceType;
                sourceType = this.getType();
                String copyType = ((String) strategy.copy(LocatorUtils.property(locator, "type", sourceType), sourceType));
                copy.setType(copyType);
            } else {
                copy.type = null;
            }
            if (this.isSetIndicator()) {
                String sourceIndicator;
                sourceIndicator = this.getIndicator();
                String copyIndicator = ((String) strategy.copy(LocatorUtils.property(locator, "indicator", sourceIndicator), sourceIndicator));
                copy.setIndicator(copyIndicator);
            } else {
                copy.indicator = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new PostBoxElement();
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
     *       &lt;anyAttribute namespace='##other'/&gt;
     *     &lt;/restriction&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "content"
    })
    public static class PostBoxNumber
        implements Cloneable, CopyTo, Equals, HashCode, ToString
    {

        @XmlValue
        protected String content;
        @XmlAttribute(name = "Code")
        @XmlSchemaType(name = "anySimpleType")
        protected String code;
        @XmlAnyAttribute
        private Map<QName, String> otherAttributes = new HashMap<QName, String>();

        /**
         * Gets the value of the content property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getContent() {
            return content;
        }

        /**
         * Sets the value of the content property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setContent(String value) {
            this.content = value;
        }

        public boolean isSetContent() {
            return (this.content!= null);
        }

        /**
         * Gets the value of the code property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getCode() {
            return code;
        }

        /**
         * Sets the value of the code property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setCode(String value) {
            this.code = value;
        }

        public boolean isSetCode() {
            return (this.code!= null);
        }

        /**
         * Gets a map that contains attributes that aren't bound to any typed property on this class.
         * 
         * <p>
         * the map is keyed by the name of the attribute and 
         * the value is the string value of the attribute.
         * 
         * the map returned by this method is live, and you can add new attribute
         * by updating the map directly. Because of this design, there's no setter.
         * 
         * 
         * @return
         *     always non-null
         */
        public Map<QName, String> getOtherAttributes() {
            return otherAttributes;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                String theContent;
                theContent = this.getContent();
                strategy.appendField(locator, this, "content", buffer, theContent);
            }
            {
                String theCode;
                theCode = this.getCode();
                strategy.appendField(locator, this, "code", buffer, theCode);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof PostBoxElement.PostBoxNumber)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final PostBoxElement.PostBoxNumber that = ((PostBoxElement.PostBoxNumber) object);
            {
                String lhsContent;
                lhsContent = this.getContent();
                String rhsContent;
                rhsContent = that.getContent();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "content", lhsContent), LocatorUtils.property(thatLocator, "content", rhsContent), lhsContent, rhsContent)) {
                    return false;
                }
            }
            {
                String lhsCode;
                lhsCode = this.getCode();
                String rhsCode;
                rhsCode = that.getCode();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "code", lhsCode), LocatorUtils.property(thatLocator, "code", rhsCode), lhsCode, rhsCode)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                String theContent;
                theContent = this.getContent();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "content", theContent), currentHashCode, theContent);
            }
            {
                String theCode;
                theCode = this.getCode();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "code", theCode), currentHashCode, theCode);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public Object clone() {
            return copyTo(createNewInstance());
        }

        public Object copyTo(Object target) {
            final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
            return copyTo(null, target, strategy);
        }

        public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
            final Object draftCopy = ((target == null)?createNewInstance():target);
            if (draftCopy instanceof PostBoxElement.PostBoxNumber) {
                final PostBoxElement.PostBoxNumber copy = ((PostBoxElement.PostBoxNumber) draftCopy);
                if (this.isSetContent()) {
                    String sourceContent;
                    sourceContent = this.getContent();
                    String copyContent = ((String) strategy.copy(LocatorUtils.property(locator, "content", sourceContent), sourceContent));
                    copy.setContent(copyContent);
                } else {
                    copy.content = null;
                }
                if (this.isSetCode()) {
                    String sourceCode;
                    sourceCode = this.getCode();
                    String copyCode = ((String) strategy.copy(LocatorUtils.property(locator, "code", sourceCode), sourceCode));
                    copy.setCode(copyCode);
                } else {
                    copy.code = null;
                }
            }
            return draftCopy;
        }

        public Object createNewInstance() {
            return new PostBoxElement.PostBoxNumber();
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;attribute name="NumberExtensionSeparator" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
     *       &lt;anyAttribute namespace='##other'/&gt;
     *     &lt;/restriction&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "content"
    })
    public static class PostBoxNumberExtension
        implements Cloneable, CopyTo, Equals, HashCode, ToString
    {

        @XmlValue
        protected String content;
        @XmlAttribute(name = "NumberExtensionSeparator")
        @XmlSchemaType(name = "anySimpleType")
        protected String numberExtensionSeparator;
        @XmlAnyAttribute
        private Map<QName, String> otherAttributes = new HashMap<QName, String>();

        /**
         * Gets the value of the content property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getContent() {
            return content;
        }

        /**
         * Sets the value of the content property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setContent(String value) {
            this.content = value;
        }

        public boolean isSetContent() {
            return (this.content!= null);
        }

        /**
         * Gets the value of the numberExtensionSeparator property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getNumberExtensionSeparator() {
            return numberExtensionSeparator;
        }

        /**
         * Sets the value of the numberExtensionSeparator property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setNumberExtensionSeparator(String value) {
            this.numberExtensionSeparator = value;
        }

        public boolean isSetNumberExtensionSeparator() {
            return (this.numberExtensionSeparator!= null);
        }

        /**
         * Gets a map that contains attributes that aren't bound to any typed property on this class.
         * 
         * <p>
         * the map is keyed by the name of the attribute and 
         * the value is the string value of the attribute.
         * 
         * the map returned by this method is live, and you can add new attribute
         * by updating the map directly. Because of this design, there's no setter.
         * 
         * 
         * @return
         *     always non-null
         */
        public Map<QName, String> getOtherAttributes() {
            return otherAttributes;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                String theContent;
                theContent = this.getContent();
                strategy.appendField(locator, this, "content", buffer, theContent);
            }
            {
                String theNumberExtensionSeparator;
                theNumberExtensionSeparator = this.getNumberExtensionSeparator();
                strategy.appendField(locator, this, "numberExtensionSeparator", buffer, theNumberExtensionSeparator);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof PostBoxElement.PostBoxNumberExtension)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final PostBoxElement.PostBoxNumberExtension that = ((PostBoxElement.PostBoxNumberExtension) object);
            {
                String lhsContent;
                lhsContent = this.getContent();
                String rhsContent;
                rhsContent = that.getContent();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "content", lhsContent), LocatorUtils.property(thatLocator, "content", rhsContent), lhsContent, rhsContent)) {
                    return false;
                }
            }
            {
                String lhsNumberExtensionSeparator;
                lhsNumberExtensionSeparator = this.getNumberExtensionSeparator();
                String rhsNumberExtensionSeparator;
                rhsNumberExtensionSeparator = that.getNumberExtensionSeparator();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "numberExtensionSeparator", lhsNumberExtensionSeparator), LocatorUtils.property(thatLocator, "numberExtensionSeparator", rhsNumberExtensionSeparator), lhsNumberExtensionSeparator, rhsNumberExtensionSeparator)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                String theContent;
                theContent = this.getContent();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "content", theContent), currentHashCode, theContent);
            }
            {
                String theNumberExtensionSeparator;
                theNumberExtensionSeparator = this.getNumberExtensionSeparator();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "numberExtensionSeparator", theNumberExtensionSeparator), currentHashCode, theNumberExtensionSeparator);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public Object clone() {
            return copyTo(createNewInstance());
        }

        public Object copyTo(Object target) {
            final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
            return copyTo(null, target, strategy);
        }

        public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
            final Object draftCopy = ((target == null)?createNewInstance():target);
            if (draftCopy instanceof PostBoxElement.PostBoxNumberExtension) {
                final PostBoxElement.PostBoxNumberExtension copy = ((PostBoxElement.PostBoxNumberExtension) draftCopy);
                if (this.isSetContent()) {
                    String sourceContent;
                    sourceContent = this.getContent();
                    String copyContent = ((String) strategy.copy(LocatorUtils.property(locator, "content", sourceContent), sourceContent));
                    copy.setContent(copyContent);
                } else {
                    copy.content = null;
                }
                if (this.isSetNumberExtensionSeparator()) {
                    String sourceNumberExtensionSeparator;
                    sourceNumberExtensionSeparator = this.getNumberExtensionSeparator();
                    String copyNumberExtensionSeparator = ((String) strategy.copy(LocatorUtils.property(locator, "numberExtensionSeparator", sourceNumberExtensionSeparator), sourceNumberExtensionSeparator));
                    copy.setNumberExtensionSeparator(copyNumberExtensionSeparator);
                } else {
                    copy.numberExtensionSeparator = null;
                }
            }
            return draftCopy;
        }

        public Object createNewInstance() {
            return new PostBoxElement.PostBoxNumberExtension();
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
     *       &lt;attribute name="NumberPrefixSeparator" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
     *       &lt;anyAttribute namespace='##other'/&gt;
     *     &lt;/restriction&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "content"
    })
    public static class PostBoxNumberPrefix
        implements Cloneable, CopyTo, Equals, HashCode, ToString
    {

        @XmlValue
        protected String content;
        @XmlAttribute(name = "NumberPrefixSeparator")
        @XmlSchemaType(name = "anySimpleType")
        protected String numberPrefixSeparator;
        @XmlAttribute(name = "Code")
        @XmlSchemaType(name = "anySimpleType")
        protected String code;
        @XmlAnyAttribute
        private Map<QName, String> otherAttributes = new HashMap<QName, String>();

        /**
         * Gets the value of the content property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getContent() {
            return content;
        }

        /**
         * Sets the value of the content property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setContent(String value) {
            this.content = value;
        }

        public boolean isSetContent() {
            return (this.content!= null);
        }

        /**
         * Gets the value of the numberPrefixSeparator property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getNumberPrefixSeparator() {
            return numberPrefixSeparator;
        }

        /**
         * Sets the value of the numberPrefixSeparator property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setNumberPrefixSeparator(String value) {
            this.numberPrefixSeparator = value;
        }

        public boolean isSetNumberPrefixSeparator() {
            return (this.numberPrefixSeparator!= null);
        }

        /**
         * Gets the value of the code property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getCode() {
            return code;
        }

        /**
         * Sets the value of the code property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setCode(String value) {
            this.code = value;
        }

        public boolean isSetCode() {
            return (this.code!= null);
        }

        /**
         * Gets a map that contains attributes that aren't bound to any typed property on this class.
         * 
         * <p>
         * the map is keyed by the name of the attribute and 
         * the value is the string value of the attribute.
         * 
         * the map returned by this method is live, and you can add new attribute
         * by updating the map directly. Because of this design, there's no setter.
         * 
         * 
         * @return
         *     always non-null
         */
        public Map<QName, String> getOtherAttributes() {
            return otherAttributes;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                String theContent;
                theContent = this.getContent();
                strategy.appendField(locator, this, "content", buffer, theContent);
            }
            {
                String theNumberPrefixSeparator;
                theNumberPrefixSeparator = this.getNumberPrefixSeparator();
                strategy.appendField(locator, this, "numberPrefixSeparator", buffer, theNumberPrefixSeparator);
            }
            {
                String theCode;
                theCode = this.getCode();
                strategy.appendField(locator, this, "code", buffer, theCode);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof PostBoxElement.PostBoxNumberPrefix)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final PostBoxElement.PostBoxNumberPrefix that = ((PostBoxElement.PostBoxNumberPrefix) object);
            {
                String lhsContent;
                lhsContent = this.getContent();
                String rhsContent;
                rhsContent = that.getContent();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "content", lhsContent), LocatorUtils.property(thatLocator, "content", rhsContent), lhsContent, rhsContent)) {
                    return false;
                }
            }
            {
                String lhsNumberPrefixSeparator;
                lhsNumberPrefixSeparator = this.getNumberPrefixSeparator();
                String rhsNumberPrefixSeparator;
                rhsNumberPrefixSeparator = that.getNumberPrefixSeparator();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "numberPrefixSeparator", lhsNumberPrefixSeparator), LocatorUtils.property(thatLocator, "numberPrefixSeparator", rhsNumberPrefixSeparator), lhsNumberPrefixSeparator, rhsNumberPrefixSeparator)) {
                    return false;
                }
            }
            {
                String lhsCode;
                lhsCode = this.getCode();
                String rhsCode;
                rhsCode = that.getCode();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "code", lhsCode), LocatorUtils.property(thatLocator, "code", rhsCode), lhsCode, rhsCode)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                String theContent;
                theContent = this.getContent();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "content", theContent), currentHashCode, theContent);
            }
            {
                String theNumberPrefixSeparator;
                theNumberPrefixSeparator = this.getNumberPrefixSeparator();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "numberPrefixSeparator", theNumberPrefixSeparator), currentHashCode, theNumberPrefixSeparator);
            }
            {
                String theCode;
                theCode = this.getCode();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "code", theCode), currentHashCode, theCode);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public Object clone() {
            return copyTo(createNewInstance());
        }

        public Object copyTo(Object target) {
            final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
            return copyTo(null, target, strategy);
        }

        public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
            final Object draftCopy = ((target == null)?createNewInstance():target);
            if (draftCopy instanceof PostBoxElement.PostBoxNumberPrefix) {
                final PostBoxElement.PostBoxNumberPrefix copy = ((PostBoxElement.PostBoxNumberPrefix) draftCopy);
                if (this.isSetContent()) {
                    String sourceContent;
                    sourceContent = this.getContent();
                    String copyContent = ((String) strategy.copy(LocatorUtils.property(locator, "content", sourceContent), sourceContent));
                    copy.setContent(copyContent);
                } else {
                    copy.content = null;
                }
                if (this.isSetNumberPrefixSeparator()) {
                    String sourceNumberPrefixSeparator;
                    sourceNumberPrefixSeparator = this.getNumberPrefixSeparator();
                    String copyNumberPrefixSeparator = ((String) strategy.copy(LocatorUtils.property(locator, "numberPrefixSeparator", sourceNumberPrefixSeparator), sourceNumberPrefixSeparator));
                    copy.setNumberPrefixSeparator(copyNumberPrefixSeparator);
                } else {
                    copy.numberPrefixSeparator = null;
                }
                if (this.isSetCode()) {
                    String sourceCode;
                    sourceCode = this.getCode();
                    String copyCode = ((String) strategy.copy(LocatorUtils.property(locator, "code", sourceCode), sourceCode));
                    copy.setCode(copyCode);
                } else {
                    copy.code = null;
                }
            }
            return draftCopy;
        }

        public Object createNewInstance() {
            return new PostBoxElement.PostBoxNumberPrefix();
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
     *       &lt;attribute name="NumberSuffixSeparator" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
     *       &lt;anyAttribute namespace='##other'/&gt;
     *     &lt;/restriction&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "content"
    })
    public static class PostBoxNumberSuffix
        implements Cloneable, CopyTo, Equals, HashCode, ToString
    {

        @XmlValue
        protected String content;
        @XmlAttribute(name = "NumberSuffixSeparator")
        @XmlSchemaType(name = "anySimpleType")
        protected String numberSuffixSeparator;
        @XmlAttribute(name = "Code")
        @XmlSchemaType(name = "anySimpleType")
        protected String code;
        @XmlAnyAttribute
        private Map<QName, String> otherAttributes = new HashMap<QName, String>();

        /**
         * Gets the value of the content property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getContent() {
            return content;
        }

        /**
         * Sets the value of the content property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setContent(String value) {
            this.content = value;
        }

        public boolean isSetContent() {
            return (this.content!= null);
        }

        /**
         * Gets the value of the numberSuffixSeparator property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getNumberSuffixSeparator() {
            return numberSuffixSeparator;
        }

        /**
         * Sets the value of the numberSuffixSeparator property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setNumberSuffixSeparator(String value) {
            this.numberSuffixSeparator = value;
        }

        public boolean isSetNumberSuffixSeparator() {
            return (this.numberSuffixSeparator!= null);
        }

        /**
         * Gets the value of the code property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getCode() {
            return code;
        }

        /**
         * Sets the value of the code property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setCode(String value) {
            this.code = value;
        }

        public boolean isSetCode() {
            return (this.code!= null);
        }

        /**
         * Gets a map that contains attributes that aren't bound to any typed property on this class.
         * 
         * <p>
         * the map is keyed by the name of the attribute and 
         * the value is the string value of the attribute.
         * 
         * the map returned by this method is live, and you can add new attribute
         * by updating the map directly. Because of this design, there's no setter.
         * 
         * 
         * @return
         *     always non-null
         */
        public Map<QName, String> getOtherAttributes() {
            return otherAttributes;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                String theContent;
                theContent = this.getContent();
                strategy.appendField(locator, this, "content", buffer, theContent);
            }
            {
                String theNumberSuffixSeparator;
                theNumberSuffixSeparator = this.getNumberSuffixSeparator();
                strategy.appendField(locator, this, "numberSuffixSeparator", buffer, theNumberSuffixSeparator);
            }
            {
                String theCode;
                theCode = this.getCode();
                strategy.appendField(locator, this, "code", buffer, theCode);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof PostBoxElement.PostBoxNumberSuffix)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final PostBoxElement.PostBoxNumberSuffix that = ((PostBoxElement.PostBoxNumberSuffix) object);
            {
                String lhsContent;
                lhsContent = this.getContent();
                String rhsContent;
                rhsContent = that.getContent();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "content", lhsContent), LocatorUtils.property(thatLocator, "content", rhsContent), lhsContent, rhsContent)) {
                    return false;
                }
            }
            {
                String lhsNumberSuffixSeparator;
                lhsNumberSuffixSeparator = this.getNumberSuffixSeparator();
                String rhsNumberSuffixSeparator;
                rhsNumberSuffixSeparator = that.getNumberSuffixSeparator();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "numberSuffixSeparator", lhsNumberSuffixSeparator), LocatorUtils.property(thatLocator, "numberSuffixSeparator", rhsNumberSuffixSeparator), lhsNumberSuffixSeparator, rhsNumberSuffixSeparator)) {
                    return false;
                }
            }
            {
                String lhsCode;
                lhsCode = this.getCode();
                String rhsCode;
                rhsCode = that.getCode();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "code", lhsCode), LocatorUtils.property(thatLocator, "code", rhsCode), lhsCode, rhsCode)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                String theContent;
                theContent = this.getContent();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "content", theContent), currentHashCode, theContent);
            }
            {
                String theNumberSuffixSeparator;
                theNumberSuffixSeparator = this.getNumberSuffixSeparator();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "numberSuffixSeparator", theNumberSuffixSeparator), currentHashCode, theNumberSuffixSeparator);
            }
            {
                String theCode;
                theCode = this.getCode();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "code", theCode), currentHashCode, theCode);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public Object clone() {
            return copyTo(createNewInstance());
        }

        public Object copyTo(Object target) {
            final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
            return copyTo(null, target, strategy);
        }

        public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
            final Object draftCopy = ((target == null)?createNewInstance():target);
            if (draftCopy instanceof PostBoxElement.PostBoxNumberSuffix) {
                final PostBoxElement.PostBoxNumberSuffix copy = ((PostBoxElement.PostBoxNumberSuffix) draftCopy);
                if (this.isSetContent()) {
                    String sourceContent;
                    sourceContent = this.getContent();
                    String copyContent = ((String) strategy.copy(LocatorUtils.property(locator, "content", sourceContent), sourceContent));
                    copy.setContent(copyContent);
                } else {
                    copy.content = null;
                }
                if (this.isSetNumberSuffixSeparator()) {
                    String sourceNumberSuffixSeparator;
                    sourceNumberSuffixSeparator = this.getNumberSuffixSeparator();
                    String copyNumberSuffixSeparator = ((String) strategy.copy(LocatorUtils.property(locator, "numberSuffixSeparator", sourceNumberSuffixSeparator), sourceNumberSuffixSeparator));
                    copy.setNumberSuffixSeparator(copyNumberSuffixSeparator);
                } else {
                    copy.numberSuffixSeparator = null;
                }
                if (this.isSetCode()) {
                    String sourceCode;
                    sourceCode = this.getCode();
                    String copyCode = ((String) strategy.copy(LocatorUtils.property(locator, "code", sourceCode), sourceCode));
                    copy.setCode(copyCode);
                } else {
                    copy.code = null;
                }
            }
            return draftCopy;
        }

        public Object createNewInstance() {
            return new PostBoxElement.PostBoxNumberSuffix();
        }

    }

}
