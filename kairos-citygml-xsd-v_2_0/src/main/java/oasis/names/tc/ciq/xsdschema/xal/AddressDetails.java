//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.10.10 at 10:41:43 AM KST 
//


package oasis.names.tc.ciq.xsdschema.xal;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAnyAttribute;
import javax.xml.bind.annotation.XmlAnyElement;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;
import javax.xml.namespace.QName;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for AddressDetails complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="AddressDetails"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="PostalServiceElements" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                 &lt;sequence&gt;
 *                   &lt;element name="AddressIdentifier" maxOccurs="unbounded" minOccurs="0"&gt;
 *                     &lt;complexType&gt;
 *                       &lt;complexContent&gt;
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                           &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
 *                           &lt;attribute name="IdentifierType" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *                           &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *                           &lt;anyAttribute namespace='##other'/&gt;
 *                         &lt;/restriction&gt;
 *                       &lt;/complexContent&gt;
 *                     &lt;/complexType&gt;
 *                   &lt;/element&gt;
 *                   &lt;element name="EndorsementLineCode" minOccurs="0"&gt;
 *                     &lt;complexType&gt;
 *                       &lt;complexContent&gt;
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                           &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
 *                           &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *                           &lt;anyAttribute namespace='##other'/&gt;
 *                         &lt;/restriction&gt;
 *                       &lt;/complexContent&gt;
 *                     &lt;/complexType&gt;
 *                   &lt;/element&gt;
 *                   &lt;element name="KeyLineCode" minOccurs="0"&gt;
 *                     &lt;complexType&gt;
 *                       &lt;complexContent&gt;
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                           &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
 *                           &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *                           &lt;anyAttribute namespace='##other'/&gt;
 *                         &lt;/restriction&gt;
 *                       &lt;/complexContent&gt;
 *                     &lt;/complexType&gt;
 *                   &lt;/element&gt;
 *                   &lt;element name="Barcode" minOccurs="0"&gt;
 *                     &lt;complexType&gt;
 *                       &lt;complexContent&gt;
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                           &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
 *                           &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *                           &lt;anyAttribute namespace='##other'/&gt;
 *                         &lt;/restriction&gt;
 *                       &lt;/complexContent&gt;
 *                     &lt;/complexType&gt;
 *                   &lt;/element&gt;
 *                   &lt;element name="SortingCode" minOccurs="0"&gt;
 *                     &lt;complexType&gt;
 *                       &lt;complexContent&gt;
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                           &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
 *                           &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *                         &lt;/restriction&gt;
 *                       &lt;/complexContent&gt;
 *                     &lt;/complexType&gt;
 *                   &lt;/element&gt;
 *                   &lt;element name="AddressLatitude" minOccurs="0"&gt;
 *                     &lt;complexType&gt;
 *                       &lt;complexContent&gt;
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                           &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
 *                           &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *                           &lt;anyAttribute namespace='##other'/&gt;
 *                         &lt;/restriction&gt;
 *                       &lt;/complexContent&gt;
 *                     &lt;/complexType&gt;
 *                   &lt;/element&gt;
 *                   &lt;element name="AddressLatitudeDirection" minOccurs="0"&gt;
 *                     &lt;complexType&gt;
 *                       &lt;complexContent&gt;
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                           &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
 *                           &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *                           &lt;anyAttribute namespace='##other'/&gt;
 *                         &lt;/restriction&gt;
 *                       &lt;/complexContent&gt;
 *                     &lt;/complexType&gt;
 *                   &lt;/element&gt;
 *                   &lt;element name="AddressLongitude" minOccurs="0"&gt;
 *                     &lt;complexType&gt;
 *                       &lt;complexContent&gt;
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                           &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
 *                           &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *                           &lt;anyAttribute namespace='##other'/&gt;
 *                         &lt;/restriction&gt;
 *                       &lt;/complexContent&gt;
 *                     &lt;/complexType&gt;
 *                   &lt;/element&gt;
 *                   &lt;element name="AddressLongitudeDirection" minOccurs="0"&gt;
 *                     &lt;complexType&gt;
 *                       &lt;complexContent&gt;
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                           &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
 *                           &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *                           &lt;anyAttribute namespace='##other'/&gt;
 *                         &lt;/restriction&gt;
 *                       &lt;/complexContent&gt;
 *                     &lt;/complexType&gt;
 *                   &lt;/element&gt;
 *                   &lt;element name="SupplementaryPostalServiceData" maxOccurs="unbounded" minOccurs="0"&gt;
 *                     &lt;complexType&gt;
 *                       &lt;complexContent&gt;
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                           &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
 *                           &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *                           &lt;anyAttribute namespace='##other'/&gt;
 *                         &lt;/restriction&gt;
 *                       &lt;/complexContent&gt;
 *                     &lt;/complexType&gt;
 *                   &lt;/element&gt;
 *                   &lt;any namespace='##other' maxOccurs="unbounded" minOccurs="0"/&gt;
 *                 &lt;/sequence&gt;
 *                 &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *                 &lt;anyAttribute namespace='##other'/&gt;
 *               &lt;/restriction&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;choice minOccurs="0"&gt;
 *           &lt;element name="Address"&gt;
 *             &lt;complexType&gt;
 *               &lt;complexContent&gt;
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                   &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
 *                   &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *                   &lt;anyAttribute namespace='##other'/&gt;
 *                 &lt;/restriction&gt;
 *               &lt;/complexContent&gt;
 *             &lt;/complexType&gt;
 *           &lt;/element&gt;
 *           &lt;element name="AddressLines" type="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}AddressLinesType"/&gt;
 *           &lt;element name="Country"&gt;
 *             &lt;complexType&gt;
 *               &lt;complexContent&gt;
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                   &lt;sequence&gt;
 *                     &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}AddressLine" maxOccurs="unbounded" minOccurs="0"/&gt;
 *                     &lt;element name="CountryNameCode" maxOccurs="unbounded" minOccurs="0"&gt;
 *                       &lt;complexType&gt;
 *                         &lt;complexContent&gt;
 *                           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                             &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
 *                             &lt;attribute name="Scheme" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *                             &lt;anyAttribute namespace='##other'/&gt;
 *                           &lt;/restriction&gt;
 *                         &lt;/complexContent&gt;
 *                       &lt;/complexType&gt;
 *                     &lt;/element&gt;
 *                     &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}CountryName" maxOccurs="unbounded" minOccurs="0"/&gt;
 *                     &lt;choice minOccurs="0"&gt;
 *                       &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}AdministrativeArea"/&gt;
 *                       &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}Locality"/&gt;
 *                       &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}Thoroughfare"/&gt;
 *                     &lt;/choice&gt;
 *                     &lt;any namespace='##other' maxOccurs="unbounded" minOccurs="0"/&gt;
 *                   &lt;/sequence&gt;
 *                   &lt;anyAttribute namespace='##other'/&gt;
 *                 &lt;/restriction&gt;
 *               &lt;/complexContent&gt;
 *             &lt;/complexType&gt;
 *           &lt;/element&gt;
 *           &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}AdministrativeArea"/&gt;
 *           &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}Locality"/&gt;
 *           &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}Thoroughfare"/&gt;
 *         &lt;/choice&gt;
 *         &lt;any namespace='##other' maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
 *       &lt;attribute name="AddressType" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *       &lt;attribute name="CurrentStatus" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *       &lt;attribute name="ValidFromDate" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *       &lt;attribute name="ValidToDate" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *       &lt;attribute name="Usage" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *       &lt;attribute name="AddressDetailsKey" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *       &lt;anyAttribute namespace='##other'/&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "AddressDetails", propOrder = {
    "postalServiceElements",
    "address",
    "addressLines",
    "country",
    "administrativeArea",
    "locality",
    "thoroughfare",
    "any"
})
public class AddressDetails
    implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    @XmlElement(name = "PostalServiceElements")
    protected AddressDetails.PostalServiceElements postalServiceElements;
    @XmlElement(name = "Address")
    protected AddressDetails.Address address;
    @XmlElement(name = "AddressLines")
    protected AddressLinesType addressLines;
    @XmlElement(name = "Country")
    protected AddressDetails.Country country;
    @XmlElement(name = "AdministrativeArea")
    protected AdministrativeAreaElement administrativeArea;
    @XmlElement(name = "Locality")
    protected LocalityElement locality;
    @XmlElement(name = "Thoroughfare")
    protected ThoroughfareElement thoroughfare;
    @XmlAnyElement(lax = true)
    protected List<Object> any;
    @XmlAttribute(name = "AddressType")
    @XmlSchemaType(name = "anySimpleType")
    protected String addressType;
    @XmlAttribute(name = "CurrentStatus")
    @XmlSchemaType(name = "anySimpleType")
    protected String currentStatus;
    @XmlAttribute(name = "ValidFromDate")
    @XmlSchemaType(name = "anySimpleType")
    protected String validFromDate;
    @XmlAttribute(name = "ValidToDate")
    @XmlSchemaType(name = "anySimpleType")
    protected String validToDate;
    @XmlAttribute(name = "Usage")
    @XmlSchemaType(name = "anySimpleType")
    protected String usage;
    @XmlAttribute(name = "AddressDetailsKey")
    @XmlSchemaType(name = "anySimpleType")
    protected String addressDetailsKey;
    @XmlAttribute(name = "Code")
    @XmlSchemaType(name = "anySimpleType")
    protected String code;
    @XmlAnyAttribute
    private Map<QName, String> otherAttributes = new HashMap<QName, String>();

    /**
     * Gets the value of the postalServiceElements property.
     * 
     * @return
     *     possible object is
     *     {@link AddressDetails.PostalServiceElements }
     *     
     */
    public AddressDetails.PostalServiceElements getPostalServiceElements() {
        return postalServiceElements;
    }

    /**
     * Sets the value of the postalServiceElements property.
     * 
     * @param value
     *     allowed object is
     *     {@link AddressDetails.PostalServiceElements }
     *     
     */
    public void setPostalServiceElements(AddressDetails.PostalServiceElements value) {
        this.postalServiceElements = value;
    }

    public boolean isSetPostalServiceElements() {
        return (this.postalServiceElements!= null);
    }

    /**
     * Gets the value of the address property.
     * 
     * @return
     *     possible object is
     *     {@link AddressDetails.Address }
     *     
     */
    public AddressDetails.Address getAddress() {
        return address;
    }

    /**
     * Sets the value of the address property.
     * 
     * @param value
     *     allowed object is
     *     {@link AddressDetails.Address }
     *     
     */
    public void setAddress(AddressDetails.Address value) {
        this.address = value;
    }

    public boolean isSetAddress() {
        return (this.address!= null);
    }

    /**
     * Gets the value of the addressLines property.
     * 
     * @return
     *     possible object is
     *     {@link AddressLinesType }
     *     
     */
    public AddressLinesType getAddressLines() {
        return addressLines;
    }

    /**
     * Sets the value of the addressLines property.
     * 
     * @param value
     *     allowed object is
     *     {@link AddressLinesType }
     *     
     */
    public void setAddressLines(AddressLinesType value) {
        this.addressLines = value;
    }

    public boolean isSetAddressLines() {
        return (this.addressLines!= null);
    }

    /**
     * Gets the value of the country property.
     * 
     * @return
     *     possible object is
     *     {@link AddressDetails.Country }
     *     
     */
    public AddressDetails.Country getCountry() {
        return country;
    }

    /**
     * Sets the value of the country property.
     * 
     * @param value
     *     allowed object is
     *     {@link AddressDetails.Country }
     *     
     */
    public void setCountry(AddressDetails.Country value) {
        this.country = value;
    }

    public boolean isSetCountry() {
        return (this.country!= null);
    }

    /**
     * Gets the value of the administrativeArea property.
     * 
     * @return
     *     possible object is
     *     {@link AdministrativeAreaElement }
     *     
     */
    public AdministrativeAreaElement getAdministrativeArea() {
        return administrativeArea;
    }

    /**
     * Sets the value of the administrativeArea property.
     * 
     * @param value
     *     allowed object is
     *     {@link AdministrativeAreaElement }
     *     
     */
    public void setAdministrativeArea(AdministrativeAreaElement value) {
        this.administrativeArea = value;
    }

    public boolean isSetAdministrativeArea() {
        return (this.administrativeArea!= null);
    }

    /**
     * Gets the value of the locality property.
     * 
     * @return
     *     possible object is
     *     {@link LocalityElement }
     *     
     */
    public LocalityElement getLocality() {
        return locality;
    }

    /**
     * Sets the value of the locality property.
     * 
     * @param value
     *     allowed object is
     *     {@link LocalityElement }
     *     
     */
    public void setLocality(LocalityElement value) {
        this.locality = value;
    }

    public boolean isSetLocality() {
        return (this.locality!= null);
    }

    /**
     * Gets the value of the thoroughfare property.
     * 
     * @return
     *     possible object is
     *     {@link ThoroughfareElement }
     *     
     */
    public ThoroughfareElement getThoroughfare() {
        return thoroughfare;
    }

    /**
     * Sets the value of the thoroughfare property.
     * 
     * @param value
     *     allowed object is
     *     {@link ThoroughfareElement }
     *     
     */
    public void setThoroughfare(ThoroughfareElement value) {
        this.thoroughfare = value;
    }

    public boolean isSetThoroughfare() {
        return (this.thoroughfare!= null);
    }

    /**
     * Gets the value of the any property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the any property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAny().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Object }
     * 
     * 
     */
    public List<Object> getAny() {
        if (any == null) {
            any = new ArrayList<Object>();
        }
        return this.any;
    }

    public boolean isSetAny() {
        return ((this.any!= null)&&(!this.any.isEmpty()));
    }

    public void unsetAny() {
        this.any = null;
    }

    /**
     * Gets the value of the addressType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAddressType() {
        return addressType;
    }

    /**
     * Sets the value of the addressType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAddressType(String value) {
        this.addressType = value;
    }

    public boolean isSetAddressType() {
        return (this.addressType!= null);
    }

    /**
     * Gets the value of the currentStatus property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCurrentStatus() {
        return currentStatus;
    }

    /**
     * Sets the value of the currentStatus property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCurrentStatus(String value) {
        this.currentStatus = value;
    }

    public boolean isSetCurrentStatus() {
        return (this.currentStatus!= null);
    }

    /**
     * Gets the value of the validFromDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getValidFromDate() {
        return validFromDate;
    }

    /**
     * Sets the value of the validFromDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setValidFromDate(String value) {
        this.validFromDate = value;
    }

    public boolean isSetValidFromDate() {
        return (this.validFromDate!= null);
    }

    /**
     * Gets the value of the validToDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getValidToDate() {
        return validToDate;
    }

    /**
     * Sets the value of the validToDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setValidToDate(String value) {
        this.validToDate = value;
    }

    public boolean isSetValidToDate() {
        return (this.validToDate!= null);
    }

    /**
     * Gets the value of the usage property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getUsage() {
        return usage;
    }

    /**
     * Sets the value of the usage property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setUsage(String value) {
        this.usage = value;
    }

    public boolean isSetUsage() {
        return (this.usage!= null);
    }

    /**
     * Gets the value of the addressDetailsKey property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAddressDetailsKey() {
        return addressDetailsKey;
    }

    /**
     * Sets the value of the addressDetailsKey property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAddressDetailsKey(String value) {
        this.addressDetailsKey = value;
    }

    public boolean isSetAddressDetailsKey() {
        return (this.addressDetailsKey!= null);
    }

    /**
     * Gets the value of the code property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCode() {
        return code;
    }

    /**
     * Sets the value of the code property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCode(String value) {
        this.code = value;
    }

    public boolean isSetCode() {
        return (this.code!= null);
    }

    /**
     * Gets a map that contains attributes that aren't bound to any typed property on this class.
     * 
     * <p>
     * the map is keyed by the name of the attribute and 
     * the value is the string value of the attribute.
     * 
     * the map returned by this method is live, and you can add new attribute
     * by updating the map directly. Because of this design, there's no setter.
     * 
     * 
     * @return
     *     always non-null
     */
    public Map<QName, String> getOtherAttributes() {
        return otherAttributes;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            AddressDetails.PostalServiceElements thePostalServiceElements;
            thePostalServiceElements = this.getPostalServiceElements();
            strategy.appendField(locator, this, "postalServiceElements", buffer, thePostalServiceElements);
        }
        {
            AddressDetails.Address theAddress;
            theAddress = this.getAddress();
            strategy.appendField(locator, this, "address", buffer, theAddress);
        }
        {
            AddressLinesType theAddressLines;
            theAddressLines = this.getAddressLines();
            strategy.appendField(locator, this, "addressLines", buffer, theAddressLines);
        }
        {
            AddressDetails.Country theCountry;
            theCountry = this.getCountry();
            strategy.appendField(locator, this, "country", buffer, theCountry);
        }
        {
            AdministrativeAreaElement theAdministrativeArea;
            theAdministrativeArea = this.getAdministrativeArea();
            strategy.appendField(locator, this, "administrativeArea", buffer, theAdministrativeArea);
        }
        {
            LocalityElement theLocality;
            theLocality = this.getLocality();
            strategy.appendField(locator, this, "locality", buffer, theLocality);
        }
        {
            ThoroughfareElement theThoroughfare;
            theThoroughfare = this.getThoroughfare();
            strategy.appendField(locator, this, "thoroughfare", buffer, theThoroughfare);
        }
        {
            List<Object> theAny;
            theAny = (this.isSetAny()?this.getAny():null);
            strategy.appendField(locator, this, "any", buffer, theAny);
        }
        {
            String theAddressType;
            theAddressType = this.getAddressType();
            strategy.appendField(locator, this, "addressType", buffer, theAddressType);
        }
        {
            String theCurrentStatus;
            theCurrentStatus = this.getCurrentStatus();
            strategy.appendField(locator, this, "currentStatus", buffer, theCurrentStatus);
        }
        {
            String theValidFromDate;
            theValidFromDate = this.getValidFromDate();
            strategy.appendField(locator, this, "validFromDate", buffer, theValidFromDate);
        }
        {
            String theValidToDate;
            theValidToDate = this.getValidToDate();
            strategy.appendField(locator, this, "validToDate", buffer, theValidToDate);
        }
        {
            String theUsage;
            theUsage = this.getUsage();
            strategy.appendField(locator, this, "usage", buffer, theUsage);
        }
        {
            String theAddressDetailsKey;
            theAddressDetailsKey = this.getAddressDetailsKey();
            strategy.appendField(locator, this, "addressDetailsKey", buffer, theAddressDetailsKey);
        }
        {
            String theCode;
            theCode = this.getCode();
            strategy.appendField(locator, this, "code", buffer, theCode);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof AddressDetails)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final AddressDetails that = ((AddressDetails) object);
        {
            AddressDetails.PostalServiceElements lhsPostalServiceElements;
            lhsPostalServiceElements = this.getPostalServiceElements();
            AddressDetails.PostalServiceElements rhsPostalServiceElements;
            rhsPostalServiceElements = that.getPostalServiceElements();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "postalServiceElements", lhsPostalServiceElements), LocatorUtils.property(thatLocator, "postalServiceElements", rhsPostalServiceElements), lhsPostalServiceElements, rhsPostalServiceElements)) {
                return false;
            }
        }
        {
            AddressDetails.Address lhsAddress;
            lhsAddress = this.getAddress();
            AddressDetails.Address rhsAddress;
            rhsAddress = that.getAddress();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "address", lhsAddress), LocatorUtils.property(thatLocator, "address", rhsAddress), lhsAddress, rhsAddress)) {
                return false;
            }
        }
        {
            AddressLinesType lhsAddressLines;
            lhsAddressLines = this.getAddressLines();
            AddressLinesType rhsAddressLines;
            rhsAddressLines = that.getAddressLines();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "addressLines", lhsAddressLines), LocatorUtils.property(thatLocator, "addressLines", rhsAddressLines), lhsAddressLines, rhsAddressLines)) {
                return false;
            }
        }
        {
            AddressDetails.Country lhsCountry;
            lhsCountry = this.getCountry();
            AddressDetails.Country rhsCountry;
            rhsCountry = that.getCountry();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "country", lhsCountry), LocatorUtils.property(thatLocator, "country", rhsCountry), lhsCountry, rhsCountry)) {
                return false;
            }
        }
        {
            AdministrativeAreaElement lhsAdministrativeArea;
            lhsAdministrativeArea = this.getAdministrativeArea();
            AdministrativeAreaElement rhsAdministrativeArea;
            rhsAdministrativeArea = that.getAdministrativeArea();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "administrativeArea", lhsAdministrativeArea), LocatorUtils.property(thatLocator, "administrativeArea", rhsAdministrativeArea), lhsAdministrativeArea, rhsAdministrativeArea)) {
                return false;
            }
        }
        {
            LocalityElement lhsLocality;
            lhsLocality = this.getLocality();
            LocalityElement rhsLocality;
            rhsLocality = that.getLocality();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "locality", lhsLocality), LocatorUtils.property(thatLocator, "locality", rhsLocality), lhsLocality, rhsLocality)) {
                return false;
            }
        }
        {
            ThoroughfareElement lhsThoroughfare;
            lhsThoroughfare = this.getThoroughfare();
            ThoroughfareElement rhsThoroughfare;
            rhsThoroughfare = that.getThoroughfare();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "thoroughfare", lhsThoroughfare), LocatorUtils.property(thatLocator, "thoroughfare", rhsThoroughfare), lhsThoroughfare, rhsThoroughfare)) {
                return false;
            }
        }
        {
            List<Object> lhsAny;
            lhsAny = (this.isSetAny()?this.getAny():null);
            List<Object> rhsAny;
            rhsAny = (that.isSetAny()?that.getAny():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "any", lhsAny), LocatorUtils.property(thatLocator, "any", rhsAny), lhsAny, rhsAny)) {
                return false;
            }
        }
        {
            String lhsAddressType;
            lhsAddressType = this.getAddressType();
            String rhsAddressType;
            rhsAddressType = that.getAddressType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "addressType", lhsAddressType), LocatorUtils.property(thatLocator, "addressType", rhsAddressType), lhsAddressType, rhsAddressType)) {
                return false;
            }
        }
        {
            String lhsCurrentStatus;
            lhsCurrentStatus = this.getCurrentStatus();
            String rhsCurrentStatus;
            rhsCurrentStatus = that.getCurrentStatus();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "currentStatus", lhsCurrentStatus), LocatorUtils.property(thatLocator, "currentStatus", rhsCurrentStatus), lhsCurrentStatus, rhsCurrentStatus)) {
                return false;
            }
        }
        {
            String lhsValidFromDate;
            lhsValidFromDate = this.getValidFromDate();
            String rhsValidFromDate;
            rhsValidFromDate = that.getValidFromDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "validFromDate", lhsValidFromDate), LocatorUtils.property(thatLocator, "validFromDate", rhsValidFromDate), lhsValidFromDate, rhsValidFromDate)) {
                return false;
            }
        }
        {
            String lhsValidToDate;
            lhsValidToDate = this.getValidToDate();
            String rhsValidToDate;
            rhsValidToDate = that.getValidToDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "validToDate", lhsValidToDate), LocatorUtils.property(thatLocator, "validToDate", rhsValidToDate), lhsValidToDate, rhsValidToDate)) {
                return false;
            }
        }
        {
            String lhsUsage;
            lhsUsage = this.getUsage();
            String rhsUsage;
            rhsUsage = that.getUsage();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "usage", lhsUsage), LocatorUtils.property(thatLocator, "usage", rhsUsage), lhsUsage, rhsUsage)) {
                return false;
            }
        }
        {
            String lhsAddressDetailsKey;
            lhsAddressDetailsKey = this.getAddressDetailsKey();
            String rhsAddressDetailsKey;
            rhsAddressDetailsKey = that.getAddressDetailsKey();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "addressDetailsKey", lhsAddressDetailsKey), LocatorUtils.property(thatLocator, "addressDetailsKey", rhsAddressDetailsKey), lhsAddressDetailsKey, rhsAddressDetailsKey)) {
                return false;
            }
        }
        {
            String lhsCode;
            lhsCode = this.getCode();
            String rhsCode;
            rhsCode = that.getCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "code", lhsCode), LocatorUtils.property(thatLocator, "code", rhsCode), lhsCode, rhsCode)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            AddressDetails.PostalServiceElements thePostalServiceElements;
            thePostalServiceElements = this.getPostalServiceElements();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "postalServiceElements", thePostalServiceElements), currentHashCode, thePostalServiceElements);
        }
        {
            AddressDetails.Address theAddress;
            theAddress = this.getAddress();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "address", theAddress), currentHashCode, theAddress);
        }
        {
            AddressLinesType theAddressLines;
            theAddressLines = this.getAddressLines();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "addressLines", theAddressLines), currentHashCode, theAddressLines);
        }
        {
            AddressDetails.Country theCountry;
            theCountry = this.getCountry();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "country", theCountry), currentHashCode, theCountry);
        }
        {
            AdministrativeAreaElement theAdministrativeArea;
            theAdministrativeArea = this.getAdministrativeArea();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "administrativeArea", theAdministrativeArea), currentHashCode, theAdministrativeArea);
        }
        {
            LocalityElement theLocality;
            theLocality = this.getLocality();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "locality", theLocality), currentHashCode, theLocality);
        }
        {
            ThoroughfareElement theThoroughfare;
            theThoroughfare = this.getThoroughfare();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "thoroughfare", theThoroughfare), currentHashCode, theThoroughfare);
        }
        {
            List<Object> theAny;
            theAny = (this.isSetAny()?this.getAny():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "any", theAny), currentHashCode, theAny);
        }
        {
            String theAddressType;
            theAddressType = this.getAddressType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "addressType", theAddressType), currentHashCode, theAddressType);
        }
        {
            String theCurrentStatus;
            theCurrentStatus = this.getCurrentStatus();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "currentStatus", theCurrentStatus), currentHashCode, theCurrentStatus);
        }
        {
            String theValidFromDate;
            theValidFromDate = this.getValidFromDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "validFromDate", theValidFromDate), currentHashCode, theValidFromDate);
        }
        {
            String theValidToDate;
            theValidToDate = this.getValidToDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "validToDate", theValidToDate), currentHashCode, theValidToDate);
        }
        {
            String theUsage;
            theUsage = this.getUsage();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "usage", theUsage), currentHashCode, theUsage);
        }
        {
            String theAddressDetailsKey;
            theAddressDetailsKey = this.getAddressDetailsKey();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "addressDetailsKey", theAddressDetailsKey), currentHashCode, theAddressDetailsKey);
        }
        {
            String theCode;
            theCode = this.getCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "code", theCode), currentHashCode, theCode);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof AddressDetails) {
            final AddressDetails copy = ((AddressDetails) draftCopy);
            if (this.isSetPostalServiceElements()) {
                AddressDetails.PostalServiceElements sourcePostalServiceElements;
                sourcePostalServiceElements = this.getPostalServiceElements();
                AddressDetails.PostalServiceElements copyPostalServiceElements = ((AddressDetails.PostalServiceElements) strategy.copy(LocatorUtils.property(locator, "postalServiceElements", sourcePostalServiceElements), sourcePostalServiceElements));
                copy.setPostalServiceElements(copyPostalServiceElements);
            } else {
                copy.postalServiceElements = null;
            }
            if (this.isSetAddress()) {
                AddressDetails.Address sourceAddress;
                sourceAddress = this.getAddress();
                AddressDetails.Address copyAddress = ((AddressDetails.Address) strategy.copy(LocatorUtils.property(locator, "address", sourceAddress), sourceAddress));
                copy.setAddress(copyAddress);
            } else {
                copy.address = null;
            }
            if (this.isSetAddressLines()) {
                AddressLinesType sourceAddressLines;
                sourceAddressLines = this.getAddressLines();
                AddressLinesType copyAddressLines = ((AddressLinesType) strategy.copy(LocatorUtils.property(locator, "addressLines", sourceAddressLines), sourceAddressLines));
                copy.setAddressLines(copyAddressLines);
            } else {
                copy.addressLines = null;
            }
            if (this.isSetCountry()) {
                AddressDetails.Country sourceCountry;
                sourceCountry = this.getCountry();
                AddressDetails.Country copyCountry = ((AddressDetails.Country) strategy.copy(LocatorUtils.property(locator, "country", sourceCountry), sourceCountry));
                copy.setCountry(copyCountry);
            } else {
                copy.country = null;
            }
            if (this.isSetAdministrativeArea()) {
                AdministrativeAreaElement sourceAdministrativeArea;
                sourceAdministrativeArea = this.getAdministrativeArea();
                AdministrativeAreaElement copyAdministrativeArea = ((AdministrativeAreaElement) strategy.copy(LocatorUtils.property(locator, "administrativeArea", sourceAdministrativeArea), sourceAdministrativeArea));
                copy.setAdministrativeArea(copyAdministrativeArea);
            } else {
                copy.administrativeArea = null;
            }
            if (this.isSetLocality()) {
                LocalityElement sourceLocality;
                sourceLocality = this.getLocality();
                LocalityElement copyLocality = ((LocalityElement) strategy.copy(LocatorUtils.property(locator, "locality", sourceLocality), sourceLocality));
                copy.setLocality(copyLocality);
            } else {
                copy.locality = null;
            }
            if (this.isSetThoroughfare()) {
                ThoroughfareElement sourceThoroughfare;
                sourceThoroughfare = this.getThoroughfare();
                ThoroughfareElement copyThoroughfare = ((ThoroughfareElement) strategy.copy(LocatorUtils.property(locator, "thoroughfare", sourceThoroughfare), sourceThoroughfare));
                copy.setThoroughfare(copyThoroughfare);
            } else {
                copy.thoroughfare = null;
            }
            if (this.isSetAny()) {
                List<Object> sourceAny;
                sourceAny = (this.isSetAny()?this.getAny():null);
                @SuppressWarnings("unchecked")
                List<Object> copyAny = ((List<Object> ) strategy.copy(LocatorUtils.property(locator, "any", sourceAny), sourceAny));
                copy.unsetAny();
                if (copyAny!= null) {
                    List<Object> uniqueAnyl = copy.getAny();
                    uniqueAnyl.addAll(copyAny);
                }
            } else {
                copy.unsetAny();
            }
            if (this.isSetAddressType()) {
                String sourceAddressType;
                sourceAddressType = this.getAddressType();
                String copyAddressType = ((String) strategy.copy(LocatorUtils.property(locator, "addressType", sourceAddressType), sourceAddressType));
                copy.setAddressType(copyAddressType);
            } else {
                copy.addressType = null;
            }
            if (this.isSetCurrentStatus()) {
                String sourceCurrentStatus;
                sourceCurrentStatus = this.getCurrentStatus();
                String copyCurrentStatus = ((String) strategy.copy(LocatorUtils.property(locator, "currentStatus", sourceCurrentStatus), sourceCurrentStatus));
                copy.setCurrentStatus(copyCurrentStatus);
            } else {
                copy.currentStatus = null;
            }
            if (this.isSetValidFromDate()) {
                String sourceValidFromDate;
                sourceValidFromDate = this.getValidFromDate();
                String copyValidFromDate = ((String) strategy.copy(LocatorUtils.property(locator, "validFromDate", sourceValidFromDate), sourceValidFromDate));
                copy.setValidFromDate(copyValidFromDate);
            } else {
                copy.validFromDate = null;
            }
            if (this.isSetValidToDate()) {
                String sourceValidToDate;
                sourceValidToDate = this.getValidToDate();
                String copyValidToDate = ((String) strategy.copy(LocatorUtils.property(locator, "validToDate", sourceValidToDate), sourceValidToDate));
                copy.setValidToDate(copyValidToDate);
            } else {
                copy.validToDate = null;
            }
            if (this.isSetUsage()) {
                String sourceUsage;
                sourceUsage = this.getUsage();
                String copyUsage = ((String) strategy.copy(LocatorUtils.property(locator, "usage", sourceUsage), sourceUsage));
                copy.setUsage(copyUsage);
            } else {
                copy.usage = null;
            }
            if (this.isSetAddressDetailsKey()) {
                String sourceAddressDetailsKey;
                sourceAddressDetailsKey = this.getAddressDetailsKey();
                String copyAddressDetailsKey = ((String) strategy.copy(LocatorUtils.property(locator, "addressDetailsKey", sourceAddressDetailsKey), sourceAddressDetailsKey));
                copy.setAddressDetailsKey(copyAddressDetailsKey);
            } else {
                copy.addressDetailsKey = null;
            }
            if (this.isSetCode()) {
                String sourceCode;
                sourceCode = this.getCode();
                String copyCode = ((String) strategy.copy(LocatorUtils.property(locator, "code", sourceCode), sourceCode));
                copy.setCode(copyCode);
            } else {
                copy.code = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new AddressDetails();
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
     *       &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
     *       &lt;anyAttribute namespace='##other'/&gt;
     *     &lt;/restriction&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "content"
    })
    public static class Address
        implements Cloneable, CopyTo, Equals, HashCode, ToString
    {

        @XmlValue
        protected String content;
        @XmlAttribute(name = "Type")
        @XmlSchemaType(name = "anySimpleType")
        protected String type;
        @XmlAttribute(name = "Code")
        @XmlSchemaType(name = "anySimpleType")
        protected String code;
        @XmlAnyAttribute
        private Map<QName, String> otherAttributes = new HashMap<QName, String>();

        /**
         * Gets the value of the content property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getContent() {
            return content;
        }

        /**
         * Sets the value of the content property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setContent(String value) {
            this.content = value;
        }

        public boolean isSetContent() {
            return (this.content!= null);
        }

        /**
         * Gets the value of the type property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getType() {
            return type;
        }

        /**
         * Sets the value of the type property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setType(String value) {
            this.type = value;
        }

        public boolean isSetType() {
            return (this.type!= null);
        }

        /**
         * Gets the value of the code property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getCode() {
            return code;
        }

        /**
         * Sets the value of the code property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setCode(String value) {
            this.code = value;
        }

        public boolean isSetCode() {
            return (this.code!= null);
        }

        /**
         * Gets a map that contains attributes that aren't bound to any typed property on this class.
         * 
         * <p>
         * the map is keyed by the name of the attribute and 
         * the value is the string value of the attribute.
         * 
         * the map returned by this method is live, and you can add new attribute
         * by updating the map directly. Because of this design, there's no setter.
         * 
         * 
         * @return
         *     always non-null
         */
        public Map<QName, String> getOtherAttributes() {
            return otherAttributes;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                String theContent;
                theContent = this.getContent();
                strategy.appendField(locator, this, "content", buffer, theContent);
            }
            {
                String theType;
                theType = this.getType();
                strategy.appendField(locator, this, "type", buffer, theType);
            }
            {
                String theCode;
                theCode = this.getCode();
                strategy.appendField(locator, this, "code", buffer, theCode);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof AddressDetails.Address)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final AddressDetails.Address that = ((AddressDetails.Address) object);
            {
                String lhsContent;
                lhsContent = this.getContent();
                String rhsContent;
                rhsContent = that.getContent();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "content", lhsContent), LocatorUtils.property(thatLocator, "content", rhsContent), lhsContent, rhsContent)) {
                    return false;
                }
            }
            {
                String lhsType;
                lhsType = this.getType();
                String rhsType;
                rhsType = that.getType();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "type", lhsType), LocatorUtils.property(thatLocator, "type", rhsType), lhsType, rhsType)) {
                    return false;
                }
            }
            {
                String lhsCode;
                lhsCode = this.getCode();
                String rhsCode;
                rhsCode = that.getCode();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "code", lhsCode), LocatorUtils.property(thatLocator, "code", rhsCode), lhsCode, rhsCode)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                String theContent;
                theContent = this.getContent();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "content", theContent), currentHashCode, theContent);
            }
            {
                String theType;
                theType = this.getType();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "type", theType), currentHashCode, theType);
            }
            {
                String theCode;
                theCode = this.getCode();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "code", theCode), currentHashCode, theCode);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public Object clone() {
            return copyTo(createNewInstance());
        }

        public Object copyTo(Object target) {
            final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
            return copyTo(null, target, strategy);
        }

        public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
            final Object draftCopy = ((target == null)?createNewInstance():target);
            if (draftCopy instanceof AddressDetails.Address) {
                final AddressDetails.Address copy = ((AddressDetails.Address) draftCopy);
                if (this.isSetContent()) {
                    String sourceContent;
                    sourceContent = this.getContent();
                    String copyContent = ((String) strategy.copy(LocatorUtils.property(locator, "content", sourceContent), sourceContent));
                    copy.setContent(copyContent);
                } else {
                    copy.content = null;
                }
                if (this.isSetType()) {
                    String sourceType;
                    sourceType = this.getType();
                    String copyType = ((String) strategy.copy(LocatorUtils.property(locator, "type", sourceType), sourceType));
                    copy.setType(copyType);
                } else {
                    copy.type = null;
                }
                if (this.isSetCode()) {
                    String sourceCode;
                    sourceCode = this.getCode();
                    String copyCode = ((String) strategy.copy(LocatorUtils.property(locator, "code", sourceCode), sourceCode));
                    copy.setCode(copyCode);
                } else {
                    copy.code = null;
                }
            }
            return draftCopy;
        }

        public Object createNewInstance() {
            return new AddressDetails.Address();
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;sequence&gt;
     *         &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}AddressLine" maxOccurs="unbounded" minOccurs="0"/&gt;
     *         &lt;element name="CountryNameCode" maxOccurs="unbounded" minOccurs="0"&gt;
     *           &lt;complexType&gt;
     *             &lt;complexContent&gt;
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                 &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
     *                 &lt;attribute name="Scheme" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
     *                 &lt;anyAttribute namespace='##other'/&gt;
     *               &lt;/restriction&gt;
     *             &lt;/complexContent&gt;
     *           &lt;/complexType&gt;
     *         &lt;/element&gt;
     *         &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}CountryName" maxOccurs="unbounded" minOccurs="0"/&gt;
     *         &lt;choice minOccurs="0"&gt;
     *           &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}AdministrativeArea"/&gt;
     *           &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}Locality"/&gt;
     *           &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}Thoroughfare"/&gt;
     *         &lt;/choice&gt;
     *         &lt;any namespace='##other' maxOccurs="unbounded" minOccurs="0"/&gt;
     *       &lt;/sequence&gt;
     *       &lt;anyAttribute namespace='##other'/&gt;
     *     &lt;/restriction&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "addressLine",
        "countryNameCode",
        "countryName",
        "administrativeArea",
        "locality",
        "thoroughfare",
        "any"
    })
    public static class Country
        implements Cloneable, CopyTo, Equals, HashCode, ToString
    {

        @XmlElement(name = "AddressLine")
        protected List<AddressLineElement> addressLine;
        @XmlElement(name = "CountryNameCode")
        protected List<AddressDetails.Country.CountryNameCode> countryNameCode;
        @XmlElement(name = "CountryName")
        protected List<CountryNameElement> countryName;
        @XmlElement(name = "AdministrativeArea")
        protected AdministrativeAreaElement administrativeArea;
        @XmlElement(name = "Locality")
        protected LocalityElement locality;
        @XmlElement(name = "Thoroughfare")
        protected ThoroughfareElement thoroughfare;
        @XmlAnyElement(lax = true)
        protected List<Object> any;
        @XmlAnyAttribute
        private Map<QName, String> otherAttributes = new HashMap<QName, String>();

        /**
         * Gets the value of the addressLine property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the addressLine property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getAddressLine().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link AddressLineElement }
         * 
         * 
         */
        public List<AddressLineElement> getAddressLine() {
            if (addressLine == null) {
                addressLine = new ArrayList<AddressLineElement>();
            }
            return this.addressLine;
        }

        public boolean isSetAddressLine() {
            return ((this.addressLine!= null)&&(!this.addressLine.isEmpty()));
        }

        public void unsetAddressLine() {
            this.addressLine = null;
        }

        /**
         * Gets the value of the countryNameCode property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the countryNameCode property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getCountryNameCode().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link AddressDetails.Country.CountryNameCode }
         * 
         * 
         */
        public List<AddressDetails.Country.CountryNameCode> getCountryNameCode() {
            if (countryNameCode == null) {
                countryNameCode = new ArrayList<AddressDetails.Country.CountryNameCode>();
            }
            return this.countryNameCode;
        }

        public boolean isSetCountryNameCode() {
            return ((this.countryNameCode!= null)&&(!this.countryNameCode.isEmpty()));
        }

        public void unsetCountryNameCode() {
            this.countryNameCode = null;
        }

        /**
         * Gets the value of the countryName property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the countryName property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getCountryName().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link CountryNameElement }
         * 
         * 
         */
        public List<CountryNameElement> getCountryName() {
            if (countryName == null) {
                countryName = new ArrayList<CountryNameElement>();
            }
            return this.countryName;
        }

        public boolean isSetCountryName() {
            return ((this.countryName!= null)&&(!this.countryName.isEmpty()));
        }

        public void unsetCountryName() {
            this.countryName = null;
        }

        /**
         * Gets the value of the administrativeArea property.
         * 
         * @return
         *     possible object is
         *     {@link AdministrativeAreaElement }
         *     
         */
        public AdministrativeAreaElement getAdministrativeArea() {
            return administrativeArea;
        }

        /**
         * Sets the value of the administrativeArea property.
         * 
         * @param value
         *     allowed object is
         *     {@link AdministrativeAreaElement }
         *     
         */
        public void setAdministrativeArea(AdministrativeAreaElement value) {
            this.administrativeArea = value;
        }

        public boolean isSetAdministrativeArea() {
            return (this.administrativeArea!= null);
        }

        /**
         * Gets the value of the locality property.
         * 
         * @return
         *     possible object is
         *     {@link LocalityElement }
         *     
         */
        public LocalityElement getLocality() {
            return locality;
        }

        /**
         * Sets the value of the locality property.
         * 
         * @param value
         *     allowed object is
         *     {@link LocalityElement }
         *     
         */
        public void setLocality(LocalityElement value) {
            this.locality = value;
        }

        public boolean isSetLocality() {
            return (this.locality!= null);
        }

        /**
         * Gets the value of the thoroughfare property.
         * 
         * @return
         *     possible object is
         *     {@link ThoroughfareElement }
         *     
         */
        public ThoroughfareElement getThoroughfare() {
            return thoroughfare;
        }

        /**
         * Sets the value of the thoroughfare property.
         * 
         * @param value
         *     allowed object is
         *     {@link ThoroughfareElement }
         *     
         */
        public void setThoroughfare(ThoroughfareElement value) {
            this.thoroughfare = value;
        }

        public boolean isSetThoroughfare() {
            return (this.thoroughfare!= null);
        }

        /**
         * Gets the value of the any property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the any property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getAny().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link Object }
         * 
         * 
         */
        public List<Object> getAny() {
            if (any == null) {
                any = new ArrayList<Object>();
            }
            return this.any;
        }

        public boolean isSetAny() {
            return ((this.any!= null)&&(!this.any.isEmpty()));
        }

        public void unsetAny() {
            this.any = null;
        }

        /**
         * Gets a map that contains attributes that aren't bound to any typed property on this class.
         * 
         * <p>
         * the map is keyed by the name of the attribute and 
         * the value is the string value of the attribute.
         * 
         * the map returned by this method is live, and you can add new attribute
         * by updating the map directly. Because of this design, there's no setter.
         * 
         * 
         * @return
         *     always non-null
         */
        public Map<QName, String> getOtherAttributes() {
            return otherAttributes;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                List<AddressLineElement> theAddressLine;
                theAddressLine = (this.isSetAddressLine()?this.getAddressLine():null);
                strategy.appendField(locator, this, "addressLine", buffer, theAddressLine);
            }
            {
                List<AddressDetails.Country.CountryNameCode> theCountryNameCode;
                theCountryNameCode = (this.isSetCountryNameCode()?this.getCountryNameCode():null);
                strategy.appendField(locator, this, "countryNameCode", buffer, theCountryNameCode);
            }
            {
                List<CountryNameElement> theCountryName;
                theCountryName = (this.isSetCountryName()?this.getCountryName():null);
                strategy.appendField(locator, this, "countryName", buffer, theCountryName);
            }
            {
                AdministrativeAreaElement theAdministrativeArea;
                theAdministrativeArea = this.getAdministrativeArea();
                strategy.appendField(locator, this, "administrativeArea", buffer, theAdministrativeArea);
            }
            {
                LocalityElement theLocality;
                theLocality = this.getLocality();
                strategy.appendField(locator, this, "locality", buffer, theLocality);
            }
            {
                ThoroughfareElement theThoroughfare;
                theThoroughfare = this.getThoroughfare();
                strategy.appendField(locator, this, "thoroughfare", buffer, theThoroughfare);
            }
            {
                List<Object> theAny;
                theAny = (this.isSetAny()?this.getAny():null);
                strategy.appendField(locator, this, "any", buffer, theAny);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof AddressDetails.Country)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final AddressDetails.Country that = ((AddressDetails.Country) object);
            {
                List<AddressLineElement> lhsAddressLine;
                lhsAddressLine = (this.isSetAddressLine()?this.getAddressLine():null);
                List<AddressLineElement> rhsAddressLine;
                rhsAddressLine = (that.isSetAddressLine()?that.getAddressLine():null);
                if (!strategy.equals(LocatorUtils.property(thisLocator, "addressLine", lhsAddressLine), LocatorUtils.property(thatLocator, "addressLine", rhsAddressLine), lhsAddressLine, rhsAddressLine)) {
                    return false;
                }
            }
            {
                List<AddressDetails.Country.CountryNameCode> lhsCountryNameCode;
                lhsCountryNameCode = (this.isSetCountryNameCode()?this.getCountryNameCode():null);
                List<AddressDetails.Country.CountryNameCode> rhsCountryNameCode;
                rhsCountryNameCode = (that.isSetCountryNameCode()?that.getCountryNameCode():null);
                if (!strategy.equals(LocatorUtils.property(thisLocator, "countryNameCode", lhsCountryNameCode), LocatorUtils.property(thatLocator, "countryNameCode", rhsCountryNameCode), lhsCountryNameCode, rhsCountryNameCode)) {
                    return false;
                }
            }
            {
                List<CountryNameElement> lhsCountryName;
                lhsCountryName = (this.isSetCountryName()?this.getCountryName():null);
                List<CountryNameElement> rhsCountryName;
                rhsCountryName = (that.isSetCountryName()?that.getCountryName():null);
                if (!strategy.equals(LocatorUtils.property(thisLocator, "countryName", lhsCountryName), LocatorUtils.property(thatLocator, "countryName", rhsCountryName), lhsCountryName, rhsCountryName)) {
                    return false;
                }
            }
            {
                AdministrativeAreaElement lhsAdministrativeArea;
                lhsAdministrativeArea = this.getAdministrativeArea();
                AdministrativeAreaElement rhsAdministrativeArea;
                rhsAdministrativeArea = that.getAdministrativeArea();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "administrativeArea", lhsAdministrativeArea), LocatorUtils.property(thatLocator, "administrativeArea", rhsAdministrativeArea), lhsAdministrativeArea, rhsAdministrativeArea)) {
                    return false;
                }
            }
            {
                LocalityElement lhsLocality;
                lhsLocality = this.getLocality();
                LocalityElement rhsLocality;
                rhsLocality = that.getLocality();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "locality", lhsLocality), LocatorUtils.property(thatLocator, "locality", rhsLocality), lhsLocality, rhsLocality)) {
                    return false;
                }
            }
            {
                ThoroughfareElement lhsThoroughfare;
                lhsThoroughfare = this.getThoroughfare();
                ThoroughfareElement rhsThoroughfare;
                rhsThoroughfare = that.getThoroughfare();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "thoroughfare", lhsThoroughfare), LocatorUtils.property(thatLocator, "thoroughfare", rhsThoroughfare), lhsThoroughfare, rhsThoroughfare)) {
                    return false;
                }
            }
            {
                List<Object> lhsAny;
                lhsAny = (this.isSetAny()?this.getAny():null);
                List<Object> rhsAny;
                rhsAny = (that.isSetAny()?that.getAny():null);
                if (!strategy.equals(LocatorUtils.property(thisLocator, "any", lhsAny), LocatorUtils.property(thatLocator, "any", rhsAny), lhsAny, rhsAny)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                List<AddressLineElement> theAddressLine;
                theAddressLine = (this.isSetAddressLine()?this.getAddressLine():null);
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "addressLine", theAddressLine), currentHashCode, theAddressLine);
            }
            {
                List<AddressDetails.Country.CountryNameCode> theCountryNameCode;
                theCountryNameCode = (this.isSetCountryNameCode()?this.getCountryNameCode():null);
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "countryNameCode", theCountryNameCode), currentHashCode, theCountryNameCode);
            }
            {
                List<CountryNameElement> theCountryName;
                theCountryName = (this.isSetCountryName()?this.getCountryName():null);
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "countryName", theCountryName), currentHashCode, theCountryName);
            }
            {
                AdministrativeAreaElement theAdministrativeArea;
                theAdministrativeArea = this.getAdministrativeArea();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "administrativeArea", theAdministrativeArea), currentHashCode, theAdministrativeArea);
            }
            {
                LocalityElement theLocality;
                theLocality = this.getLocality();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "locality", theLocality), currentHashCode, theLocality);
            }
            {
                ThoroughfareElement theThoroughfare;
                theThoroughfare = this.getThoroughfare();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "thoroughfare", theThoroughfare), currentHashCode, theThoroughfare);
            }
            {
                List<Object> theAny;
                theAny = (this.isSetAny()?this.getAny():null);
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "any", theAny), currentHashCode, theAny);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public Object clone() {
            return copyTo(createNewInstance());
        }

        public Object copyTo(Object target) {
            final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
            return copyTo(null, target, strategy);
        }

        public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
            final Object draftCopy = ((target == null)?createNewInstance():target);
            if (draftCopy instanceof AddressDetails.Country) {
                final AddressDetails.Country copy = ((AddressDetails.Country) draftCopy);
                if (this.isSetAddressLine()) {
                    List<AddressLineElement> sourceAddressLine;
                    sourceAddressLine = (this.isSetAddressLine()?this.getAddressLine():null);
                    @SuppressWarnings("unchecked")
                    List<AddressLineElement> copyAddressLine = ((List<AddressLineElement> ) strategy.copy(LocatorUtils.property(locator, "addressLine", sourceAddressLine), sourceAddressLine));
                    copy.unsetAddressLine();
                    if (copyAddressLine!= null) {
                        List<AddressLineElement> uniqueAddressLinel = copy.getAddressLine();
                        uniqueAddressLinel.addAll(copyAddressLine);
                    }
                } else {
                    copy.unsetAddressLine();
                }
                if (this.isSetCountryNameCode()) {
                    List<AddressDetails.Country.CountryNameCode> sourceCountryNameCode;
                    sourceCountryNameCode = (this.isSetCountryNameCode()?this.getCountryNameCode():null);
                    @SuppressWarnings("unchecked")
                    List<AddressDetails.Country.CountryNameCode> copyCountryNameCode = ((List<AddressDetails.Country.CountryNameCode> ) strategy.copy(LocatorUtils.property(locator, "countryNameCode", sourceCountryNameCode), sourceCountryNameCode));
                    copy.unsetCountryNameCode();
                    if (copyCountryNameCode!= null) {
                        List<AddressDetails.Country.CountryNameCode> uniqueCountryNameCodel = copy.getCountryNameCode();
                        uniqueCountryNameCodel.addAll(copyCountryNameCode);
                    }
                } else {
                    copy.unsetCountryNameCode();
                }
                if (this.isSetCountryName()) {
                    List<CountryNameElement> sourceCountryName;
                    sourceCountryName = (this.isSetCountryName()?this.getCountryName():null);
                    @SuppressWarnings("unchecked")
                    List<CountryNameElement> copyCountryName = ((List<CountryNameElement> ) strategy.copy(LocatorUtils.property(locator, "countryName", sourceCountryName), sourceCountryName));
                    copy.unsetCountryName();
                    if (copyCountryName!= null) {
                        List<CountryNameElement> uniqueCountryNamel = copy.getCountryName();
                        uniqueCountryNamel.addAll(copyCountryName);
                    }
                } else {
                    copy.unsetCountryName();
                }
                if (this.isSetAdministrativeArea()) {
                    AdministrativeAreaElement sourceAdministrativeArea;
                    sourceAdministrativeArea = this.getAdministrativeArea();
                    AdministrativeAreaElement copyAdministrativeArea = ((AdministrativeAreaElement) strategy.copy(LocatorUtils.property(locator, "administrativeArea", sourceAdministrativeArea), sourceAdministrativeArea));
                    copy.setAdministrativeArea(copyAdministrativeArea);
                } else {
                    copy.administrativeArea = null;
                }
                if (this.isSetLocality()) {
                    LocalityElement sourceLocality;
                    sourceLocality = this.getLocality();
                    LocalityElement copyLocality = ((LocalityElement) strategy.copy(LocatorUtils.property(locator, "locality", sourceLocality), sourceLocality));
                    copy.setLocality(copyLocality);
                } else {
                    copy.locality = null;
                }
                if (this.isSetThoroughfare()) {
                    ThoroughfareElement sourceThoroughfare;
                    sourceThoroughfare = this.getThoroughfare();
                    ThoroughfareElement copyThoroughfare = ((ThoroughfareElement) strategy.copy(LocatorUtils.property(locator, "thoroughfare", sourceThoroughfare), sourceThoroughfare));
                    copy.setThoroughfare(copyThoroughfare);
                } else {
                    copy.thoroughfare = null;
                }
                if (this.isSetAny()) {
                    List<Object> sourceAny;
                    sourceAny = (this.isSetAny()?this.getAny():null);
                    @SuppressWarnings("unchecked")
                    List<Object> copyAny = ((List<Object> ) strategy.copy(LocatorUtils.property(locator, "any", sourceAny), sourceAny));
                    copy.unsetAny();
                    if (copyAny!= null) {
                        List<Object> uniqueAnyl = copy.getAny();
                        uniqueAnyl.addAll(copyAny);
                    }
                } else {
                    copy.unsetAny();
                }
            }
            return draftCopy;
        }

        public Object createNewInstance() {
            return new AddressDetails.Country();
        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType&gt;
         *   &lt;complexContent&gt;
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
         *       &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
         *       &lt;attribute name="Scheme" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
         *       &lt;anyAttribute namespace='##other'/&gt;
         *     &lt;/restriction&gt;
         *   &lt;/complexContent&gt;
         * &lt;/complexType&gt;
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "content"
        })
        public static class CountryNameCode
            implements Cloneable, CopyTo, Equals, HashCode, ToString
        {

            @XmlValue
            protected String content;
            @XmlAttribute(name = "Scheme")
            @XmlSchemaType(name = "anySimpleType")
            protected String scheme;
            @XmlAttribute(name = "Code")
            @XmlSchemaType(name = "anySimpleType")
            protected String code;
            @XmlAnyAttribute
            private Map<QName, String> otherAttributes = new HashMap<QName, String>();

            /**
             * Gets the value of the content property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getContent() {
                return content;
            }

            /**
             * Sets the value of the content property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setContent(String value) {
                this.content = value;
            }

            public boolean isSetContent() {
                return (this.content!= null);
            }

            /**
             * Gets the value of the scheme property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getScheme() {
                return scheme;
            }

            /**
             * Sets the value of the scheme property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setScheme(String value) {
                this.scheme = value;
            }

            public boolean isSetScheme() {
                return (this.scheme!= null);
            }

            /**
             * Gets the value of the code property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getCode() {
                return code;
            }

            /**
             * Sets the value of the code property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setCode(String value) {
                this.code = value;
            }

            public boolean isSetCode() {
                return (this.code!= null);
            }

            /**
             * Gets a map that contains attributes that aren't bound to any typed property on this class.
             * 
             * <p>
             * the map is keyed by the name of the attribute and 
             * the value is the string value of the attribute.
             * 
             * the map returned by this method is live, and you can add new attribute
             * by updating the map directly. Because of this design, there's no setter.
             * 
             * 
             * @return
             *     always non-null
             */
            public Map<QName, String> getOtherAttributes() {
                return otherAttributes;
            }

            public String toString() {
                final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
                final StringBuilder buffer = new StringBuilder();
                append(null, buffer, strategy);
                return buffer.toString();
            }

            public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                strategy.appendStart(locator, this, buffer);
                appendFields(locator, buffer, strategy);
                strategy.appendEnd(locator, this, buffer);
                return buffer;
            }

            public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                {
                    String theContent;
                    theContent = this.getContent();
                    strategy.appendField(locator, this, "content", buffer, theContent);
                }
                {
                    String theScheme;
                    theScheme = this.getScheme();
                    strategy.appendField(locator, this, "scheme", buffer, theScheme);
                }
                {
                    String theCode;
                    theCode = this.getCode();
                    strategy.appendField(locator, this, "code", buffer, theCode);
                }
                return buffer;
            }

            public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
                if (!(object instanceof AddressDetails.Country.CountryNameCode)) {
                    return false;
                }
                if (this == object) {
                    return true;
                }
                final AddressDetails.Country.CountryNameCode that = ((AddressDetails.Country.CountryNameCode) object);
                {
                    String lhsContent;
                    lhsContent = this.getContent();
                    String rhsContent;
                    rhsContent = that.getContent();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "content", lhsContent), LocatorUtils.property(thatLocator, "content", rhsContent), lhsContent, rhsContent)) {
                        return false;
                    }
                }
                {
                    String lhsScheme;
                    lhsScheme = this.getScheme();
                    String rhsScheme;
                    rhsScheme = that.getScheme();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "scheme", lhsScheme), LocatorUtils.property(thatLocator, "scheme", rhsScheme), lhsScheme, rhsScheme)) {
                        return false;
                    }
                }
                {
                    String lhsCode;
                    lhsCode = this.getCode();
                    String rhsCode;
                    rhsCode = that.getCode();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "code", lhsCode), LocatorUtils.property(thatLocator, "code", rhsCode), lhsCode, rhsCode)) {
                        return false;
                    }
                }
                return true;
            }

            public boolean equals(Object object) {
                final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
                return equals(null, null, object, strategy);
            }

            public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
                int currentHashCode = 1;
                {
                    String theContent;
                    theContent = this.getContent();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "content", theContent), currentHashCode, theContent);
                }
                {
                    String theScheme;
                    theScheme = this.getScheme();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "scheme", theScheme), currentHashCode, theScheme);
                }
                {
                    String theCode;
                    theCode = this.getCode();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "code", theCode), currentHashCode, theCode);
                }
                return currentHashCode;
            }

            public int hashCode() {
                final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
                return this.hashCode(null, strategy);
            }

            public Object clone() {
                return copyTo(createNewInstance());
            }

            public Object copyTo(Object target) {
                final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
                return copyTo(null, target, strategy);
            }

            public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
                final Object draftCopy = ((target == null)?createNewInstance():target);
                if (draftCopy instanceof AddressDetails.Country.CountryNameCode) {
                    final AddressDetails.Country.CountryNameCode copy = ((AddressDetails.Country.CountryNameCode) draftCopy);
                    if (this.isSetContent()) {
                        String sourceContent;
                        sourceContent = this.getContent();
                        String copyContent = ((String) strategy.copy(LocatorUtils.property(locator, "content", sourceContent), sourceContent));
                        copy.setContent(copyContent);
                    } else {
                        copy.content = null;
                    }
                    if (this.isSetScheme()) {
                        String sourceScheme;
                        sourceScheme = this.getScheme();
                        String copyScheme = ((String) strategy.copy(LocatorUtils.property(locator, "scheme", sourceScheme), sourceScheme));
                        copy.setScheme(copyScheme);
                    } else {
                        copy.scheme = null;
                    }
                    if (this.isSetCode()) {
                        String sourceCode;
                        sourceCode = this.getCode();
                        String copyCode = ((String) strategy.copy(LocatorUtils.property(locator, "code", sourceCode), sourceCode));
                        copy.setCode(copyCode);
                    } else {
                        copy.code = null;
                    }
                }
                return draftCopy;
            }

            public Object createNewInstance() {
                return new AddressDetails.Country.CountryNameCode();
            }

        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;sequence&gt;
     *         &lt;element name="AddressIdentifier" maxOccurs="unbounded" minOccurs="0"&gt;
     *           &lt;complexType&gt;
     *             &lt;complexContent&gt;
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                 &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
     *                 &lt;attribute name="IdentifierType" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
     *                 &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
     *                 &lt;anyAttribute namespace='##other'/&gt;
     *               &lt;/restriction&gt;
     *             &lt;/complexContent&gt;
     *           &lt;/complexType&gt;
     *         &lt;/element&gt;
     *         &lt;element name="EndorsementLineCode" minOccurs="0"&gt;
     *           &lt;complexType&gt;
     *             &lt;complexContent&gt;
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                 &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
     *                 &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
     *                 &lt;anyAttribute namespace='##other'/&gt;
     *               &lt;/restriction&gt;
     *             &lt;/complexContent&gt;
     *           &lt;/complexType&gt;
     *         &lt;/element&gt;
     *         &lt;element name="KeyLineCode" minOccurs="0"&gt;
     *           &lt;complexType&gt;
     *             &lt;complexContent&gt;
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                 &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
     *                 &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
     *                 &lt;anyAttribute namespace='##other'/&gt;
     *               &lt;/restriction&gt;
     *             &lt;/complexContent&gt;
     *           &lt;/complexType&gt;
     *         &lt;/element&gt;
     *         &lt;element name="Barcode" minOccurs="0"&gt;
     *           &lt;complexType&gt;
     *             &lt;complexContent&gt;
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                 &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
     *                 &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
     *                 &lt;anyAttribute namespace='##other'/&gt;
     *               &lt;/restriction&gt;
     *             &lt;/complexContent&gt;
     *           &lt;/complexType&gt;
     *         &lt;/element&gt;
     *         &lt;element name="SortingCode" minOccurs="0"&gt;
     *           &lt;complexType&gt;
     *             &lt;complexContent&gt;
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                 &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
     *                 &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
     *               &lt;/restriction&gt;
     *             &lt;/complexContent&gt;
     *           &lt;/complexType&gt;
     *         &lt;/element&gt;
     *         &lt;element name="AddressLatitude" minOccurs="0"&gt;
     *           &lt;complexType&gt;
     *             &lt;complexContent&gt;
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                 &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
     *                 &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
     *                 &lt;anyAttribute namespace='##other'/&gt;
     *               &lt;/restriction&gt;
     *             &lt;/complexContent&gt;
     *           &lt;/complexType&gt;
     *         &lt;/element&gt;
     *         &lt;element name="AddressLatitudeDirection" minOccurs="0"&gt;
     *           &lt;complexType&gt;
     *             &lt;complexContent&gt;
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                 &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
     *                 &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
     *                 &lt;anyAttribute namespace='##other'/&gt;
     *               &lt;/restriction&gt;
     *             &lt;/complexContent&gt;
     *           &lt;/complexType&gt;
     *         &lt;/element&gt;
     *         &lt;element name="AddressLongitude" minOccurs="0"&gt;
     *           &lt;complexType&gt;
     *             &lt;complexContent&gt;
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                 &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
     *                 &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
     *                 &lt;anyAttribute namespace='##other'/&gt;
     *               &lt;/restriction&gt;
     *             &lt;/complexContent&gt;
     *           &lt;/complexType&gt;
     *         &lt;/element&gt;
     *         &lt;element name="AddressLongitudeDirection" minOccurs="0"&gt;
     *           &lt;complexType&gt;
     *             &lt;complexContent&gt;
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                 &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
     *                 &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
     *                 &lt;anyAttribute namespace='##other'/&gt;
     *               &lt;/restriction&gt;
     *             &lt;/complexContent&gt;
     *           &lt;/complexType&gt;
     *         &lt;/element&gt;
     *         &lt;element name="SupplementaryPostalServiceData" maxOccurs="unbounded" minOccurs="0"&gt;
     *           &lt;complexType&gt;
     *             &lt;complexContent&gt;
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                 &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
     *                 &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
     *                 &lt;anyAttribute namespace='##other'/&gt;
     *               &lt;/restriction&gt;
     *             &lt;/complexContent&gt;
     *           &lt;/complexType&gt;
     *         &lt;/element&gt;
     *         &lt;any namespace='##other' maxOccurs="unbounded" minOccurs="0"/&gt;
     *       &lt;/sequence&gt;
     *       &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
     *       &lt;anyAttribute namespace='##other'/&gt;
     *     &lt;/restriction&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "addressIdentifier",
        "endorsementLineCode",
        "keyLineCode",
        "barcode",
        "sortingCode",
        "addressLatitude",
        "addressLatitudeDirection",
        "addressLongitude",
        "addressLongitudeDirection",
        "supplementaryPostalServiceData",
        "any"
    })
    public static class PostalServiceElements
        implements Cloneable, CopyTo, Equals, HashCode, ToString
    {

        @XmlElement(name = "AddressIdentifier")
        protected List<AddressDetails.PostalServiceElements.AddressIdentifier> addressIdentifier;
        @XmlElement(name = "EndorsementLineCode")
        protected AddressDetails.PostalServiceElements.EndorsementLineCode endorsementLineCode;
        @XmlElement(name = "KeyLineCode")
        protected AddressDetails.PostalServiceElements.KeyLineCode keyLineCode;
        @XmlElement(name = "Barcode")
        protected AddressDetails.PostalServiceElements.Barcode barcode;
        @XmlElement(name = "SortingCode")
        protected AddressDetails.PostalServiceElements.SortingCode sortingCode;
        @XmlElement(name = "AddressLatitude")
        protected AddressDetails.PostalServiceElements.AddressLatitude addressLatitude;
        @XmlElement(name = "AddressLatitudeDirection")
        protected AddressDetails.PostalServiceElements.AddressLatitudeDirection addressLatitudeDirection;
        @XmlElement(name = "AddressLongitude")
        protected AddressDetails.PostalServiceElements.AddressLongitude addressLongitude;
        @XmlElement(name = "AddressLongitudeDirection")
        protected AddressDetails.PostalServiceElements.AddressLongitudeDirection addressLongitudeDirection;
        @XmlElement(name = "SupplementaryPostalServiceData")
        protected List<AddressDetails.PostalServiceElements.SupplementaryPostalServiceData> supplementaryPostalServiceData;
        @XmlAnyElement(lax = true)
        protected List<Object> any;
        @XmlAttribute(name = "Type")
        @XmlSchemaType(name = "anySimpleType")
        protected String type;
        @XmlAnyAttribute
        private Map<QName, String> otherAttributes = new HashMap<QName, String>();

        /**
         * Gets the value of the addressIdentifier property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the addressIdentifier property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getAddressIdentifier().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link AddressDetails.PostalServiceElements.AddressIdentifier }
         * 
         * 
         */
        public List<AddressDetails.PostalServiceElements.AddressIdentifier> getAddressIdentifier() {
            if (addressIdentifier == null) {
                addressIdentifier = new ArrayList<AddressDetails.PostalServiceElements.AddressIdentifier>();
            }
            return this.addressIdentifier;
        }

        public boolean isSetAddressIdentifier() {
            return ((this.addressIdentifier!= null)&&(!this.addressIdentifier.isEmpty()));
        }

        public void unsetAddressIdentifier() {
            this.addressIdentifier = null;
        }

        /**
         * Gets the value of the endorsementLineCode property.
         * 
         * @return
         *     possible object is
         *     {@link AddressDetails.PostalServiceElements.EndorsementLineCode }
         *     
         */
        public AddressDetails.PostalServiceElements.EndorsementLineCode getEndorsementLineCode() {
            return endorsementLineCode;
        }

        /**
         * Sets the value of the endorsementLineCode property.
         * 
         * @param value
         *     allowed object is
         *     {@link AddressDetails.PostalServiceElements.EndorsementLineCode }
         *     
         */
        public void setEndorsementLineCode(AddressDetails.PostalServiceElements.EndorsementLineCode value) {
            this.endorsementLineCode = value;
        }

        public boolean isSetEndorsementLineCode() {
            return (this.endorsementLineCode!= null);
        }

        /**
         * Gets the value of the keyLineCode property.
         * 
         * @return
         *     possible object is
         *     {@link AddressDetails.PostalServiceElements.KeyLineCode }
         *     
         */
        public AddressDetails.PostalServiceElements.KeyLineCode getKeyLineCode() {
            return keyLineCode;
        }

        /**
         * Sets the value of the keyLineCode property.
         * 
         * @param value
         *     allowed object is
         *     {@link AddressDetails.PostalServiceElements.KeyLineCode }
         *     
         */
        public void setKeyLineCode(AddressDetails.PostalServiceElements.KeyLineCode value) {
            this.keyLineCode = value;
        }

        public boolean isSetKeyLineCode() {
            return (this.keyLineCode!= null);
        }

        /**
         * Gets the value of the barcode property.
         * 
         * @return
         *     possible object is
         *     {@link AddressDetails.PostalServiceElements.Barcode }
         *     
         */
        public AddressDetails.PostalServiceElements.Barcode getBarcode() {
            return barcode;
        }

        /**
         * Sets the value of the barcode property.
         * 
         * @param value
         *     allowed object is
         *     {@link AddressDetails.PostalServiceElements.Barcode }
         *     
         */
        public void setBarcode(AddressDetails.PostalServiceElements.Barcode value) {
            this.barcode = value;
        }

        public boolean isSetBarcode() {
            return (this.barcode!= null);
        }

        /**
         * Gets the value of the sortingCode property.
         * 
         * @return
         *     possible object is
         *     {@link AddressDetails.PostalServiceElements.SortingCode }
         *     
         */
        public AddressDetails.PostalServiceElements.SortingCode getSortingCode() {
            return sortingCode;
        }

        /**
         * Sets the value of the sortingCode property.
         * 
         * @param value
         *     allowed object is
         *     {@link AddressDetails.PostalServiceElements.SortingCode }
         *     
         */
        public void setSortingCode(AddressDetails.PostalServiceElements.SortingCode value) {
            this.sortingCode = value;
        }

        public boolean isSetSortingCode() {
            return (this.sortingCode!= null);
        }

        /**
         * Gets the value of the addressLatitude property.
         * 
         * @return
         *     possible object is
         *     {@link AddressDetails.PostalServiceElements.AddressLatitude }
         *     
         */
        public AddressDetails.PostalServiceElements.AddressLatitude getAddressLatitude() {
            return addressLatitude;
        }

        /**
         * Sets the value of the addressLatitude property.
         * 
         * @param value
         *     allowed object is
         *     {@link AddressDetails.PostalServiceElements.AddressLatitude }
         *     
         */
        public void setAddressLatitude(AddressDetails.PostalServiceElements.AddressLatitude value) {
            this.addressLatitude = value;
        }

        public boolean isSetAddressLatitude() {
            return (this.addressLatitude!= null);
        }

        /**
         * Gets the value of the addressLatitudeDirection property.
         * 
         * @return
         *     possible object is
         *     {@link AddressDetails.PostalServiceElements.AddressLatitudeDirection }
         *     
         */
        public AddressDetails.PostalServiceElements.AddressLatitudeDirection getAddressLatitudeDirection() {
            return addressLatitudeDirection;
        }

        /**
         * Sets the value of the addressLatitudeDirection property.
         * 
         * @param value
         *     allowed object is
         *     {@link AddressDetails.PostalServiceElements.AddressLatitudeDirection }
         *     
         */
        public void setAddressLatitudeDirection(AddressDetails.PostalServiceElements.AddressLatitudeDirection value) {
            this.addressLatitudeDirection = value;
        }

        public boolean isSetAddressLatitudeDirection() {
            return (this.addressLatitudeDirection!= null);
        }

        /**
         * Gets the value of the addressLongitude property.
         * 
         * @return
         *     possible object is
         *     {@link AddressDetails.PostalServiceElements.AddressLongitude }
         *     
         */
        public AddressDetails.PostalServiceElements.AddressLongitude getAddressLongitude() {
            return addressLongitude;
        }

        /**
         * Sets the value of the addressLongitude property.
         * 
         * @param value
         *     allowed object is
         *     {@link AddressDetails.PostalServiceElements.AddressLongitude }
         *     
         */
        public void setAddressLongitude(AddressDetails.PostalServiceElements.AddressLongitude value) {
            this.addressLongitude = value;
        }

        public boolean isSetAddressLongitude() {
            return (this.addressLongitude!= null);
        }

        /**
         * Gets the value of the addressLongitudeDirection property.
         * 
         * @return
         *     possible object is
         *     {@link AddressDetails.PostalServiceElements.AddressLongitudeDirection }
         *     
         */
        public AddressDetails.PostalServiceElements.AddressLongitudeDirection getAddressLongitudeDirection() {
            return addressLongitudeDirection;
        }

        /**
         * Sets the value of the addressLongitudeDirection property.
         * 
         * @param value
         *     allowed object is
         *     {@link AddressDetails.PostalServiceElements.AddressLongitudeDirection }
         *     
         */
        public void setAddressLongitudeDirection(AddressDetails.PostalServiceElements.AddressLongitudeDirection value) {
            this.addressLongitudeDirection = value;
        }

        public boolean isSetAddressLongitudeDirection() {
            return (this.addressLongitudeDirection!= null);
        }

        /**
         * Gets the value of the supplementaryPostalServiceData property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the supplementaryPostalServiceData property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getSupplementaryPostalServiceData().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link AddressDetails.PostalServiceElements.SupplementaryPostalServiceData }
         * 
         * 
         */
        public List<AddressDetails.PostalServiceElements.SupplementaryPostalServiceData> getSupplementaryPostalServiceData() {
            if (supplementaryPostalServiceData == null) {
                supplementaryPostalServiceData = new ArrayList<AddressDetails.PostalServiceElements.SupplementaryPostalServiceData>();
            }
            return this.supplementaryPostalServiceData;
        }

        public boolean isSetSupplementaryPostalServiceData() {
            return ((this.supplementaryPostalServiceData!= null)&&(!this.supplementaryPostalServiceData.isEmpty()));
        }

        public void unsetSupplementaryPostalServiceData() {
            this.supplementaryPostalServiceData = null;
        }

        /**
         * Gets the value of the any property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the any property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getAny().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link Object }
         * 
         * 
         */
        public List<Object> getAny() {
            if (any == null) {
                any = new ArrayList<Object>();
            }
            return this.any;
        }

        public boolean isSetAny() {
            return ((this.any!= null)&&(!this.any.isEmpty()));
        }

        public void unsetAny() {
            this.any = null;
        }

        /**
         * Gets the value of the type property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getType() {
            return type;
        }

        /**
         * Sets the value of the type property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setType(String value) {
            this.type = value;
        }

        public boolean isSetType() {
            return (this.type!= null);
        }

        /**
         * Gets a map that contains attributes that aren't bound to any typed property on this class.
         * 
         * <p>
         * the map is keyed by the name of the attribute and 
         * the value is the string value of the attribute.
         * 
         * the map returned by this method is live, and you can add new attribute
         * by updating the map directly. Because of this design, there's no setter.
         * 
         * 
         * @return
         *     always non-null
         */
        public Map<QName, String> getOtherAttributes() {
            return otherAttributes;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                List<AddressDetails.PostalServiceElements.AddressIdentifier> theAddressIdentifier;
                theAddressIdentifier = (this.isSetAddressIdentifier()?this.getAddressIdentifier():null);
                strategy.appendField(locator, this, "addressIdentifier", buffer, theAddressIdentifier);
            }
            {
                AddressDetails.PostalServiceElements.EndorsementLineCode theEndorsementLineCode;
                theEndorsementLineCode = this.getEndorsementLineCode();
                strategy.appendField(locator, this, "endorsementLineCode", buffer, theEndorsementLineCode);
            }
            {
                AddressDetails.PostalServiceElements.KeyLineCode theKeyLineCode;
                theKeyLineCode = this.getKeyLineCode();
                strategy.appendField(locator, this, "keyLineCode", buffer, theKeyLineCode);
            }
            {
                AddressDetails.PostalServiceElements.Barcode theBarcode;
                theBarcode = this.getBarcode();
                strategy.appendField(locator, this, "barcode", buffer, theBarcode);
            }
            {
                AddressDetails.PostalServiceElements.SortingCode theSortingCode;
                theSortingCode = this.getSortingCode();
                strategy.appendField(locator, this, "sortingCode", buffer, theSortingCode);
            }
            {
                AddressDetails.PostalServiceElements.AddressLatitude theAddressLatitude;
                theAddressLatitude = this.getAddressLatitude();
                strategy.appendField(locator, this, "addressLatitude", buffer, theAddressLatitude);
            }
            {
                AddressDetails.PostalServiceElements.AddressLatitudeDirection theAddressLatitudeDirection;
                theAddressLatitudeDirection = this.getAddressLatitudeDirection();
                strategy.appendField(locator, this, "addressLatitudeDirection", buffer, theAddressLatitudeDirection);
            }
            {
                AddressDetails.PostalServiceElements.AddressLongitude theAddressLongitude;
                theAddressLongitude = this.getAddressLongitude();
                strategy.appendField(locator, this, "addressLongitude", buffer, theAddressLongitude);
            }
            {
                AddressDetails.PostalServiceElements.AddressLongitudeDirection theAddressLongitudeDirection;
                theAddressLongitudeDirection = this.getAddressLongitudeDirection();
                strategy.appendField(locator, this, "addressLongitudeDirection", buffer, theAddressLongitudeDirection);
            }
            {
                List<AddressDetails.PostalServiceElements.SupplementaryPostalServiceData> theSupplementaryPostalServiceData;
                theSupplementaryPostalServiceData = (this.isSetSupplementaryPostalServiceData()?this.getSupplementaryPostalServiceData():null);
                strategy.appendField(locator, this, "supplementaryPostalServiceData", buffer, theSupplementaryPostalServiceData);
            }
            {
                List<Object> theAny;
                theAny = (this.isSetAny()?this.getAny():null);
                strategy.appendField(locator, this, "any", buffer, theAny);
            }
            {
                String theType;
                theType = this.getType();
                strategy.appendField(locator, this, "type", buffer, theType);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof AddressDetails.PostalServiceElements)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final AddressDetails.PostalServiceElements that = ((AddressDetails.PostalServiceElements) object);
            {
                List<AddressDetails.PostalServiceElements.AddressIdentifier> lhsAddressIdentifier;
                lhsAddressIdentifier = (this.isSetAddressIdentifier()?this.getAddressIdentifier():null);
                List<AddressDetails.PostalServiceElements.AddressIdentifier> rhsAddressIdentifier;
                rhsAddressIdentifier = (that.isSetAddressIdentifier()?that.getAddressIdentifier():null);
                if (!strategy.equals(LocatorUtils.property(thisLocator, "addressIdentifier", lhsAddressIdentifier), LocatorUtils.property(thatLocator, "addressIdentifier", rhsAddressIdentifier), lhsAddressIdentifier, rhsAddressIdentifier)) {
                    return false;
                }
            }
            {
                AddressDetails.PostalServiceElements.EndorsementLineCode lhsEndorsementLineCode;
                lhsEndorsementLineCode = this.getEndorsementLineCode();
                AddressDetails.PostalServiceElements.EndorsementLineCode rhsEndorsementLineCode;
                rhsEndorsementLineCode = that.getEndorsementLineCode();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "endorsementLineCode", lhsEndorsementLineCode), LocatorUtils.property(thatLocator, "endorsementLineCode", rhsEndorsementLineCode), lhsEndorsementLineCode, rhsEndorsementLineCode)) {
                    return false;
                }
            }
            {
                AddressDetails.PostalServiceElements.KeyLineCode lhsKeyLineCode;
                lhsKeyLineCode = this.getKeyLineCode();
                AddressDetails.PostalServiceElements.KeyLineCode rhsKeyLineCode;
                rhsKeyLineCode = that.getKeyLineCode();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "keyLineCode", lhsKeyLineCode), LocatorUtils.property(thatLocator, "keyLineCode", rhsKeyLineCode), lhsKeyLineCode, rhsKeyLineCode)) {
                    return false;
                }
            }
            {
                AddressDetails.PostalServiceElements.Barcode lhsBarcode;
                lhsBarcode = this.getBarcode();
                AddressDetails.PostalServiceElements.Barcode rhsBarcode;
                rhsBarcode = that.getBarcode();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "barcode", lhsBarcode), LocatorUtils.property(thatLocator, "barcode", rhsBarcode), lhsBarcode, rhsBarcode)) {
                    return false;
                }
            }
            {
                AddressDetails.PostalServiceElements.SortingCode lhsSortingCode;
                lhsSortingCode = this.getSortingCode();
                AddressDetails.PostalServiceElements.SortingCode rhsSortingCode;
                rhsSortingCode = that.getSortingCode();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "sortingCode", lhsSortingCode), LocatorUtils.property(thatLocator, "sortingCode", rhsSortingCode), lhsSortingCode, rhsSortingCode)) {
                    return false;
                }
            }
            {
                AddressDetails.PostalServiceElements.AddressLatitude lhsAddressLatitude;
                lhsAddressLatitude = this.getAddressLatitude();
                AddressDetails.PostalServiceElements.AddressLatitude rhsAddressLatitude;
                rhsAddressLatitude = that.getAddressLatitude();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "addressLatitude", lhsAddressLatitude), LocatorUtils.property(thatLocator, "addressLatitude", rhsAddressLatitude), lhsAddressLatitude, rhsAddressLatitude)) {
                    return false;
                }
            }
            {
                AddressDetails.PostalServiceElements.AddressLatitudeDirection lhsAddressLatitudeDirection;
                lhsAddressLatitudeDirection = this.getAddressLatitudeDirection();
                AddressDetails.PostalServiceElements.AddressLatitudeDirection rhsAddressLatitudeDirection;
                rhsAddressLatitudeDirection = that.getAddressLatitudeDirection();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "addressLatitudeDirection", lhsAddressLatitudeDirection), LocatorUtils.property(thatLocator, "addressLatitudeDirection", rhsAddressLatitudeDirection), lhsAddressLatitudeDirection, rhsAddressLatitudeDirection)) {
                    return false;
                }
            }
            {
                AddressDetails.PostalServiceElements.AddressLongitude lhsAddressLongitude;
                lhsAddressLongitude = this.getAddressLongitude();
                AddressDetails.PostalServiceElements.AddressLongitude rhsAddressLongitude;
                rhsAddressLongitude = that.getAddressLongitude();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "addressLongitude", lhsAddressLongitude), LocatorUtils.property(thatLocator, "addressLongitude", rhsAddressLongitude), lhsAddressLongitude, rhsAddressLongitude)) {
                    return false;
                }
            }
            {
                AddressDetails.PostalServiceElements.AddressLongitudeDirection lhsAddressLongitudeDirection;
                lhsAddressLongitudeDirection = this.getAddressLongitudeDirection();
                AddressDetails.PostalServiceElements.AddressLongitudeDirection rhsAddressLongitudeDirection;
                rhsAddressLongitudeDirection = that.getAddressLongitudeDirection();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "addressLongitudeDirection", lhsAddressLongitudeDirection), LocatorUtils.property(thatLocator, "addressLongitudeDirection", rhsAddressLongitudeDirection), lhsAddressLongitudeDirection, rhsAddressLongitudeDirection)) {
                    return false;
                }
            }
            {
                List<AddressDetails.PostalServiceElements.SupplementaryPostalServiceData> lhsSupplementaryPostalServiceData;
                lhsSupplementaryPostalServiceData = (this.isSetSupplementaryPostalServiceData()?this.getSupplementaryPostalServiceData():null);
                List<AddressDetails.PostalServiceElements.SupplementaryPostalServiceData> rhsSupplementaryPostalServiceData;
                rhsSupplementaryPostalServiceData = (that.isSetSupplementaryPostalServiceData()?that.getSupplementaryPostalServiceData():null);
                if (!strategy.equals(LocatorUtils.property(thisLocator, "supplementaryPostalServiceData", lhsSupplementaryPostalServiceData), LocatorUtils.property(thatLocator, "supplementaryPostalServiceData", rhsSupplementaryPostalServiceData), lhsSupplementaryPostalServiceData, rhsSupplementaryPostalServiceData)) {
                    return false;
                }
            }
            {
                List<Object> lhsAny;
                lhsAny = (this.isSetAny()?this.getAny():null);
                List<Object> rhsAny;
                rhsAny = (that.isSetAny()?that.getAny():null);
                if (!strategy.equals(LocatorUtils.property(thisLocator, "any", lhsAny), LocatorUtils.property(thatLocator, "any", rhsAny), lhsAny, rhsAny)) {
                    return false;
                }
            }
            {
                String lhsType;
                lhsType = this.getType();
                String rhsType;
                rhsType = that.getType();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "type", lhsType), LocatorUtils.property(thatLocator, "type", rhsType), lhsType, rhsType)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                List<AddressDetails.PostalServiceElements.AddressIdentifier> theAddressIdentifier;
                theAddressIdentifier = (this.isSetAddressIdentifier()?this.getAddressIdentifier():null);
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "addressIdentifier", theAddressIdentifier), currentHashCode, theAddressIdentifier);
            }
            {
                AddressDetails.PostalServiceElements.EndorsementLineCode theEndorsementLineCode;
                theEndorsementLineCode = this.getEndorsementLineCode();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "endorsementLineCode", theEndorsementLineCode), currentHashCode, theEndorsementLineCode);
            }
            {
                AddressDetails.PostalServiceElements.KeyLineCode theKeyLineCode;
                theKeyLineCode = this.getKeyLineCode();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "keyLineCode", theKeyLineCode), currentHashCode, theKeyLineCode);
            }
            {
                AddressDetails.PostalServiceElements.Barcode theBarcode;
                theBarcode = this.getBarcode();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "barcode", theBarcode), currentHashCode, theBarcode);
            }
            {
                AddressDetails.PostalServiceElements.SortingCode theSortingCode;
                theSortingCode = this.getSortingCode();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sortingCode", theSortingCode), currentHashCode, theSortingCode);
            }
            {
                AddressDetails.PostalServiceElements.AddressLatitude theAddressLatitude;
                theAddressLatitude = this.getAddressLatitude();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "addressLatitude", theAddressLatitude), currentHashCode, theAddressLatitude);
            }
            {
                AddressDetails.PostalServiceElements.AddressLatitudeDirection theAddressLatitudeDirection;
                theAddressLatitudeDirection = this.getAddressLatitudeDirection();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "addressLatitudeDirection", theAddressLatitudeDirection), currentHashCode, theAddressLatitudeDirection);
            }
            {
                AddressDetails.PostalServiceElements.AddressLongitude theAddressLongitude;
                theAddressLongitude = this.getAddressLongitude();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "addressLongitude", theAddressLongitude), currentHashCode, theAddressLongitude);
            }
            {
                AddressDetails.PostalServiceElements.AddressLongitudeDirection theAddressLongitudeDirection;
                theAddressLongitudeDirection = this.getAddressLongitudeDirection();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "addressLongitudeDirection", theAddressLongitudeDirection), currentHashCode, theAddressLongitudeDirection);
            }
            {
                List<AddressDetails.PostalServiceElements.SupplementaryPostalServiceData> theSupplementaryPostalServiceData;
                theSupplementaryPostalServiceData = (this.isSetSupplementaryPostalServiceData()?this.getSupplementaryPostalServiceData():null);
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "supplementaryPostalServiceData", theSupplementaryPostalServiceData), currentHashCode, theSupplementaryPostalServiceData);
            }
            {
                List<Object> theAny;
                theAny = (this.isSetAny()?this.getAny():null);
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "any", theAny), currentHashCode, theAny);
            }
            {
                String theType;
                theType = this.getType();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "type", theType), currentHashCode, theType);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public Object clone() {
            return copyTo(createNewInstance());
        }

        public Object copyTo(Object target) {
            final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
            return copyTo(null, target, strategy);
        }

        public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
            final Object draftCopy = ((target == null)?createNewInstance():target);
            if (draftCopy instanceof AddressDetails.PostalServiceElements) {
                final AddressDetails.PostalServiceElements copy = ((AddressDetails.PostalServiceElements) draftCopy);
                if (this.isSetAddressIdentifier()) {
                    List<AddressDetails.PostalServiceElements.AddressIdentifier> sourceAddressIdentifier;
                    sourceAddressIdentifier = (this.isSetAddressIdentifier()?this.getAddressIdentifier():null);
                    @SuppressWarnings("unchecked")
                    List<AddressDetails.PostalServiceElements.AddressIdentifier> copyAddressIdentifier = ((List<AddressDetails.PostalServiceElements.AddressIdentifier> ) strategy.copy(LocatorUtils.property(locator, "addressIdentifier", sourceAddressIdentifier), sourceAddressIdentifier));
                    copy.unsetAddressIdentifier();
                    if (copyAddressIdentifier!= null) {
                        List<AddressDetails.PostalServiceElements.AddressIdentifier> uniqueAddressIdentifierl = copy.getAddressIdentifier();
                        uniqueAddressIdentifierl.addAll(copyAddressIdentifier);
                    }
                } else {
                    copy.unsetAddressIdentifier();
                }
                if (this.isSetEndorsementLineCode()) {
                    AddressDetails.PostalServiceElements.EndorsementLineCode sourceEndorsementLineCode;
                    sourceEndorsementLineCode = this.getEndorsementLineCode();
                    AddressDetails.PostalServiceElements.EndorsementLineCode copyEndorsementLineCode = ((AddressDetails.PostalServiceElements.EndorsementLineCode) strategy.copy(LocatorUtils.property(locator, "endorsementLineCode", sourceEndorsementLineCode), sourceEndorsementLineCode));
                    copy.setEndorsementLineCode(copyEndorsementLineCode);
                } else {
                    copy.endorsementLineCode = null;
                }
                if (this.isSetKeyLineCode()) {
                    AddressDetails.PostalServiceElements.KeyLineCode sourceKeyLineCode;
                    sourceKeyLineCode = this.getKeyLineCode();
                    AddressDetails.PostalServiceElements.KeyLineCode copyKeyLineCode = ((AddressDetails.PostalServiceElements.KeyLineCode) strategy.copy(LocatorUtils.property(locator, "keyLineCode", sourceKeyLineCode), sourceKeyLineCode));
                    copy.setKeyLineCode(copyKeyLineCode);
                } else {
                    copy.keyLineCode = null;
                }
                if (this.isSetBarcode()) {
                    AddressDetails.PostalServiceElements.Barcode sourceBarcode;
                    sourceBarcode = this.getBarcode();
                    AddressDetails.PostalServiceElements.Barcode copyBarcode = ((AddressDetails.PostalServiceElements.Barcode) strategy.copy(LocatorUtils.property(locator, "barcode", sourceBarcode), sourceBarcode));
                    copy.setBarcode(copyBarcode);
                } else {
                    copy.barcode = null;
                }
                if (this.isSetSortingCode()) {
                    AddressDetails.PostalServiceElements.SortingCode sourceSortingCode;
                    sourceSortingCode = this.getSortingCode();
                    AddressDetails.PostalServiceElements.SortingCode copySortingCode = ((AddressDetails.PostalServiceElements.SortingCode) strategy.copy(LocatorUtils.property(locator, "sortingCode", sourceSortingCode), sourceSortingCode));
                    copy.setSortingCode(copySortingCode);
                } else {
                    copy.sortingCode = null;
                }
                if (this.isSetAddressLatitude()) {
                    AddressDetails.PostalServiceElements.AddressLatitude sourceAddressLatitude;
                    sourceAddressLatitude = this.getAddressLatitude();
                    AddressDetails.PostalServiceElements.AddressLatitude copyAddressLatitude = ((AddressDetails.PostalServiceElements.AddressLatitude) strategy.copy(LocatorUtils.property(locator, "addressLatitude", sourceAddressLatitude), sourceAddressLatitude));
                    copy.setAddressLatitude(copyAddressLatitude);
                } else {
                    copy.addressLatitude = null;
                }
                if (this.isSetAddressLatitudeDirection()) {
                    AddressDetails.PostalServiceElements.AddressLatitudeDirection sourceAddressLatitudeDirection;
                    sourceAddressLatitudeDirection = this.getAddressLatitudeDirection();
                    AddressDetails.PostalServiceElements.AddressLatitudeDirection copyAddressLatitudeDirection = ((AddressDetails.PostalServiceElements.AddressLatitudeDirection) strategy.copy(LocatorUtils.property(locator, "addressLatitudeDirection", sourceAddressLatitudeDirection), sourceAddressLatitudeDirection));
                    copy.setAddressLatitudeDirection(copyAddressLatitudeDirection);
                } else {
                    copy.addressLatitudeDirection = null;
                }
                if (this.isSetAddressLongitude()) {
                    AddressDetails.PostalServiceElements.AddressLongitude sourceAddressLongitude;
                    sourceAddressLongitude = this.getAddressLongitude();
                    AddressDetails.PostalServiceElements.AddressLongitude copyAddressLongitude = ((AddressDetails.PostalServiceElements.AddressLongitude) strategy.copy(LocatorUtils.property(locator, "addressLongitude", sourceAddressLongitude), sourceAddressLongitude));
                    copy.setAddressLongitude(copyAddressLongitude);
                } else {
                    copy.addressLongitude = null;
                }
                if (this.isSetAddressLongitudeDirection()) {
                    AddressDetails.PostalServiceElements.AddressLongitudeDirection sourceAddressLongitudeDirection;
                    sourceAddressLongitudeDirection = this.getAddressLongitudeDirection();
                    AddressDetails.PostalServiceElements.AddressLongitudeDirection copyAddressLongitudeDirection = ((AddressDetails.PostalServiceElements.AddressLongitudeDirection) strategy.copy(LocatorUtils.property(locator, "addressLongitudeDirection", sourceAddressLongitudeDirection), sourceAddressLongitudeDirection));
                    copy.setAddressLongitudeDirection(copyAddressLongitudeDirection);
                } else {
                    copy.addressLongitudeDirection = null;
                }
                if (this.isSetSupplementaryPostalServiceData()) {
                    List<AddressDetails.PostalServiceElements.SupplementaryPostalServiceData> sourceSupplementaryPostalServiceData;
                    sourceSupplementaryPostalServiceData = (this.isSetSupplementaryPostalServiceData()?this.getSupplementaryPostalServiceData():null);
                    @SuppressWarnings("unchecked")
                    List<AddressDetails.PostalServiceElements.SupplementaryPostalServiceData> copySupplementaryPostalServiceData = ((List<AddressDetails.PostalServiceElements.SupplementaryPostalServiceData> ) strategy.copy(LocatorUtils.property(locator, "supplementaryPostalServiceData", sourceSupplementaryPostalServiceData), sourceSupplementaryPostalServiceData));
                    copy.unsetSupplementaryPostalServiceData();
                    if (copySupplementaryPostalServiceData!= null) {
                        List<AddressDetails.PostalServiceElements.SupplementaryPostalServiceData> uniqueSupplementaryPostalServiceDatal = copy.getSupplementaryPostalServiceData();
                        uniqueSupplementaryPostalServiceDatal.addAll(copySupplementaryPostalServiceData);
                    }
                } else {
                    copy.unsetSupplementaryPostalServiceData();
                }
                if (this.isSetAny()) {
                    List<Object> sourceAny;
                    sourceAny = (this.isSetAny()?this.getAny():null);
                    @SuppressWarnings("unchecked")
                    List<Object> copyAny = ((List<Object> ) strategy.copy(LocatorUtils.property(locator, "any", sourceAny), sourceAny));
                    copy.unsetAny();
                    if (copyAny!= null) {
                        List<Object> uniqueAnyl = copy.getAny();
                        uniqueAnyl.addAll(copyAny);
                    }
                } else {
                    copy.unsetAny();
                }
                if (this.isSetType()) {
                    String sourceType;
                    sourceType = this.getType();
                    String copyType = ((String) strategy.copy(LocatorUtils.property(locator, "type", sourceType), sourceType));
                    copy.setType(copyType);
                } else {
                    copy.type = null;
                }
            }
            return draftCopy;
        }

        public Object createNewInstance() {
            return new AddressDetails.PostalServiceElements();
        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType&gt;
         *   &lt;complexContent&gt;
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
         *       &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
         *       &lt;attribute name="IdentifierType" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
         *       &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
         *       &lt;anyAttribute namespace='##other'/&gt;
         *     &lt;/restriction&gt;
         *   &lt;/complexContent&gt;
         * &lt;/complexType&gt;
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "content"
        })
        public static class AddressIdentifier
            implements Cloneable, CopyTo, Equals, HashCode, ToString
        {

            @XmlValue
            protected String content;
            @XmlAttribute(name = "IdentifierType")
            @XmlSchemaType(name = "anySimpleType")
            protected String identifierType;
            @XmlAttribute(name = "Type")
            @XmlSchemaType(name = "anySimpleType")
            protected String type;
            @XmlAttribute(name = "Code")
            @XmlSchemaType(name = "anySimpleType")
            protected String code;
            @XmlAnyAttribute
            private Map<QName, String> otherAttributes = new HashMap<QName, String>();

            /**
             * Gets the value of the content property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getContent() {
                return content;
            }

            /**
             * Sets the value of the content property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setContent(String value) {
                this.content = value;
            }

            public boolean isSetContent() {
                return (this.content!= null);
            }

            /**
             * Gets the value of the identifierType property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getIdentifierType() {
                return identifierType;
            }

            /**
             * Sets the value of the identifierType property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setIdentifierType(String value) {
                this.identifierType = value;
            }

            public boolean isSetIdentifierType() {
                return (this.identifierType!= null);
            }

            /**
             * Gets the value of the type property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getType() {
                return type;
            }

            /**
             * Sets the value of the type property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setType(String value) {
                this.type = value;
            }

            public boolean isSetType() {
                return (this.type!= null);
            }

            /**
             * Gets the value of the code property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getCode() {
                return code;
            }

            /**
             * Sets the value of the code property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setCode(String value) {
                this.code = value;
            }

            public boolean isSetCode() {
                return (this.code!= null);
            }

            /**
             * Gets a map that contains attributes that aren't bound to any typed property on this class.
             * 
             * <p>
             * the map is keyed by the name of the attribute and 
             * the value is the string value of the attribute.
             * 
             * the map returned by this method is live, and you can add new attribute
             * by updating the map directly. Because of this design, there's no setter.
             * 
             * 
             * @return
             *     always non-null
             */
            public Map<QName, String> getOtherAttributes() {
                return otherAttributes;
            }

            public String toString() {
                final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
                final StringBuilder buffer = new StringBuilder();
                append(null, buffer, strategy);
                return buffer.toString();
            }

            public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                strategy.appendStart(locator, this, buffer);
                appendFields(locator, buffer, strategy);
                strategy.appendEnd(locator, this, buffer);
                return buffer;
            }

            public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                {
                    String theContent;
                    theContent = this.getContent();
                    strategy.appendField(locator, this, "content", buffer, theContent);
                }
                {
                    String theIdentifierType;
                    theIdentifierType = this.getIdentifierType();
                    strategy.appendField(locator, this, "identifierType", buffer, theIdentifierType);
                }
                {
                    String theType;
                    theType = this.getType();
                    strategy.appendField(locator, this, "type", buffer, theType);
                }
                {
                    String theCode;
                    theCode = this.getCode();
                    strategy.appendField(locator, this, "code", buffer, theCode);
                }
                return buffer;
            }

            public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
                if (!(object instanceof AddressDetails.PostalServiceElements.AddressIdentifier)) {
                    return false;
                }
                if (this == object) {
                    return true;
                }
                final AddressDetails.PostalServiceElements.AddressIdentifier that = ((AddressDetails.PostalServiceElements.AddressIdentifier) object);
                {
                    String lhsContent;
                    lhsContent = this.getContent();
                    String rhsContent;
                    rhsContent = that.getContent();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "content", lhsContent), LocatorUtils.property(thatLocator, "content", rhsContent), lhsContent, rhsContent)) {
                        return false;
                    }
                }
                {
                    String lhsIdentifierType;
                    lhsIdentifierType = this.getIdentifierType();
                    String rhsIdentifierType;
                    rhsIdentifierType = that.getIdentifierType();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "identifierType", lhsIdentifierType), LocatorUtils.property(thatLocator, "identifierType", rhsIdentifierType), lhsIdentifierType, rhsIdentifierType)) {
                        return false;
                    }
                }
                {
                    String lhsType;
                    lhsType = this.getType();
                    String rhsType;
                    rhsType = that.getType();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "type", lhsType), LocatorUtils.property(thatLocator, "type", rhsType), lhsType, rhsType)) {
                        return false;
                    }
                }
                {
                    String lhsCode;
                    lhsCode = this.getCode();
                    String rhsCode;
                    rhsCode = that.getCode();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "code", lhsCode), LocatorUtils.property(thatLocator, "code", rhsCode), lhsCode, rhsCode)) {
                        return false;
                    }
                }
                return true;
            }

            public boolean equals(Object object) {
                final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
                return equals(null, null, object, strategy);
            }

            public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
                int currentHashCode = 1;
                {
                    String theContent;
                    theContent = this.getContent();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "content", theContent), currentHashCode, theContent);
                }
                {
                    String theIdentifierType;
                    theIdentifierType = this.getIdentifierType();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "identifierType", theIdentifierType), currentHashCode, theIdentifierType);
                }
                {
                    String theType;
                    theType = this.getType();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "type", theType), currentHashCode, theType);
                }
                {
                    String theCode;
                    theCode = this.getCode();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "code", theCode), currentHashCode, theCode);
                }
                return currentHashCode;
            }

            public int hashCode() {
                final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
                return this.hashCode(null, strategy);
            }

            public Object clone() {
                return copyTo(createNewInstance());
            }

            public Object copyTo(Object target) {
                final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
                return copyTo(null, target, strategy);
            }

            public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
                final Object draftCopy = ((target == null)?createNewInstance():target);
                if (draftCopy instanceof AddressDetails.PostalServiceElements.AddressIdentifier) {
                    final AddressDetails.PostalServiceElements.AddressIdentifier copy = ((AddressDetails.PostalServiceElements.AddressIdentifier) draftCopy);
                    if (this.isSetContent()) {
                        String sourceContent;
                        sourceContent = this.getContent();
                        String copyContent = ((String) strategy.copy(LocatorUtils.property(locator, "content", sourceContent), sourceContent));
                        copy.setContent(copyContent);
                    } else {
                        copy.content = null;
                    }
                    if (this.isSetIdentifierType()) {
                        String sourceIdentifierType;
                        sourceIdentifierType = this.getIdentifierType();
                        String copyIdentifierType = ((String) strategy.copy(LocatorUtils.property(locator, "identifierType", sourceIdentifierType), sourceIdentifierType));
                        copy.setIdentifierType(copyIdentifierType);
                    } else {
                        copy.identifierType = null;
                    }
                    if (this.isSetType()) {
                        String sourceType;
                        sourceType = this.getType();
                        String copyType = ((String) strategy.copy(LocatorUtils.property(locator, "type", sourceType), sourceType));
                        copy.setType(copyType);
                    } else {
                        copy.type = null;
                    }
                    if (this.isSetCode()) {
                        String sourceCode;
                        sourceCode = this.getCode();
                        String copyCode = ((String) strategy.copy(LocatorUtils.property(locator, "code", sourceCode), sourceCode));
                        copy.setCode(copyCode);
                    } else {
                        copy.code = null;
                    }
                }
                return draftCopy;
            }

            public Object createNewInstance() {
                return new AddressDetails.PostalServiceElements.AddressIdentifier();
            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType&gt;
         *   &lt;complexContent&gt;
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
         *       &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
         *       &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
         *       &lt;anyAttribute namespace='##other'/&gt;
         *     &lt;/restriction&gt;
         *   &lt;/complexContent&gt;
         * &lt;/complexType&gt;
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "content"
        })
        public static class AddressLatitude
            implements Cloneable, CopyTo, Equals, HashCode, ToString
        {

            @XmlValue
            protected String content;
            @XmlAttribute(name = "Type")
            @XmlSchemaType(name = "anySimpleType")
            protected String type;
            @XmlAttribute(name = "Code")
            @XmlSchemaType(name = "anySimpleType")
            protected String code;
            @XmlAnyAttribute
            private Map<QName, String> otherAttributes = new HashMap<QName, String>();

            /**
             * Gets the value of the content property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getContent() {
                return content;
            }

            /**
             * Sets the value of the content property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setContent(String value) {
                this.content = value;
            }

            public boolean isSetContent() {
                return (this.content!= null);
            }

            /**
             * Gets the value of the type property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getType() {
                return type;
            }

            /**
             * Sets the value of the type property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setType(String value) {
                this.type = value;
            }

            public boolean isSetType() {
                return (this.type!= null);
            }

            /**
             * Gets the value of the code property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getCode() {
                return code;
            }

            /**
             * Sets the value of the code property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setCode(String value) {
                this.code = value;
            }

            public boolean isSetCode() {
                return (this.code!= null);
            }

            /**
             * Gets a map that contains attributes that aren't bound to any typed property on this class.
             * 
             * <p>
             * the map is keyed by the name of the attribute and 
             * the value is the string value of the attribute.
             * 
             * the map returned by this method is live, and you can add new attribute
             * by updating the map directly. Because of this design, there's no setter.
             * 
             * 
             * @return
             *     always non-null
             */
            public Map<QName, String> getOtherAttributes() {
                return otherAttributes;
            }

            public String toString() {
                final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
                final StringBuilder buffer = new StringBuilder();
                append(null, buffer, strategy);
                return buffer.toString();
            }

            public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                strategy.appendStart(locator, this, buffer);
                appendFields(locator, buffer, strategy);
                strategy.appendEnd(locator, this, buffer);
                return buffer;
            }

            public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                {
                    String theContent;
                    theContent = this.getContent();
                    strategy.appendField(locator, this, "content", buffer, theContent);
                }
                {
                    String theType;
                    theType = this.getType();
                    strategy.appendField(locator, this, "type", buffer, theType);
                }
                {
                    String theCode;
                    theCode = this.getCode();
                    strategy.appendField(locator, this, "code", buffer, theCode);
                }
                return buffer;
            }

            public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
                if (!(object instanceof AddressDetails.PostalServiceElements.AddressLatitude)) {
                    return false;
                }
                if (this == object) {
                    return true;
                }
                final AddressDetails.PostalServiceElements.AddressLatitude that = ((AddressDetails.PostalServiceElements.AddressLatitude) object);
                {
                    String lhsContent;
                    lhsContent = this.getContent();
                    String rhsContent;
                    rhsContent = that.getContent();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "content", lhsContent), LocatorUtils.property(thatLocator, "content", rhsContent), lhsContent, rhsContent)) {
                        return false;
                    }
                }
                {
                    String lhsType;
                    lhsType = this.getType();
                    String rhsType;
                    rhsType = that.getType();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "type", lhsType), LocatorUtils.property(thatLocator, "type", rhsType), lhsType, rhsType)) {
                        return false;
                    }
                }
                {
                    String lhsCode;
                    lhsCode = this.getCode();
                    String rhsCode;
                    rhsCode = that.getCode();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "code", lhsCode), LocatorUtils.property(thatLocator, "code", rhsCode), lhsCode, rhsCode)) {
                        return false;
                    }
                }
                return true;
            }

            public boolean equals(Object object) {
                final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
                return equals(null, null, object, strategy);
            }

            public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
                int currentHashCode = 1;
                {
                    String theContent;
                    theContent = this.getContent();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "content", theContent), currentHashCode, theContent);
                }
                {
                    String theType;
                    theType = this.getType();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "type", theType), currentHashCode, theType);
                }
                {
                    String theCode;
                    theCode = this.getCode();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "code", theCode), currentHashCode, theCode);
                }
                return currentHashCode;
            }

            public int hashCode() {
                final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
                return this.hashCode(null, strategy);
            }

            public Object clone() {
                return copyTo(createNewInstance());
            }

            public Object copyTo(Object target) {
                final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
                return copyTo(null, target, strategy);
            }

            public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
                final Object draftCopy = ((target == null)?createNewInstance():target);
                if (draftCopy instanceof AddressDetails.PostalServiceElements.AddressLatitude) {
                    final AddressDetails.PostalServiceElements.AddressLatitude copy = ((AddressDetails.PostalServiceElements.AddressLatitude) draftCopy);
                    if (this.isSetContent()) {
                        String sourceContent;
                        sourceContent = this.getContent();
                        String copyContent = ((String) strategy.copy(LocatorUtils.property(locator, "content", sourceContent), sourceContent));
                        copy.setContent(copyContent);
                    } else {
                        copy.content = null;
                    }
                    if (this.isSetType()) {
                        String sourceType;
                        sourceType = this.getType();
                        String copyType = ((String) strategy.copy(LocatorUtils.property(locator, "type", sourceType), sourceType));
                        copy.setType(copyType);
                    } else {
                        copy.type = null;
                    }
                    if (this.isSetCode()) {
                        String sourceCode;
                        sourceCode = this.getCode();
                        String copyCode = ((String) strategy.copy(LocatorUtils.property(locator, "code", sourceCode), sourceCode));
                        copy.setCode(copyCode);
                    } else {
                        copy.code = null;
                    }
                }
                return draftCopy;
            }

            public Object createNewInstance() {
                return new AddressDetails.PostalServiceElements.AddressLatitude();
            }

        }


        /**
         * Specific to postal service
         * 
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType&gt;
         *   &lt;complexContent&gt;
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
         *       &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
         *       &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
         *       &lt;anyAttribute namespace='##other'/&gt;
         *     &lt;/restriction&gt;
         *   &lt;/complexContent&gt;
         * &lt;/complexType&gt;
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "content"
        })
        public static class AddressLatitudeDirection
            implements Cloneable, CopyTo, Equals, HashCode, ToString
        {

            @XmlValue
            protected String content;
            @XmlAttribute(name = "Type")
            @XmlSchemaType(name = "anySimpleType")
            protected String type;
            @XmlAttribute(name = "Code")
            @XmlSchemaType(name = "anySimpleType")
            protected String code;
            @XmlAnyAttribute
            private Map<QName, String> otherAttributes = new HashMap<QName, String>();

            /**
             * Specific to postal service
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getContent() {
                return content;
            }

            /**
             * Sets the value of the content property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setContent(String value) {
                this.content = value;
            }

            public boolean isSetContent() {
                return (this.content!= null);
            }

            /**
             * Gets the value of the type property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getType() {
                return type;
            }

            /**
             * Sets the value of the type property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setType(String value) {
                this.type = value;
            }

            public boolean isSetType() {
                return (this.type!= null);
            }

            /**
             * Gets the value of the code property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getCode() {
                return code;
            }

            /**
             * Sets the value of the code property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setCode(String value) {
                this.code = value;
            }

            public boolean isSetCode() {
                return (this.code!= null);
            }

            /**
             * Gets a map that contains attributes that aren't bound to any typed property on this class.
             * 
             * <p>
             * the map is keyed by the name of the attribute and 
             * the value is the string value of the attribute.
             * 
             * the map returned by this method is live, and you can add new attribute
             * by updating the map directly. Because of this design, there's no setter.
             * 
             * 
             * @return
             *     always non-null
             */
            public Map<QName, String> getOtherAttributes() {
                return otherAttributes;
            }

            public String toString() {
                final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
                final StringBuilder buffer = new StringBuilder();
                append(null, buffer, strategy);
                return buffer.toString();
            }

            public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                strategy.appendStart(locator, this, buffer);
                appendFields(locator, buffer, strategy);
                strategy.appendEnd(locator, this, buffer);
                return buffer;
            }

            public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                {
                    String theContent;
                    theContent = this.getContent();
                    strategy.appendField(locator, this, "content", buffer, theContent);
                }
                {
                    String theType;
                    theType = this.getType();
                    strategy.appendField(locator, this, "type", buffer, theType);
                }
                {
                    String theCode;
                    theCode = this.getCode();
                    strategy.appendField(locator, this, "code", buffer, theCode);
                }
                return buffer;
            }

            public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
                if (!(object instanceof AddressDetails.PostalServiceElements.AddressLatitudeDirection)) {
                    return false;
                }
                if (this == object) {
                    return true;
                }
                final AddressDetails.PostalServiceElements.AddressLatitudeDirection that = ((AddressDetails.PostalServiceElements.AddressLatitudeDirection) object);
                {
                    String lhsContent;
                    lhsContent = this.getContent();
                    String rhsContent;
                    rhsContent = that.getContent();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "content", lhsContent), LocatorUtils.property(thatLocator, "content", rhsContent), lhsContent, rhsContent)) {
                        return false;
                    }
                }
                {
                    String lhsType;
                    lhsType = this.getType();
                    String rhsType;
                    rhsType = that.getType();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "type", lhsType), LocatorUtils.property(thatLocator, "type", rhsType), lhsType, rhsType)) {
                        return false;
                    }
                }
                {
                    String lhsCode;
                    lhsCode = this.getCode();
                    String rhsCode;
                    rhsCode = that.getCode();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "code", lhsCode), LocatorUtils.property(thatLocator, "code", rhsCode), lhsCode, rhsCode)) {
                        return false;
                    }
                }
                return true;
            }

            public boolean equals(Object object) {
                final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
                return equals(null, null, object, strategy);
            }

            public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
                int currentHashCode = 1;
                {
                    String theContent;
                    theContent = this.getContent();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "content", theContent), currentHashCode, theContent);
                }
                {
                    String theType;
                    theType = this.getType();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "type", theType), currentHashCode, theType);
                }
                {
                    String theCode;
                    theCode = this.getCode();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "code", theCode), currentHashCode, theCode);
                }
                return currentHashCode;
            }

            public int hashCode() {
                final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
                return this.hashCode(null, strategy);
            }

            public Object clone() {
                return copyTo(createNewInstance());
            }

            public Object copyTo(Object target) {
                final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
                return copyTo(null, target, strategy);
            }

            public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
                final Object draftCopy = ((target == null)?createNewInstance():target);
                if (draftCopy instanceof AddressDetails.PostalServiceElements.AddressLatitudeDirection) {
                    final AddressDetails.PostalServiceElements.AddressLatitudeDirection copy = ((AddressDetails.PostalServiceElements.AddressLatitudeDirection) draftCopy);
                    if (this.isSetContent()) {
                        String sourceContent;
                        sourceContent = this.getContent();
                        String copyContent = ((String) strategy.copy(LocatorUtils.property(locator, "content", sourceContent), sourceContent));
                        copy.setContent(copyContent);
                    } else {
                        copy.content = null;
                    }
                    if (this.isSetType()) {
                        String sourceType;
                        sourceType = this.getType();
                        String copyType = ((String) strategy.copy(LocatorUtils.property(locator, "type", sourceType), sourceType));
                        copy.setType(copyType);
                    } else {
                        copy.type = null;
                    }
                    if (this.isSetCode()) {
                        String sourceCode;
                        sourceCode = this.getCode();
                        String copyCode = ((String) strategy.copy(LocatorUtils.property(locator, "code", sourceCode), sourceCode));
                        copy.setCode(copyCode);
                    } else {
                        copy.code = null;
                    }
                }
                return draftCopy;
            }

            public Object createNewInstance() {
                return new AddressDetails.PostalServiceElements.AddressLatitudeDirection();
            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType&gt;
         *   &lt;complexContent&gt;
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
         *       &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
         *       &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
         *       &lt;anyAttribute namespace='##other'/&gt;
         *     &lt;/restriction&gt;
         *   &lt;/complexContent&gt;
         * &lt;/complexType&gt;
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "content"
        })
        public static class AddressLongitude
            implements Cloneable, CopyTo, Equals, HashCode, ToString
        {

            @XmlValue
            protected String content;
            @XmlAttribute(name = "Type")
            @XmlSchemaType(name = "anySimpleType")
            protected String type;
            @XmlAttribute(name = "Code")
            @XmlSchemaType(name = "anySimpleType")
            protected String code;
            @XmlAnyAttribute
            private Map<QName, String> otherAttributes = new HashMap<QName, String>();

            /**
             * Gets the value of the content property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getContent() {
                return content;
            }

            /**
             * Sets the value of the content property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setContent(String value) {
                this.content = value;
            }

            public boolean isSetContent() {
                return (this.content!= null);
            }

            /**
             * Gets the value of the type property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getType() {
                return type;
            }

            /**
             * Sets the value of the type property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setType(String value) {
                this.type = value;
            }

            public boolean isSetType() {
                return (this.type!= null);
            }

            /**
             * Gets the value of the code property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getCode() {
                return code;
            }

            /**
             * Sets the value of the code property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setCode(String value) {
                this.code = value;
            }

            public boolean isSetCode() {
                return (this.code!= null);
            }

            /**
             * Gets a map that contains attributes that aren't bound to any typed property on this class.
             * 
             * <p>
             * the map is keyed by the name of the attribute and 
             * the value is the string value of the attribute.
             * 
             * the map returned by this method is live, and you can add new attribute
             * by updating the map directly. Because of this design, there's no setter.
             * 
             * 
             * @return
             *     always non-null
             */
            public Map<QName, String> getOtherAttributes() {
                return otherAttributes;
            }

            public String toString() {
                final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
                final StringBuilder buffer = new StringBuilder();
                append(null, buffer, strategy);
                return buffer.toString();
            }

            public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                strategy.appendStart(locator, this, buffer);
                appendFields(locator, buffer, strategy);
                strategy.appendEnd(locator, this, buffer);
                return buffer;
            }

            public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                {
                    String theContent;
                    theContent = this.getContent();
                    strategy.appendField(locator, this, "content", buffer, theContent);
                }
                {
                    String theType;
                    theType = this.getType();
                    strategy.appendField(locator, this, "type", buffer, theType);
                }
                {
                    String theCode;
                    theCode = this.getCode();
                    strategy.appendField(locator, this, "code", buffer, theCode);
                }
                return buffer;
            }

            public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
                if (!(object instanceof AddressDetails.PostalServiceElements.AddressLongitude)) {
                    return false;
                }
                if (this == object) {
                    return true;
                }
                final AddressDetails.PostalServiceElements.AddressLongitude that = ((AddressDetails.PostalServiceElements.AddressLongitude) object);
                {
                    String lhsContent;
                    lhsContent = this.getContent();
                    String rhsContent;
                    rhsContent = that.getContent();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "content", lhsContent), LocatorUtils.property(thatLocator, "content", rhsContent), lhsContent, rhsContent)) {
                        return false;
                    }
                }
                {
                    String lhsType;
                    lhsType = this.getType();
                    String rhsType;
                    rhsType = that.getType();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "type", lhsType), LocatorUtils.property(thatLocator, "type", rhsType), lhsType, rhsType)) {
                        return false;
                    }
                }
                {
                    String lhsCode;
                    lhsCode = this.getCode();
                    String rhsCode;
                    rhsCode = that.getCode();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "code", lhsCode), LocatorUtils.property(thatLocator, "code", rhsCode), lhsCode, rhsCode)) {
                        return false;
                    }
                }
                return true;
            }

            public boolean equals(Object object) {
                final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
                return equals(null, null, object, strategy);
            }

            public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
                int currentHashCode = 1;
                {
                    String theContent;
                    theContent = this.getContent();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "content", theContent), currentHashCode, theContent);
                }
                {
                    String theType;
                    theType = this.getType();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "type", theType), currentHashCode, theType);
                }
                {
                    String theCode;
                    theCode = this.getCode();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "code", theCode), currentHashCode, theCode);
                }
                return currentHashCode;
            }

            public int hashCode() {
                final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
                return this.hashCode(null, strategy);
            }

            public Object clone() {
                return copyTo(createNewInstance());
            }

            public Object copyTo(Object target) {
                final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
                return copyTo(null, target, strategy);
            }

            public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
                final Object draftCopy = ((target == null)?createNewInstance():target);
                if (draftCopy instanceof AddressDetails.PostalServiceElements.AddressLongitude) {
                    final AddressDetails.PostalServiceElements.AddressLongitude copy = ((AddressDetails.PostalServiceElements.AddressLongitude) draftCopy);
                    if (this.isSetContent()) {
                        String sourceContent;
                        sourceContent = this.getContent();
                        String copyContent = ((String) strategy.copy(LocatorUtils.property(locator, "content", sourceContent), sourceContent));
                        copy.setContent(copyContent);
                    } else {
                        copy.content = null;
                    }
                    if (this.isSetType()) {
                        String sourceType;
                        sourceType = this.getType();
                        String copyType = ((String) strategy.copy(LocatorUtils.property(locator, "type", sourceType), sourceType));
                        copy.setType(copyType);
                    } else {
                        copy.type = null;
                    }
                    if (this.isSetCode()) {
                        String sourceCode;
                        sourceCode = this.getCode();
                        String copyCode = ((String) strategy.copy(LocatorUtils.property(locator, "code", sourceCode), sourceCode));
                        copy.setCode(copyCode);
                    } else {
                        copy.code = null;
                    }
                }
                return draftCopy;
            }

            public Object createNewInstance() {
                return new AddressDetails.PostalServiceElements.AddressLongitude();
            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType&gt;
         *   &lt;complexContent&gt;
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
         *       &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
         *       &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
         *       &lt;anyAttribute namespace='##other'/&gt;
         *     &lt;/restriction&gt;
         *   &lt;/complexContent&gt;
         * &lt;/complexType&gt;
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "content"
        })
        public static class AddressLongitudeDirection
            implements Cloneable, CopyTo, Equals, HashCode, ToString
        {

            @XmlValue
            protected String content;
            @XmlAttribute(name = "Type")
            @XmlSchemaType(name = "anySimpleType")
            protected String type;
            @XmlAttribute(name = "Code")
            @XmlSchemaType(name = "anySimpleType")
            protected String code;
            @XmlAnyAttribute
            private Map<QName, String> otherAttributes = new HashMap<QName, String>();

            /**
             * Gets the value of the content property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getContent() {
                return content;
            }

            /**
             * Sets the value of the content property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setContent(String value) {
                this.content = value;
            }

            public boolean isSetContent() {
                return (this.content!= null);
            }

            /**
             * Gets the value of the type property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getType() {
                return type;
            }

            /**
             * Sets the value of the type property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setType(String value) {
                this.type = value;
            }

            public boolean isSetType() {
                return (this.type!= null);
            }

            /**
             * Gets the value of the code property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getCode() {
                return code;
            }

            /**
             * Sets the value of the code property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setCode(String value) {
                this.code = value;
            }

            public boolean isSetCode() {
                return (this.code!= null);
            }

            /**
             * Gets a map that contains attributes that aren't bound to any typed property on this class.
             * 
             * <p>
             * the map is keyed by the name of the attribute and 
             * the value is the string value of the attribute.
             * 
             * the map returned by this method is live, and you can add new attribute
             * by updating the map directly. Because of this design, there's no setter.
             * 
             * 
             * @return
             *     always non-null
             */
            public Map<QName, String> getOtherAttributes() {
                return otherAttributes;
            }

            public String toString() {
                final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
                final StringBuilder buffer = new StringBuilder();
                append(null, buffer, strategy);
                return buffer.toString();
            }

            public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                strategy.appendStart(locator, this, buffer);
                appendFields(locator, buffer, strategy);
                strategy.appendEnd(locator, this, buffer);
                return buffer;
            }

            public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                {
                    String theContent;
                    theContent = this.getContent();
                    strategy.appendField(locator, this, "content", buffer, theContent);
                }
                {
                    String theType;
                    theType = this.getType();
                    strategy.appendField(locator, this, "type", buffer, theType);
                }
                {
                    String theCode;
                    theCode = this.getCode();
                    strategy.appendField(locator, this, "code", buffer, theCode);
                }
                return buffer;
            }

            public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
                if (!(object instanceof AddressDetails.PostalServiceElements.AddressLongitudeDirection)) {
                    return false;
                }
                if (this == object) {
                    return true;
                }
                final AddressDetails.PostalServiceElements.AddressLongitudeDirection that = ((AddressDetails.PostalServiceElements.AddressLongitudeDirection) object);
                {
                    String lhsContent;
                    lhsContent = this.getContent();
                    String rhsContent;
                    rhsContent = that.getContent();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "content", lhsContent), LocatorUtils.property(thatLocator, "content", rhsContent), lhsContent, rhsContent)) {
                        return false;
                    }
                }
                {
                    String lhsType;
                    lhsType = this.getType();
                    String rhsType;
                    rhsType = that.getType();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "type", lhsType), LocatorUtils.property(thatLocator, "type", rhsType), lhsType, rhsType)) {
                        return false;
                    }
                }
                {
                    String lhsCode;
                    lhsCode = this.getCode();
                    String rhsCode;
                    rhsCode = that.getCode();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "code", lhsCode), LocatorUtils.property(thatLocator, "code", rhsCode), lhsCode, rhsCode)) {
                        return false;
                    }
                }
                return true;
            }

            public boolean equals(Object object) {
                final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
                return equals(null, null, object, strategy);
            }

            public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
                int currentHashCode = 1;
                {
                    String theContent;
                    theContent = this.getContent();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "content", theContent), currentHashCode, theContent);
                }
                {
                    String theType;
                    theType = this.getType();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "type", theType), currentHashCode, theType);
                }
                {
                    String theCode;
                    theCode = this.getCode();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "code", theCode), currentHashCode, theCode);
                }
                return currentHashCode;
            }

            public int hashCode() {
                final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
                return this.hashCode(null, strategy);
            }

            public Object clone() {
                return copyTo(createNewInstance());
            }

            public Object copyTo(Object target) {
                final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
                return copyTo(null, target, strategy);
            }

            public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
                final Object draftCopy = ((target == null)?createNewInstance():target);
                if (draftCopy instanceof AddressDetails.PostalServiceElements.AddressLongitudeDirection) {
                    final AddressDetails.PostalServiceElements.AddressLongitudeDirection copy = ((AddressDetails.PostalServiceElements.AddressLongitudeDirection) draftCopy);
                    if (this.isSetContent()) {
                        String sourceContent;
                        sourceContent = this.getContent();
                        String copyContent = ((String) strategy.copy(LocatorUtils.property(locator, "content", sourceContent), sourceContent));
                        copy.setContent(copyContent);
                    } else {
                        copy.content = null;
                    }
                    if (this.isSetType()) {
                        String sourceType;
                        sourceType = this.getType();
                        String copyType = ((String) strategy.copy(LocatorUtils.property(locator, "type", sourceType), sourceType));
                        copy.setType(copyType);
                    } else {
                        copy.type = null;
                    }
                    if (this.isSetCode()) {
                        String sourceCode;
                        sourceCode = this.getCode();
                        String copyCode = ((String) strategy.copy(LocatorUtils.property(locator, "code", sourceCode), sourceCode));
                        copy.setCode(copyCode);
                    } else {
                        copy.code = null;
                    }
                }
                return draftCopy;
            }

            public Object createNewInstance() {
                return new AddressDetails.PostalServiceElements.AddressLongitudeDirection();
            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType&gt;
         *   &lt;complexContent&gt;
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
         *       &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
         *       &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
         *       &lt;anyAttribute namespace='##other'/&gt;
         *     &lt;/restriction&gt;
         *   &lt;/complexContent&gt;
         * &lt;/complexType&gt;
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "content"
        })
        public static class Barcode
            implements Cloneable, CopyTo, Equals, HashCode, ToString
        {

            @XmlValue
            protected String content;
            @XmlAttribute(name = "Type")
            @XmlSchemaType(name = "anySimpleType")
            protected String type;
            @XmlAttribute(name = "Code")
            @XmlSchemaType(name = "anySimpleType")
            protected String code;
            @XmlAnyAttribute
            private Map<QName, String> otherAttributes = new HashMap<QName, String>();

            /**
             * Gets the value of the content property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getContent() {
                return content;
            }

            /**
             * Sets the value of the content property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setContent(String value) {
                this.content = value;
            }

            public boolean isSetContent() {
                return (this.content!= null);
            }

            /**
             * Gets the value of the type property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getType() {
                return type;
            }

            /**
             * Sets the value of the type property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setType(String value) {
                this.type = value;
            }

            public boolean isSetType() {
                return (this.type!= null);
            }

            /**
             * Gets the value of the code property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getCode() {
                return code;
            }

            /**
             * Sets the value of the code property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setCode(String value) {
                this.code = value;
            }

            public boolean isSetCode() {
                return (this.code!= null);
            }

            /**
             * Gets a map that contains attributes that aren't bound to any typed property on this class.
             * 
             * <p>
             * the map is keyed by the name of the attribute and 
             * the value is the string value of the attribute.
             * 
             * the map returned by this method is live, and you can add new attribute
             * by updating the map directly. Because of this design, there's no setter.
             * 
             * 
             * @return
             *     always non-null
             */
            public Map<QName, String> getOtherAttributes() {
                return otherAttributes;
            }

            public String toString() {
                final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
                final StringBuilder buffer = new StringBuilder();
                append(null, buffer, strategy);
                return buffer.toString();
            }

            public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                strategy.appendStart(locator, this, buffer);
                appendFields(locator, buffer, strategy);
                strategy.appendEnd(locator, this, buffer);
                return buffer;
            }

            public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                {
                    String theContent;
                    theContent = this.getContent();
                    strategy.appendField(locator, this, "content", buffer, theContent);
                }
                {
                    String theType;
                    theType = this.getType();
                    strategy.appendField(locator, this, "type", buffer, theType);
                }
                {
                    String theCode;
                    theCode = this.getCode();
                    strategy.appendField(locator, this, "code", buffer, theCode);
                }
                return buffer;
            }

            public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
                if (!(object instanceof AddressDetails.PostalServiceElements.Barcode)) {
                    return false;
                }
                if (this == object) {
                    return true;
                }
                final AddressDetails.PostalServiceElements.Barcode that = ((AddressDetails.PostalServiceElements.Barcode) object);
                {
                    String lhsContent;
                    lhsContent = this.getContent();
                    String rhsContent;
                    rhsContent = that.getContent();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "content", lhsContent), LocatorUtils.property(thatLocator, "content", rhsContent), lhsContent, rhsContent)) {
                        return false;
                    }
                }
                {
                    String lhsType;
                    lhsType = this.getType();
                    String rhsType;
                    rhsType = that.getType();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "type", lhsType), LocatorUtils.property(thatLocator, "type", rhsType), lhsType, rhsType)) {
                        return false;
                    }
                }
                {
                    String lhsCode;
                    lhsCode = this.getCode();
                    String rhsCode;
                    rhsCode = that.getCode();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "code", lhsCode), LocatorUtils.property(thatLocator, "code", rhsCode), lhsCode, rhsCode)) {
                        return false;
                    }
                }
                return true;
            }

            public boolean equals(Object object) {
                final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
                return equals(null, null, object, strategy);
            }

            public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
                int currentHashCode = 1;
                {
                    String theContent;
                    theContent = this.getContent();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "content", theContent), currentHashCode, theContent);
                }
                {
                    String theType;
                    theType = this.getType();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "type", theType), currentHashCode, theType);
                }
                {
                    String theCode;
                    theCode = this.getCode();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "code", theCode), currentHashCode, theCode);
                }
                return currentHashCode;
            }

            public int hashCode() {
                final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
                return this.hashCode(null, strategy);
            }

            public Object clone() {
                return copyTo(createNewInstance());
            }

            public Object copyTo(Object target) {
                final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
                return copyTo(null, target, strategy);
            }

            public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
                final Object draftCopy = ((target == null)?createNewInstance():target);
                if (draftCopy instanceof AddressDetails.PostalServiceElements.Barcode) {
                    final AddressDetails.PostalServiceElements.Barcode copy = ((AddressDetails.PostalServiceElements.Barcode) draftCopy);
                    if (this.isSetContent()) {
                        String sourceContent;
                        sourceContent = this.getContent();
                        String copyContent = ((String) strategy.copy(LocatorUtils.property(locator, "content", sourceContent), sourceContent));
                        copy.setContent(copyContent);
                    } else {
                        copy.content = null;
                    }
                    if (this.isSetType()) {
                        String sourceType;
                        sourceType = this.getType();
                        String copyType = ((String) strategy.copy(LocatorUtils.property(locator, "type", sourceType), sourceType));
                        copy.setType(copyType);
                    } else {
                        copy.type = null;
                    }
                    if (this.isSetCode()) {
                        String sourceCode;
                        sourceCode = this.getCode();
                        String copyCode = ((String) strategy.copy(LocatorUtils.property(locator, "code", sourceCode), sourceCode));
                        copy.setCode(copyCode);
                    } else {
                        copy.code = null;
                    }
                }
                return draftCopy;
            }

            public Object createNewInstance() {
                return new AddressDetails.PostalServiceElements.Barcode();
            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType&gt;
         *   &lt;complexContent&gt;
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
         *       &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
         *       &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
         *       &lt;anyAttribute namespace='##other'/&gt;
         *     &lt;/restriction&gt;
         *   &lt;/complexContent&gt;
         * &lt;/complexType&gt;
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "content"
        })
        public static class EndorsementLineCode
            implements Cloneable, CopyTo, Equals, HashCode, ToString
        {

            @XmlValue
            protected String content;
            @XmlAttribute(name = "Type")
            @XmlSchemaType(name = "anySimpleType")
            protected String type;
            @XmlAttribute(name = "Code")
            @XmlSchemaType(name = "anySimpleType")
            protected String code;
            @XmlAnyAttribute
            private Map<QName, String> otherAttributes = new HashMap<QName, String>();

            /**
             * Gets the value of the content property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getContent() {
                return content;
            }

            /**
             * Sets the value of the content property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setContent(String value) {
                this.content = value;
            }

            public boolean isSetContent() {
                return (this.content!= null);
            }

            /**
             * Gets the value of the type property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getType() {
                return type;
            }

            /**
             * Sets the value of the type property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setType(String value) {
                this.type = value;
            }

            public boolean isSetType() {
                return (this.type!= null);
            }

            /**
             * Gets the value of the code property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getCode() {
                return code;
            }

            /**
             * Sets the value of the code property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setCode(String value) {
                this.code = value;
            }

            public boolean isSetCode() {
                return (this.code!= null);
            }

            /**
             * Gets a map that contains attributes that aren't bound to any typed property on this class.
             * 
             * <p>
             * the map is keyed by the name of the attribute and 
             * the value is the string value of the attribute.
             * 
             * the map returned by this method is live, and you can add new attribute
             * by updating the map directly. Because of this design, there's no setter.
             * 
             * 
             * @return
             *     always non-null
             */
            public Map<QName, String> getOtherAttributes() {
                return otherAttributes;
            }

            public String toString() {
                final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
                final StringBuilder buffer = new StringBuilder();
                append(null, buffer, strategy);
                return buffer.toString();
            }

            public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                strategy.appendStart(locator, this, buffer);
                appendFields(locator, buffer, strategy);
                strategy.appendEnd(locator, this, buffer);
                return buffer;
            }

            public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                {
                    String theContent;
                    theContent = this.getContent();
                    strategy.appendField(locator, this, "content", buffer, theContent);
                }
                {
                    String theType;
                    theType = this.getType();
                    strategy.appendField(locator, this, "type", buffer, theType);
                }
                {
                    String theCode;
                    theCode = this.getCode();
                    strategy.appendField(locator, this, "code", buffer, theCode);
                }
                return buffer;
            }

            public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
                if (!(object instanceof AddressDetails.PostalServiceElements.EndorsementLineCode)) {
                    return false;
                }
                if (this == object) {
                    return true;
                }
                final AddressDetails.PostalServiceElements.EndorsementLineCode that = ((AddressDetails.PostalServiceElements.EndorsementLineCode) object);
                {
                    String lhsContent;
                    lhsContent = this.getContent();
                    String rhsContent;
                    rhsContent = that.getContent();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "content", lhsContent), LocatorUtils.property(thatLocator, "content", rhsContent), lhsContent, rhsContent)) {
                        return false;
                    }
                }
                {
                    String lhsType;
                    lhsType = this.getType();
                    String rhsType;
                    rhsType = that.getType();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "type", lhsType), LocatorUtils.property(thatLocator, "type", rhsType), lhsType, rhsType)) {
                        return false;
                    }
                }
                {
                    String lhsCode;
                    lhsCode = this.getCode();
                    String rhsCode;
                    rhsCode = that.getCode();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "code", lhsCode), LocatorUtils.property(thatLocator, "code", rhsCode), lhsCode, rhsCode)) {
                        return false;
                    }
                }
                return true;
            }

            public boolean equals(Object object) {
                final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
                return equals(null, null, object, strategy);
            }

            public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
                int currentHashCode = 1;
                {
                    String theContent;
                    theContent = this.getContent();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "content", theContent), currentHashCode, theContent);
                }
                {
                    String theType;
                    theType = this.getType();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "type", theType), currentHashCode, theType);
                }
                {
                    String theCode;
                    theCode = this.getCode();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "code", theCode), currentHashCode, theCode);
                }
                return currentHashCode;
            }

            public int hashCode() {
                final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
                return this.hashCode(null, strategy);
            }

            public Object clone() {
                return copyTo(createNewInstance());
            }

            public Object copyTo(Object target) {
                final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
                return copyTo(null, target, strategy);
            }

            public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
                final Object draftCopy = ((target == null)?createNewInstance():target);
                if (draftCopy instanceof AddressDetails.PostalServiceElements.EndorsementLineCode) {
                    final AddressDetails.PostalServiceElements.EndorsementLineCode copy = ((AddressDetails.PostalServiceElements.EndorsementLineCode) draftCopy);
                    if (this.isSetContent()) {
                        String sourceContent;
                        sourceContent = this.getContent();
                        String copyContent = ((String) strategy.copy(LocatorUtils.property(locator, "content", sourceContent), sourceContent));
                        copy.setContent(copyContent);
                    } else {
                        copy.content = null;
                    }
                    if (this.isSetType()) {
                        String sourceType;
                        sourceType = this.getType();
                        String copyType = ((String) strategy.copy(LocatorUtils.property(locator, "type", sourceType), sourceType));
                        copy.setType(copyType);
                    } else {
                        copy.type = null;
                    }
                    if (this.isSetCode()) {
                        String sourceCode;
                        sourceCode = this.getCode();
                        String copyCode = ((String) strategy.copy(LocatorUtils.property(locator, "code", sourceCode), sourceCode));
                        copy.setCode(copyCode);
                    } else {
                        copy.code = null;
                    }
                }
                return draftCopy;
            }

            public Object createNewInstance() {
                return new AddressDetails.PostalServiceElements.EndorsementLineCode();
            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType&gt;
         *   &lt;complexContent&gt;
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
         *       &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
         *       &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
         *       &lt;anyAttribute namespace='##other'/&gt;
         *     &lt;/restriction&gt;
         *   &lt;/complexContent&gt;
         * &lt;/complexType&gt;
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "content"
        })
        public static class KeyLineCode
            implements Cloneable, CopyTo, Equals, HashCode, ToString
        {

            @XmlValue
            protected String content;
            @XmlAttribute(name = "Type")
            @XmlSchemaType(name = "anySimpleType")
            protected String type;
            @XmlAttribute(name = "Code")
            @XmlSchemaType(name = "anySimpleType")
            protected String code;
            @XmlAnyAttribute
            private Map<QName, String> otherAttributes = new HashMap<QName, String>();

            /**
             * Gets the value of the content property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getContent() {
                return content;
            }

            /**
             * Sets the value of the content property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setContent(String value) {
                this.content = value;
            }

            public boolean isSetContent() {
                return (this.content!= null);
            }

            /**
             * Gets the value of the type property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getType() {
                return type;
            }

            /**
             * Sets the value of the type property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setType(String value) {
                this.type = value;
            }

            public boolean isSetType() {
                return (this.type!= null);
            }

            /**
             * Gets the value of the code property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getCode() {
                return code;
            }

            /**
             * Sets the value of the code property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setCode(String value) {
                this.code = value;
            }

            public boolean isSetCode() {
                return (this.code!= null);
            }

            /**
             * Gets a map that contains attributes that aren't bound to any typed property on this class.
             * 
             * <p>
             * the map is keyed by the name of the attribute and 
             * the value is the string value of the attribute.
             * 
             * the map returned by this method is live, and you can add new attribute
             * by updating the map directly. Because of this design, there's no setter.
             * 
             * 
             * @return
             *     always non-null
             */
            public Map<QName, String> getOtherAttributes() {
                return otherAttributes;
            }

            public String toString() {
                final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
                final StringBuilder buffer = new StringBuilder();
                append(null, buffer, strategy);
                return buffer.toString();
            }

            public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                strategy.appendStart(locator, this, buffer);
                appendFields(locator, buffer, strategy);
                strategy.appendEnd(locator, this, buffer);
                return buffer;
            }

            public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                {
                    String theContent;
                    theContent = this.getContent();
                    strategy.appendField(locator, this, "content", buffer, theContent);
                }
                {
                    String theType;
                    theType = this.getType();
                    strategy.appendField(locator, this, "type", buffer, theType);
                }
                {
                    String theCode;
                    theCode = this.getCode();
                    strategy.appendField(locator, this, "code", buffer, theCode);
                }
                return buffer;
            }

            public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
                if (!(object instanceof AddressDetails.PostalServiceElements.KeyLineCode)) {
                    return false;
                }
                if (this == object) {
                    return true;
                }
                final AddressDetails.PostalServiceElements.KeyLineCode that = ((AddressDetails.PostalServiceElements.KeyLineCode) object);
                {
                    String lhsContent;
                    lhsContent = this.getContent();
                    String rhsContent;
                    rhsContent = that.getContent();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "content", lhsContent), LocatorUtils.property(thatLocator, "content", rhsContent), lhsContent, rhsContent)) {
                        return false;
                    }
                }
                {
                    String lhsType;
                    lhsType = this.getType();
                    String rhsType;
                    rhsType = that.getType();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "type", lhsType), LocatorUtils.property(thatLocator, "type", rhsType), lhsType, rhsType)) {
                        return false;
                    }
                }
                {
                    String lhsCode;
                    lhsCode = this.getCode();
                    String rhsCode;
                    rhsCode = that.getCode();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "code", lhsCode), LocatorUtils.property(thatLocator, "code", rhsCode), lhsCode, rhsCode)) {
                        return false;
                    }
                }
                return true;
            }

            public boolean equals(Object object) {
                final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
                return equals(null, null, object, strategy);
            }

            public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
                int currentHashCode = 1;
                {
                    String theContent;
                    theContent = this.getContent();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "content", theContent), currentHashCode, theContent);
                }
                {
                    String theType;
                    theType = this.getType();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "type", theType), currentHashCode, theType);
                }
                {
                    String theCode;
                    theCode = this.getCode();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "code", theCode), currentHashCode, theCode);
                }
                return currentHashCode;
            }

            public int hashCode() {
                final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
                return this.hashCode(null, strategy);
            }

            public Object clone() {
                return copyTo(createNewInstance());
            }

            public Object copyTo(Object target) {
                final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
                return copyTo(null, target, strategy);
            }

            public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
                final Object draftCopy = ((target == null)?createNewInstance():target);
                if (draftCopy instanceof AddressDetails.PostalServiceElements.KeyLineCode) {
                    final AddressDetails.PostalServiceElements.KeyLineCode copy = ((AddressDetails.PostalServiceElements.KeyLineCode) draftCopy);
                    if (this.isSetContent()) {
                        String sourceContent;
                        sourceContent = this.getContent();
                        String copyContent = ((String) strategy.copy(LocatorUtils.property(locator, "content", sourceContent), sourceContent));
                        copy.setContent(copyContent);
                    } else {
                        copy.content = null;
                    }
                    if (this.isSetType()) {
                        String sourceType;
                        sourceType = this.getType();
                        String copyType = ((String) strategy.copy(LocatorUtils.property(locator, "type", sourceType), sourceType));
                        copy.setType(copyType);
                    } else {
                        copy.type = null;
                    }
                    if (this.isSetCode()) {
                        String sourceCode;
                        sourceCode = this.getCode();
                        String copyCode = ((String) strategy.copy(LocatorUtils.property(locator, "code", sourceCode), sourceCode));
                        copy.setCode(copyCode);
                    } else {
                        copy.code = null;
                    }
                }
                return draftCopy;
            }

            public Object createNewInstance() {
                return new AddressDetails.PostalServiceElements.KeyLineCode();
            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType&gt;
         *   &lt;complexContent&gt;
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
         *       &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
         *       &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
         *     &lt;/restriction&gt;
         *   &lt;/complexContent&gt;
         * &lt;/complexType&gt;
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "")
        public static class SortingCode
            implements Cloneable, CopyTo, Equals, HashCode, ToString
        {

            @XmlAttribute(name = "Type")
            @XmlSchemaType(name = "anySimpleType")
            protected String type;
            @XmlAttribute(name = "Code")
            @XmlSchemaType(name = "anySimpleType")
            protected String code;

            /**
             * Gets the value of the type property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getType() {
                return type;
            }

            /**
             * Sets the value of the type property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setType(String value) {
                this.type = value;
            }

            public boolean isSetType() {
                return (this.type!= null);
            }

            /**
             * Gets the value of the code property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getCode() {
                return code;
            }

            /**
             * Sets the value of the code property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setCode(String value) {
                this.code = value;
            }

            public boolean isSetCode() {
                return (this.code!= null);
            }

            public String toString() {
                final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
                final StringBuilder buffer = new StringBuilder();
                append(null, buffer, strategy);
                return buffer.toString();
            }

            public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                strategy.appendStart(locator, this, buffer);
                appendFields(locator, buffer, strategy);
                strategy.appendEnd(locator, this, buffer);
                return buffer;
            }

            public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                {
                    String theType;
                    theType = this.getType();
                    strategy.appendField(locator, this, "type", buffer, theType);
                }
                {
                    String theCode;
                    theCode = this.getCode();
                    strategy.appendField(locator, this, "code", buffer, theCode);
                }
                return buffer;
            }

            public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
                if (!(object instanceof AddressDetails.PostalServiceElements.SortingCode)) {
                    return false;
                }
                if (this == object) {
                    return true;
                }
                final AddressDetails.PostalServiceElements.SortingCode that = ((AddressDetails.PostalServiceElements.SortingCode) object);
                {
                    String lhsType;
                    lhsType = this.getType();
                    String rhsType;
                    rhsType = that.getType();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "type", lhsType), LocatorUtils.property(thatLocator, "type", rhsType), lhsType, rhsType)) {
                        return false;
                    }
                }
                {
                    String lhsCode;
                    lhsCode = this.getCode();
                    String rhsCode;
                    rhsCode = that.getCode();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "code", lhsCode), LocatorUtils.property(thatLocator, "code", rhsCode), lhsCode, rhsCode)) {
                        return false;
                    }
                }
                return true;
            }

            public boolean equals(Object object) {
                final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
                return equals(null, null, object, strategy);
            }

            public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
                int currentHashCode = 1;
                {
                    String theType;
                    theType = this.getType();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "type", theType), currentHashCode, theType);
                }
                {
                    String theCode;
                    theCode = this.getCode();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "code", theCode), currentHashCode, theCode);
                }
                return currentHashCode;
            }

            public int hashCode() {
                final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
                return this.hashCode(null, strategy);
            }

            public Object clone() {
                return copyTo(createNewInstance());
            }

            public Object copyTo(Object target) {
                final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
                return copyTo(null, target, strategy);
            }

            public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
                final Object draftCopy = ((target == null)?createNewInstance():target);
                if (draftCopy instanceof AddressDetails.PostalServiceElements.SortingCode) {
                    final AddressDetails.PostalServiceElements.SortingCode copy = ((AddressDetails.PostalServiceElements.SortingCode) draftCopy);
                    if (this.isSetType()) {
                        String sourceType;
                        sourceType = this.getType();
                        String copyType = ((String) strategy.copy(LocatorUtils.property(locator, "type", sourceType), sourceType));
                        copy.setType(copyType);
                    } else {
                        copy.type = null;
                    }
                    if (this.isSetCode()) {
                        String sourceCode;
                        sourceCode = this.getCode();
                        String copyCode = ((String) strategy.copy(LocatorUtils.property(locator, "code", sourceCode), sourceCode));
                        copy.setCode(copyCode);
                    } else {
                        copy.code = null;
                    }
                }
                return draftCopy;
            }

            public Object createNewInstance() {
                return new AddressDetails.PostalServiceElements.SortingCode();
            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType&gt;
         *   &lt;complexContent&gt;
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
         *       &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
         *       &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
         *       &lt;anyAttribute namespace='##other'/&gt;
         *     &lt;/restriction&gt;
         *   &lt;/complexContent&gt;
         * &lt;/complexType&gt;
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "content"
        })
        public static class SupplementaryPostalServiceData
            implements Cloneable, CopyTo, Equals, HashCode, ToString
        {

            @XmlValue
            protected String content;
            @XmlAttribute(name = "Type")
            @XmlSchemaType(name = "anySimpleType")
            protected String type;
            @XmlAttribute(name = "Code")
            @XmlSchemaType(name = "anySimpleType")
            protected String code;
            @XmlAnyAttribute
            private Map<QName, String> otherAttributes = new HashMap<QName, String>();

            /**
             * Gets the value of the content property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getContent() {
                return content;
            }

            /**
             * Sets the value of the content property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setContent(String value) {
                this.content = value;
            }

            public boolean isSetContent() {
                return (this.content!= null);
            }

            /**
             * Gets the value of the type property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getType() {
                return type;
            }

            /**
             * Sets the value of the type property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setType(String value) {
                this.type = value;
            }

            public boolean isSetType() {
                return (this.type!= null);
            }

            /**
             * Gets the value of the code property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getCode() {
                return code;
            }

            /**
             * Sets the value of the code property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setCode(String value) {
                this.code = value;
            }

            public boolean isSetCode() {
                return (this.code!= null);
            }

            /**
             * Gets a map that contains attributes that aren't bound to any typed property on this class.
             * 
             * <p>
             * the map is keyed by the name of the attribute and 
             * the value is the string value of the attribute.
             * 
             * the map returned by this method is live, and you can add new attribute
             * by updating the map directly. Because of this design, there's no setter.
             * 
             * 
             * @return
             *     always non-null
             */
            public Map<QName, String> getOtherAttributes() {
                return otherAttributes;
            }

            public String toString() {
                final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
                final StringBuilder buffer = new StringBuilder();
                append(null, buffer, strategy);
                return buffer.toString();
            }

            public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                strategy.appendStart(locator, this, buffer);
                appendFields(locator, buffer, strategy);
                strategy.appendEnd(locator, this, buffer);
                return buffer;
            }

            public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                {
                    String theContent;
                    theContent = this.getContent();
                    strategy.appendField(locator, this, "content", buffer, theContent);
                }
                {
                    String theType;
                    theType = this.getType();
                    strategy.appendField(locator, this, "type", buffer, theType);
                }
                {
                    String theCode;
                    theCode = this.getCode();
                    strategy.appendField(locator, this, "code", buffer, theCode);
                }
                return buffer;
            }

            public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
                if (!(object instanceof AddressDetails.PostalServiceElements.SupplementaryPostalServiceData)) {
                    return false;
                }
                if (this == object) {
                    return true;
                }
                final AddressDetails.PostalServiceElements.SupplementaryPostalServiceData that = ((AddressDetails.PostalServiceElements.SupplementaryPostalServiceData) object);
                {
                    String lhsContent;
                    lhsContent = this.getContent();
                    String rhsContent;
                    rhsContent = that.getContent();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "content", lhsContent), LocatorUtils.property(thatLocator, "content", rhsContent), lhsContent, rhsContent)) {
                        return false;
                    }
                }
                {
                    String lhsType;
                    lhsType = this.getType();
                    String rhsType;
                    rhsType = that.getType();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "type", lhsType), LocatorUtils.property(thatLocator, "type", rhsType), lhsType, rhsType)) {
                        return false;
                    }
                }
                {
                    String lhsCode;
                    lhsCode = this.getCode();
                    String rhsCode;
                    rhsCode = that.getCode();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "code", lhsCode), LocatorUtils.property(thatLocator, "code", rhsCode), lhsCode, rhsCode)) {
                        return false;
                    }
                }
                return true;
            }

            public boolean equals(Object object) {
                final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
                return equals(null, null, object, strategy);
            }

            public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
                int currentHashCode = 1;
                {
                    String theContent;
                    theContent = this.getContent();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "content", theContent), currentHashCode, theContent);
                }
                {
                    String theType;
                    theType = this.getType();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "type", theType), currentHashCode, theType);
                }
                {
                    String theCode;
                    theCode = this.getCode();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "code", theCode), currentHashCode, theCode);
                }
                return currentHashCode;
            }

            public int hashCode() {
                final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
                return this.hashCode(null, strategy);
            }

            public Object clone() {
                return copyTo(createNewInstance());
            }

            public Object copyTo(Object target) {
                final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
                return copyTo(null, target, strategy);
            }

            public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
                final Object draftCopy = ((target == null)?createNewInstance():target);
                if (draftCopy instanceof AddressDetails.PostalServiceElements.SupplementaryPostalServiceData) {
                    final AddressDetails.PostalServiceElements.SupplementaryPostalServiceData copy = ((AddressDetails.PostalServiceElements.SupplementaryPostalServiceData) draftCopy);
                    if (this.isSetContent()) {
                        String sourceContent;
                        sourceContent = this.getContent();
                        String copyContent = ((String) strategy.copy(LocatorUtils.property(locator, "content", sourceContent), sourceContent));
                        copy.setContent(copyContent);
                    } else {
                        copy.content = null;
                    }
                    if (this.isSetType()) {
                        String sourceType;
                        sourceType = this.getType();
                        String copyType = ((String) strategy.copy(LocatorUtils.property(locator, "type", sourceType), sourceType));
                        copy.setType(copyType);
                    } else {
                        copy.type = null;
                    }
                    if (this.isSetCode()) {
                        String sourceCode;
                        sourceCode = this.getCode();
                        String copyCode = ((String) strategy.copy(LocatorUtils.property(locator, "code", sourceCode), sourceCode));
                        copy.setCode(copyCode);
                    } else {
                        copy.code = null;
                    }
                }
                return draftCopy;
            }

            public Object createNewInstance() {
                return new AddressDetails.PostalServiceElements.SupplementaryPostalServiceData();
            }

        }

    }

}
