//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.10.10 at 10:41:43 AM KST 
//


package oasis.names.tc.ciq.xsdschema.xal;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAnyAttribute;
import javax.xml.bind.annotation.XmlAnyElement;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import javax.xml.namespace.QName;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}AddressLine" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="PremiseName" maxOccurs="unbounded" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                 &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
 *                 &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *                 &lt;attribute name="TypeOccurrence"&gt;
 *                   &lt;simpleType&gt;
 *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN"&gt;
 *                       &lt;enumeration value="Before"/&gt;
 *                       &lt;enumeration value="After"/&gt;
 *                     &lt;/restriction&gt;
 *                   &lt;/simpleType&gt;
 *                 &lt;/attribute&gt;
 *                 &lt;anyAttribute namespace='##other'/&gt;
 *               &lt;/restriction&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;choice minOccurs="0"&gt;
 *           &lt;element name="PremiseLocation"&gt;
 *             &lt;complexType&gt;
 *               &lt;complexContent&gt;
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                   &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
 *                   &lt;anyAttribute namespace='##other'/&gt;
 *                 &lt;/restriction&gt;
 *               &lt;/complexContent&gt;
 *             &lt;/complexType&gt;
 *           &lt;/element&gt;
 *           &lt;choice&gt;
 *             &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}PremiseNumber" maxOccurs="unbounded"/&gt;
 *             &lt;element name="PremiseNumberRange"&gt;
 *               &lt;complexType&gt;
 *                 &lt;complexContent&gt;
 *                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                     &lt;sequence&gt;
 *                       &lt;element name="PremiseNumberRangeFrom"&gt;
 *                         &lt;complexType&gt;
 *                           &lt;complexContent&gt;
 *                             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                               &lt;sequence&gt;
 *                                 &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}AddressLine" maxOccurs="unbounded" minOccurs="0"/&gt;
 *                                 &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}PremiseNumberPrefix" maxOccurs="unbounded" minOccurs="0"/&gt;
 *                                 &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}PremiseNumber" maxOccurs="unbounded"/&gt;
 *                                 &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}PremiseNumberSuffix" maxOccurs="unbounded" minOccurs="0"/&gt;
 *                               &lt;/sequence&gt;
 *                             &lt;/restriction&gt;
 *                           &lt;/complexContent&gt;
 *                         &lt;/complexType&gt;
 *                       &lt;/element&gt;
 *                       &lt;element name="PremiseNumberRangeTo"&gt;
 *                         &lt;complexType&gt;
 *                           &lt;complexContent&gt;
 *                             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                               &lt;sequence&gt;
 *                                 &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}AddressLine" maxOccurs="unbounded" minOccurs="0"/&gt;
 *                                 &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}PremiseNumberPrefix" maxOccurs="unbounded" minOccurs="0"/&gt;
 *                                 &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}PremiseNumber" maxOccurs="unbounded"/&gt;
 *                                 &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}PremiseNumberSuffix" maxOccurs="unbounded" minOccurs="0"/&gt;
 *                               &lt;/sequence&gt;
 *                             &lt;/restriction&gt;
 *                           &lt;/complexContent&gt;
 *                         &lt;/complexType&gt;
 *                       &lt;/element&gt;
 *                     &lt;/sequence&gt;
 *                     &lt;attribute name="RangeType" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *                     &lt;attribute name="Indicator" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *                     &lt;attribute name="Separator" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *                     &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *                     &lt;attribute name="IndicatorOccurence"&gt;
 *                       &lt;simpleType&gt;
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN"&gt;
 *                           &lt;enumeration value="Before"/&gt;
 *                           &lt;enumeration value="After"/&gt;
 *                         &lt;/restriction&gt;
 *                       &lt;/simpleType&gt;
 *                     &lt;/attribute&gt;
 *                     &lt;attribute name="NumberRangeOccurence"&gt;
 *                       &lt;simpleType&gt;
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN"&gt;
 *                           &lt;enumeration value="BeforeName"/&gt;
 *                           &lt;enumeration value="AfterName"/&gt;
 *                           &lt;enumeration value="BeforeType"/&gt;
 *                           &lt;enumeration value="AfterType"/&gt;
 *                         &lt;/restriction&gt;
 *                       &lt;/simpleType&gt;
 *                     &lt;/attribute&gt;
 *                   &lt;/restriction&gt;
 *                 &lt;/complexContent&gt;
 *               &lt;/complexType&gt;
 *             &lt;/element&gt;
 *           &lt;/choice&gt;
 *         &lt;/choice&gt;
 *         &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}PremiseNumberPrefix" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}PremiseNumberSuffix" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="BuildingName" type="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}BuildingNameType" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;choice&gt;
 *           &lt;element name="SubPremise" type="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}SubPremiseType" maxOccurs="unbounded" minOccurs="0"/&gt;
 *           &lt;element name="Firm" type="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}FirmType" minOccurs="0"/&gt;
 *         &lt;/choice&gt;
 *         &lt;element name="MailStop" type="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}MailStopType" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}PostalCode" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}Premise" minOccurs="0"/&gt;
 *         &lt;any namespace='##other' maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *       &lt;attribute name="PremiseDependency" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *       &lt;attribute name="PremiseDependencyType" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *       &lt;attribute name="PremiseThoroughfareConnector" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *       &lt;anyAttribute namespace='##other'/&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "addressLine",
    "premiseName",
    "premiseLocation",
    "premiseNumber",
    "premiseNumberRange",
    "premiseNumberPrefix",
    "premiseNumberSuffix",
    "buildingName",
    "subPremise",
    "firm",
    "mailStop",
    "postalCode",
    "premise",
    "any"
})
@XmlRootElement(name = "Premise")
public class PremiseElement
    implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    @XmlElement(name = "AddressLine")
    protected List<AddressLineElement> addressLine;
    @XmlElement(name = "PremiseName")
    protected List<PremiseElement.PremiseName> premiseName;
    @XmlElement(name = "PremiseLocation")
    protected PremiseElement.PremiseLocation premiseLocation;
    @XmlElement(name = "PremiseNumber")
    protected List<PremiseNumberElement> premiseNumber;
    @XmlElement(name = "PremiseNumberRange")
    protected PremiseElement.PremiseNumberRange premiseNumberRange;
    @XmlElement(name = "PremiseNumberPrefix")
    protected List<PremiseNumberPrefixElement> premiseNumberPrefix;
    @XmlElement(name = "PremiseNumberSuffix")
    protected List<PremiseNumberSuffixElement> premiseNumberSuffix;
    @XmlElement(name = "BuildingName")
    protected List<BuildingNameType> buildingName;
    @XmlElement(name = "SubPremise")
    protected List<SubPremiseType> subPremise;
    @XmlElement(name = "Firm")
    protected FirmType firm;
    @XmlElement(name = "MailStop")
    protected MailStopType mailStop;
    @XmlElement(name = "PostalCode")
    protected PostalCodeElement postalCode;
    @XmlElement(name = "Premise")
    protected PremiseElement premise;
    @XmlAnyElement(lax = true)
    protected List<Object> any;
    @XmlAttribute(name = "Type")
    @XmlSchemaType(name = "anySimpleType")
    protected String type;
    @XmlAttribute(name = "PremiseDependency")
    @XmlSchemaType(name = "anySimpleType")
    protected String premiseDependency;
    @XmlAttribute(name = "PremiseDependencyType")
    @XmlSchemaType(name = "anySimpleType")
    protected String premiseDependencyType;
    @XmlAttribute(name = "PremiseThoroughfareConnector")
    @XmlSchemaType(name = "anySimpleType")
    protected String premiseThoroughfareConnector;
    @XmlAnyAttribute
    private Map<QName, String> otherAttributes = new HashMap<QName, String>();

    /**
     * Gets the value of the addressLine property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the addressLine property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAddressLine().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AddressLineElement }
     * 
     * 
     */
    public List<AddressLineElement> getAddressLine() {
        if (addressLine == null) {
            addressLine = new ArrayList<AddressLineElement>();
        }
        return this.addressLine;
    }

    public boolean isSetAddressLine() {
        return ((this.addressLine!= null)&&(!this.addressLine.isEmpty()));
    }

    public void unsetAddressLine() {
        this.addressLine = null;
    }

    /**
     * Gets the value of the premiseName property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the premiseName property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPremiseName().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PremiseElement.PremiseName }
     * 
     * 
     */
    public List<PremiseElement.PremiseName> getPremiseName() {
        if (premiseName == null) {
            premiseName = new ArrayList<PremiseElement.PremiseName>();
        }
        return this.premiseName;
    }

    public boolean isSetPremiseName() {
        return ((this.premiseName!= null)&&(!this.premiseName.isEmpty()));
    }

    public void unsetPremiseName() {
        this.premiseName = null;
    }

    /**
     * Gets the value of the premiseLocation property.
     * 
     * @return
     *     possible object is
     *     {@link PremiseElement.PremiseLocation }
     *     
     */
    public PremiseElement.PremiseLocation getPremiseLocation() {
        return premiseLocation;
    }

    /**
     * Sets the value of the premiseLocation property.
     * 
     * @param value
     *     allowed object is
     *     {@link PremiseElement.PremiseLocation }
     *     
     */
    public void setPremiseLocation(PremiseElement.PremiseLocation value) {
        this.premiseLocation = value;
    }

    public boolean isSetPremiseLocation() {
        return (this.premiseLocation!= null);
    }

    /**
     * Gets the value of the premiseNumber property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the premiseNumber property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPremiseNumber().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PremiseNumberElement }
     * 
     * 
     */
    public List<PremiseNumberElement> getPremiseNumber() {
        if (premiseNumber == null) {
            premiseNumber = new ArrayList<PremiseNumberElement>();
        }
        return this.premiseNumber;
    }

    public boolean isSetPremiseNumber() {
        return ((this.premiseNumber!= null)&&(!this.premiseNumber.isEmpty()));
    }

    public void unsetPremiseNumber() {
        this.premiseNumber = null;
    }

    /**
     * Gets the value of the premiseNumberRange property.
     * 
     * @return
     *     possible object is
     *     {@link PremiseElement.PremiseNumberRange }
     *     
     */
    public PremiseElement.PremiseNumberRange getPremiseNumberRange() {
        return premiseNumberRange;
    }

    /**
     * Sets the value of the premiseNumberRange property.
     * 
     * @param value
     *     allowed object is
     *     {@link PremiseElement.PremiseNumberRange }
     *     
     */
    public void setPremiseNumberRange(PremiseElement.PremiseNumberRange value) {
        this.premiseNumberRange = value;
    }

    public boolean isSetPremiseNumberRange() {
        return (this.premiseNumberRange!= null);
    }

    /**
     * Gets the value of the premiseNumberPrefix property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the premiseNumberPrefix property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPremiseNumberPrefix().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PremiseNumberPrefixElement }
     * 
     * 
     */
    public List<PremiseNumberPrefixElement> getPremiseNumberPrefix() {
        if (premiseNumberPrefix == null) {
            premiseNumberPrefix = new ArrayList<PremiseNumberPrefixElement>();
        }
        return this.premiseNumberPrefix;
    }

    public boolean isSetPremiseNumberPrefix() {
        return ((this.premiseNumberPrefix!= null)&&(!this.premiseNumberPrefix.isEmpty()));
    }

    public void unsetPremiseNumberPrefix() {
        this.premiseNumberPrefix = null;
    }

    /**
     * Gets the value of the premiseNumberSuffix property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the premiseNumberSuffix property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPremiseNumberSuffix().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PremiseNumberSuffixElement }
     * 
     * 
     */
    public List<PremiseNumberSuffixElement> getPremiseNumberSuffix() {
        if (premiseNumberSuffix == null) {
            premiseNumberSuffix = new ArrayList<PremiseNumberSuffixElement>();
        }
        return this.premiseNumberSuffix;
    }

    public boolean isSetPremiseNumberSuffix() {
        return ((this.premiseNumberSuffix!= null)&&(!this.premiseNumberSuffix.isEmpty()));
    }

    public void unsetPremiseNumberSuffix() {
        this.premiseNumberSuffix = null;
    }

    /**
     * Gets the value of the buildingName property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the buildingName property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getBuildingName().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link BuildingNameType }
     * 
     * 
     */
    public List<BuildingNameType> getBuildingName() {
        if (buildingName == null) {
            buildingName = new ArrayList<BuildingNameType>();
        }
        return this.buildingName;
    }

    public boolean isSetBuildingName() {
        return ((this.buildingName!= null)&&(!this.buildingName.isEmpty()));
    }

    public void unsetBuildingName() {
        this.buildingName = null;
    }

    /**
     * Gets the value of the subPremise property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the subPremise property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSubPremise().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SubPremiseType }
     * 
     * 
     */
    public List<SubPremiseType> getSubPremise() {
        if (subPremise == null) {
            subPremise = new ArrayList<SubPremiseType>();
        }
        return this.subPremise;
    }

    public boolean isSetSubPremise() {
        return ((this.subPremise!= null)&&(!this.subPremise.isEmpty()));
    }

    public void unsetSubPremise() {
        this.subPremise = null;
    }

    /**
     * Gets the value of the firm property.
     * 
     * @return
     *     possible object is
     *     {@link FirmType }
     *     
     */
    public FirmType getFirm() {
        return firm;
    }

    /**
     * Sets the value of the firm property.
     * 
     * @param value
     *     allowed object is
     *     {@link FirmType }
     *     
     */
    public void setFirm(FirmType value) {
        this.firm = value;
    }

    public boolean isSetFirm() {
        return (this.firm!= null);
    }

    /**
     * Gets the value of the mailStop property.
     * 
     * @return
     *     possible object is
     *     {@link MailStopType }
     *     
     */
    public MailStopType getMailStop() {
        return mailStop;
    }

    /**
     * Sets the value of the mailStop property.
     * 
     * @param value
     *     allowed object is
     *     {@link MailStopType }
     *     
     */
    public void setMailStop(MailStopType value) {
        this.mailStop = value;
    }

    public boolean isSetMailStop() {
        return (this.mailStop!= null);
    }

    /**
     * Gets the value of the postalCode property.
     * 
     * @return
     *     possible object is
     *     {@link PostalCodeElement }
     *     
     */
    public PostalCodeElement getPostalCode() {
        return postalCode;
    }

    /**
     * Sets the value of the postalCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link PostalCodeElement }
     *     
     */
    public void setPostalCode(PostalCodeElement value) {
        this.postalCode = value;
    }

    public boolean isSetPostalCode() {
        return (this.postalCode!= null);
    }

    /**
     * Gets the value of the premise property.
     * 
     * @return
     *     possible object is
     *     {@link PremiseElement }
     *     
     */
    public PremiseElement getPremise() {
        return premise;
    }

    /**
     * Sets the value of the premise property.
     * 
     * @param value
     *     allowed object is
     *     {@link PremiseElement }
     *     
     */
    public void setPremise(PremiseElement value) {
        this.premise = value;
    }

    public boolean isSetPremise() {
        return (this.premise!= null);
    }

    /**
     * Gets the value of the any property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the any property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAny().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Object }
     * 
     * 
     */
    public List<Object> getAny() {
        if (any == null) {
            any = new ArrayList<Object>();
        }
        return this.any;
    }

    public boolean isSetAny() {
        return ((this.any!= null)&&(!this.any.isEmpty()));
    }

    public void unsetAny() {
        this.any = null;
    }

    /**
     * Gets the value of the type property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getType() {
        return type;
    }

    /**
     * Sets the value of the type property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setType(String value) {
        this.type = value;
    }

    public boolean isSetType() {
        return (this.type!= null);
    }

    /**
     * Gets the value of the premiseDependency property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPremiseDependency() {
        return premiseDependency;
    }

    /**
     * Sets the value of the premiseDependency property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPremiseDependency(String value) {
        this.premiseDependency = value;
    }

    public boolean isSetPremiseDependency() {
        return (this.premiseDependency!= null);
    }

    /**
     * Gets the value of the premiseDependencyType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPremiseDependencyType() {
        return premiseDependencyType;
    }

    /**
     * Sets the value of the premiseDependencyType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPremiseDependencyType(String value) {
        this.premiseDependencyType = value;
    }

    public boolean isSetPremiseDependencyType() {
        return (this.premiseDependencyType!= null);
    }

    /**
     * Gets the value of the premiseThoroughfareConnector property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPremiseThoroughfareConnector() {
        return premiseThoroughfareConnector;
    }

    /**
     * Sets the value of the premiseThoroughfareConnector property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPremiseThoroughfareConnector(String value) {
        this.premiseThoroughfareConnector = value;
    }

    public boolean isSetPremiseThoroughfareConnector() {
        return (this.premiseThoroughfareConnector!= null);
    }

    /**
     * Gets a map that contains attributes that aren't bound to any typed property on this class.
     * 
     * <p>
     * the map is keyed by the name of the attribute and 
     * the value is the string value of the attribute.
     * 
     * the map returned by this method is live, and you can add new attribute
     * by updating the map directly. Because of this design, there's no setter.
     * 
     * 
     * @return
     *     always non-null
     */
    public Map<QName, String> getOtherAttributes() {
        return otherAttributes;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            List<AddressLineElement> theAddressLine;
            theAddressLine = (this.isSetAddressLine()?this.getAddressLine():null);
            strategy.appendField(locator, this, "addressLine", buffer, theAddressLine);
        }
        {
            List<PremiseElement.PremiseName> thePremiseName;
            thePremiseName = (this.isSetPremiseName()?this.getPremiseName():null);
            strategy.appendField(locator, this, "premiseName", buffer, thePremiseName);
        }
        {
            PremiseElement.PremiseLocation thePremiseLocation;
            thePremiseLocation = this.getPremiseLocation();
            strategy.appendField(locator, this, "premiseLocation", buffer, thePremiseLocation);
        }
        {
            List<PremiseNumberElement> thePremiseNumber;
            thePremiseNumber = (this.isSetPremiseNumber()?this.getPremiseNumber():null);
            strategy.appendField(locator, this, "premiseNumber", buffer, thePremiseNumber);
        }
        {
            PremiseElement.PremiseNumberRange thePremiseNumberRange;
            thePremiseNumberRange = this.getPremiseNumberRange();
            strategy.appendField(locator, this, "premiseNumberRange", buffer, thePremiseNumberRange);
        }
        {
            List<PremiseNumberPrefixElement> thePremiseNumberPrefix;
            thePremiseNumberPrefix = (this.isSetPremiseNumberPrefix()?this.getPremiseNumberPrefix():null);
            strategy.appendField(locator, this, "premiseNumberPrefix", buffer, thePremiseNumberPrefix);
        }
        {
            List<PremiseNumberSuffixElement> thePremiseNumberSuffix;
            thePremiseNumberSuffix = (this.isSetPremiseNumberSuffix()?this.getPremiseNumberSuffix():null);
            strategy.appendField(locator, this, "premiseNumberSuffix", buffer, thePremiseNumberSuffix);
        }
        {
            List<BuildingNameType> theBuildingName;
            theBuildingName = (this.isSetBuildingName()?this.getBuildingName():null);
            strategy.appendField(locator, this, "buildingName", buffer, theBuildingName);
        }
        {
            List<SubPremiseType> theSubPremise;
            theSubPremise = (this.isSetSubPremise()?this.getSubPremise():null);
            strategy.appendField(locator, this, "subPremise", buffer, theSubPremise);
        }
        {
            FirmType theFirm;
            theFirm = this.getFirm();
            strategy.appendField(locator, this, "firm", buffer, theFirm);
        }
        {
            MailStopType theMailStop;
            theMailStop = this.getMailStop();
            strategy.appendField(locator, this, "mailStop", buffer, theMailStop);
        }
        {
            PostalCodeElement thePostalCode;
            thePostalCode = this.getPostalCode();
            strategy.appendField(locator, this, "postalCode", buffer, thePostalCode);
        }
        {
            PremiseElement thePremise;
            thePremise = this.getPremise();
            strategy.appendField(locator, this, "premise", buffer, thePremise);
        }
        {
            List<Object> theAny;
            theAny = (this.isSetAny()?this.getAny():null);
            strategy.appendField(locator, this, "any", buffer, theAny);
        }
        {
            String theType;
            theType = this.getType();
            strategy.appendField(locator, this, "type", buffer, theType);
        }
        {
            String thePremiseDependency;
            thePremiseDependency = this.getPremiseDependency();
            strategy.appendField(locator, this, "premiseDependency", buffer, thePremiseDependency);
        }
        {
            String thePremiseDependencyType;
            thePremiseDependencyType = this.getPremiseDependencyType();
            strategy.appendField(locator, this, "premiseDependencyType", buffer, thePremiseDependencyType);
        }
        {
            String thePremiseThoroughfareConnector;
            thePremiseThoroughfareConnector = this.getPremiseThoroughfareConnector();
            strategy.appendField(locator, this, "premiseThoroughfareConnector", buffer, thePremiseThoroughfareConnector);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof PremiseElement)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final PremiseElement that = ((PremiseElement) object);
        {
            List<AddressLineElement> lhsAddressLine;
            lhsAddressLine = (this.isSetAddressLine()?this.getAddressLine():null);
            List<AddressLineElement> rhsAddressLine;
            rhsAddressLine = (that.isSetAddressLine()?that.getAddressLine():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "addressLine", lhsAddressLine), LocatorUtils.property(thatLocator, "addressLine", rhsAddressLine), lhsAddressLine, rhsAddressLine)) {
                return false;
            }
        }
        {
            List<PremiseElement.PremiseName> lhsPremiseName;
            lhsPremiseName = (this.isSetPremiseName()?this.getPremiseName():null);
            List<PremiseElement.PremiseName> rhsPremiseName;
            rhsPremiseName = (that.isSetPremiseName()?that.getPremiseName():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "premiseName", lhsPremiseName), LocatorUtils.property(thatLocator, "premiseName", rhsPremiseName), lhsPremiseName, rhsPremiseName)) {
                return false;
            }
        }
        {
            PremiseElement.PremiseLocation lhsPremiseLocation;
            lhsPremiseLocation = this.getPremiseLocation();
            PremiseElement.PremiseLocation rhsPremiseLocation;
            rhsPremiseLocation = that.getPremiseLocation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "premiseLocation", lhsPremiseLocation), LocatorUtils.property(thatLocator, "premiseLocation", rhsPremiseLocation), lhsPremiseLocation, rhsPremiseLocation)) {
                return false;
            }
        }
        {
            List<PremiseNumberElement> lhsPremiseNumber;
            lhsPremiseNumber = (this.isSetPremiseNumber()?this.getPremiseNumber():null);
            List<PremiseNumberElement> rhsPremiseNumber;
            rhsPremiseNumber = (that.isSetPremiseNumber()?that.getPremiseNumber():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "premiseNumber", lhsPremiseNumber), LocatorUtils.property(thatLocator, "premiseNumber", rhsPremiseNumber), lhsPremiseNumber, rhsPremiseNumber)) {
                return false;
            }
        }
        {
            PremiseElement.PremiseNumberRange lhsPremiseNumberRange;
            lhsPremiseNumberRange = this.getPremiseNumberRange();
            PremiseElement.PremiseNumberRange rhsPremiseNumberRange;
            rhsPremiseNumberRange = that.getPremiseNumberRange();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "premiseNumberRange", lhsPremiseNumberRange), LocatorUtils.property(thatLocator, "premiseNumberRange", rhsPremiseNumberRange), lhsPremiseNumberRange, rhsPremiseNumberRange)) {
                return false;
            }
        }
        {
            List<PremiseNumberPrefixElement> lhsPremiseNumberPrefix;
            lhsPremiseNumberPrefix = (this.isSetPremiseNumberPrefix()?this.getPremiseNumberPrefix():null);
            List<PremiseNumberPrefixElement> rhsPremiseNumberPrefix;
            rhsPremiseNumberPrefix = (that.isSetPremiseNumberPrefix()?that.getPremiseNumberPrefix():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "premiseNumberPrefix", lhsPremiseNumberPrefix), LocatorUtils.property(thatLocator, "premiseNumberPrefix", rhsPremiseNumberPrefix), lhsPremiseNumberPrefix, rhsPremiseNumberPrefix)) {
                return false;
            }
        }
        {
            List<PremiseNumberSuffixElement> lhsPremiseNumberSuffix;
            lhsPremiseNumberSuffix = (this.isSetPremiseNumberSuffix()?this.getPremiseNumberSuffix():null);
            List<PremiseNumberSuffixElement> rhsPremiseNumberSuffix;
            rhsPremiseNumberSuffix = (that.isSetPremiseNumberSuffix()?that.getPremiseNumberSuffix():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "premiseNumberSuffix", lhsPremiseNumberSuffix), LocatorUtils.property(thatLocator, "premiseNumberSuffix", rhsPremiseNumberSuffix), lhsPremiseNumberSuffix, rhsPremiseNumberSuffix)) {
                return false;
            }
        }
        {
            List<BuildingNameType> lhsBuildingName;
            lhsBuildingName = (this.isSetBuildingName()?this.getBuildingName():null);
            List<BuildingNameType> rhsBuildingName;
            rhsBuildingName = (that.isSetBuildingName()?that.getBuildingName():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "buildingName", lhsBuildingName), LocatorUtils.property(thatLocator, "buildingName", rhsBuildingName), lhsBuildingName, rhsBuildingName)) {
                return false;
            }
        }
        {
            List<SubPremiseType> lhsSubPremise;
            lhsSubPremise = (this.isSetSubPremise()?this.getSubPremise():null);
            List<SubPremiseType> rhsSubPremise;
            rhsSubPremise = (that.isSetSubPremise()?that.getSubPremise():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "subPremise", lhsSubPremise), LocatorUtils.property(thatLocator, "subPremise", rhsSubPremise), lhsSubPremise, rhsSubPremise)) {
                return false;
            }
        }
        {
            FirmType lhsFirm;
            lhsFirm = this.getFirm();
            FirmType rhsFirm;
            rhsFirm = that.getFirm();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "firm", lhsFirm), LocatorUtils.property(thatLocator, "firm", rhsFirm), lhsFirm, rhsFirm)) {
                return false;
            }
        }
        {
            MailStopType lhsMailStop;
            lhsMailStop = this.getMailStop();
            MailStopType rhsMailStop;
            rhsMailStop = that.getMailStop();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "mailStop", lhsMailStop), LocatorUtils.property(thatLocator, "mailStop", rhsMailStop), lhsMailStop, rhsMailStop)) {
                return false;
            }
        }
        {
            PostalCodeElement lhsPostalCode;
            lhsPostalCode = this.getPostalCode();
            PostalCodeElement rhsPostalCode;
            rhsPostalCode = that.getPostalCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "postalCode", lhsPostalCode), LocatorUtils.property(thatLocator, "postalCode", rhsPostalCode), lhsPostalCode, rhsPostalCode)) {
                return false;
            }
        }
        {
            PremiseElement lhsPremise;
            lhsPremise = this.getPremise();
            PremiseElement rhsPremise;
            rhsPremise = that.getPremise();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "premise", lhsPremise), LocatorUtils.property(thatLocator, "premise", rhsPremise), lhsPremise, rhsPremise)) {
                return false;
            }
        }
        {
            List<Object> lhsAny;
            lhsAny = (this.isSetAny()?this.getAny():null);
            List<Object> rhsAny;
            rhsAny = (that.isSetAny()?that.getAny():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "any", lhsAny), LocatorUtils.property(thatLocator, "any", rhsAny), lhsAny, rhsAny)) {
                return false;
            }
        }
        {
            String lhsType;
            lhsType = this.getType();
            String rhsType;
            rhsType = that.getType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "type", lhsType), LocatorUtils.property(thatLocator, "type", rhsType), lhsType, rhsType)) {
                return false;
            }
        }
        {
            String lhsPremiseDependency;
            lhsPremiseDependency = this.getPremiseDependency();
            String rhsPremiseDependency;
            rhsPremiseDependency = that.getPremiseDependency();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "premiseDependency", lhsPremiseDependency), LocatorUtils.property(thatLocator, "premiseDependency", rhsPremiseDependency), lhsPremiseDependency, rhsPremiseDependency)) {
                return false;
            }
        }
        {
            String lhsPremiseDependencyType;
            lhsPremiseDependencyType = this.getPremiseDependencyType();
            String rhsPremiseDependencyType;
            rhsPremiseDependencyType = that.getPremiseDependencyType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "premiseDependencyType", lhsPremiseDependencyType), LocatorUtils.property(thatLocator, "premiseDependencyType", rhsPremiseDependencyType), lhsPremiseDependencyType, rhsPremiseDependencyType)) {
                return false;
            }
        }
        {
            String lhsPremiseThoroughfareConnector;
            lhsPremiseThoroughfareConnector = this.getPremiseThoroughfareConnector();
            String rhsPremiseThoroughfareConnector;
            rhsPremiseThoroughfareConnector = that.getPremiseThoroughfareConnector();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "premiseThoroughfareConnector", lhsPremiseThoroughfareConnector), LocatorUtils.property(thatLocator, "premiseThoroughfareConnector", rhsPremiseThoroughfareConnector), lhsPremiseThoroughfareConnector, rhsPremiseThoroughfareConnector)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            List<AddressLineElement> theAddressLine;
            theAddressLine = (this.isSetAddressLine()?this.getAddressLine():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "addressLine", theAddressLine), currentHashCode, theAddressLine);
        }
        {
            List<PremiseElement.PremiseName> thePremiseName;
            thePremiseName = (this.isSetPremiseName()?this.getPremiseName():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "premiseName", thePremiseName), currentHashCode, thePremiseName);
        }
        {
            PremiseElement.PremiseLocation thePremiseLocation;
            thePremiseLocation = this.getPremiseLocation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "premiseLocation", thePremiseLocation), currentHashCode, thePremiseLocation);
        }
        {
            List<PremiseNumberElement> thePremiseNumber;
            thePremiseNumber = (this.isSetPremiseNumber()?this.getPremiseNumber():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "premiseNumber", thePremiseNumber), currentHashCode, thePremiseNumber);
        }
        {
            PremiseElement.PremiseNumberRange thePremiseNumberRange;
            thePremiseNumberRange = this.getPremiseNumberRange();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "premiseNumberRange", thePremiseNumberRange), currentHashCode, thePremiseNumberRange);
        }
        {
            List<PremiseNumberPrefixElement> thePremiseNumberPrefix;
            thePremiseNumberPrefix = (this.isSetPremiseNumberPrefix()?this.getPremiseNumberPrefix():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "premiseNumberPrefix", thePremiseNumberPrefix), currentHashCode, thePremiseNumberPrefix);
        }
        {
            List<PremiseNumberSuffixElement> thePremiseNumberSuffix;
            thePremiseNumberSuffix = (this.isSetPremiseNumberSuffix()?this.getPremiseNumberSuffix():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "premiseNumberSuffix", thePremiseNumberSuffix), currentHashCode, thePremiseNumberSuffix);
        }
        {
            List<BuildingNameType> theBuildingName;
            theBuildingName = (this.isSetBuildingName()?this.getBuildingName():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "buildingName", theBuildingName), currentHashCode, theBuildingName);
        }
        {
            List<SubPremiseType> theSubPremise;
            theSubPremise = (this.isSetSubPremise()?this.getSubPremise():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "subPremise", theSubPremise), currentHashCode, theSubPremise);
        }
        {
            FirmType theFirm;
            theFirm = this.getFirm();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "firm", theFirm), currentHashCode, theFirm);
        }
        {
            MailStopType theMailStop;
            theMailStop = this.getMailStop();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "mailStop", theMailStop), currentHashCode, theMailStop);
        }
        {
            PostalCodeElement thePostalCode;
            thePostalCode = this.getPostalCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "postalCode", thePostalCode), currentHashCode, thePostalCode);
        }
        {
            PremiseElement thePremise;
            thePremise = this.getPremise();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "premise", thePremise), currentHashCode, thePremise);
        }
        {
            List<Object> theAny;
            theAny = (this.isSetAny()?this.getAny():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "any", theAny), currentHashCode, theAny);
        }
        {
            String theType;
            theType = this.getType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "type", theType), currentHashCode, theType);
        }
        {
            String thePremiseDependency;
            thePremiseDependency = this.getPremiseDependency();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "premiseDependency", thePremiseDependency), currentHashCode, thePremiseDependency);
        }
        {
            String thePremiseDependencyType;
            thePremiseDependencyType = this.getPremiseDependencyType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "premiseDependencyType", thePremiseDependencyType), currentHashCode, thePremiseDependencyType);
        }
        {
            String thePremiseThoroughfareConnector;
            thePremiseThoroughfareConnector = this.getPremiseThoroughfareConnector();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "premiseThoroughfareConnector", thePremiseThoroughfareConnector), currentHashCode, thePremiseThoroughfareConnector);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof PremiseElement) {
            final PremiseElement copy = ((PremiseElement) draftCopy);
            if (this.isSetAddressLine()) {
                List<AddressLineElement> sourceAddressLine;
                sourceAddressLine = (this.isSetAddressLine()?this.getAddressLine():null);
                @SuppressWarnings("unchecked")
                List<AddressLineElement> copyAddressLine = ((List<AddressLineElement> ) strategy.copy(LocatorUtils.property(locator, "addressLine", sourceAddressLine), sourceAddressLine));
                copy.unsetAddressLine();
                if (copyAddressLine!= null) {
                    List<AddressLineElement> uniqueAddressLinel = copy.getAddressLine();
                    uniqueAddressLinel.addAll(copyAddressLine);
                }
            } else {
                copy.unsetAddressLine();
            }
            if (this.isSetPremiseName()) {
                List<PremiseElement.PremiseName> sourcePremiseName;
                sourcePremiseName = (this.isSetPremiseName()?this.getPremiseName():null);
                @SuppressWarnings("unchecked")
                List<PremiseElement.PremiseName> copyPremiseName = ((List<PremiseElement.PremiseName> ) strategy.copy(LocatorUtils.property(locator, "premiseName", sourcePremiseName), sourcePremiseName));
                copy.unsetPremiseName();
                if (copyPremiseName!= null) {
                    List<PremiseElement.PremiseName> uniquePremiseNamel = copy.getPremiseName();
                    uniquePremiseNamel.addAll(copyPremiseName);
                }
            } else {
                copy.unsetPremiseName();
            }
            if (this.isSetPremiseLocation()) {
                PremiseElement.PremiseLocation sourcePremiseLocation;
                sourcePremiseLocation = this.getPremiseLocation();
                PremiseElement.PremiseLocation copyPremiseLocation = ((PremiseElement.PremiseLocation) strategy.copy(LocatorUtils.property(locator, "premiseLocation", sourcePremiseLocation), sourcePremiseLocation));
                copy.setPremiseLocation(copyPremiseLocation);
            } else {
                copy.premiseLocation = null;
            }
            if (this.isSetPremiseNumber()) {
                List<PremiseNumberElement> sourcePremiseNumber;
                sourcePremiseNumber = (this.isSetPremiseNumber()?this.getPremiseNumber():null);
                @SuppressWarnings("unchecked")
                List<PremiseNumberElement> copyPremiseNumber = ((List<PremiseNumberElement> ) strategy.copy(LocatorUtils.property(locator, "premiseNumber", sourcePremiseNumber), sourcePremiseNumber));
                copy.unsetPremiseNumber();
                if (copyPremiseNumber!= null) {
                    List<PremiseNumberElement> uniquePremiseNumberl = copy.getPremiseNumber();
                    uniquePremiseNumberl.addAll(copyPremiseNumber);
                }
            } else {
                copy.unsetPremiseNumber();
            }
            if (this.isSetPremiseNumberRange()) {
                PremiseElement.PremiseNumberRange sourcePremiseNumberRange;
                sourcePremiseNumberRange = this.getPremiseNumberRange();
                PremiseElement.PremiseNumberRange copyPremiseNumberRange = ((PremiseElement.PremiseNumberRange) strategy.copy(LocatorUtils.property(locator, "premiseNumberRange", sourcePremiseNumberRange), sourcePremiseNumberRange));
                copy.setPremiseNumberRange(copyPremiseNumberRange);
            } else {
                copy.premiseNumberRange = null;
            }
            if (this.isSetPremiseNumberPrefix()) {
                List<PremiseNumberPrefixElement> sourcePremiseNumberPrefix;
                sourcePremiseNumberPrefix = (this.isSetPremiseNumberPrefix()?this.getPremiseNumberPrefix():null);
                @SuppressWarnings("unchecked")
                List<PremiseNumberPrefixElement> copyPremiseNumberPrefix = ((List<PremiseNumberPrefixElement> ) strategy.copy(LocatorUtils.property(locator, "premiseNumberPrefix", sourcePremiseNumberPrefix), sourcePremiseNumberPrefix));
                copy.unsetPremiseNumberPrefix();
                if (copyPremiseNumberPrefix!= null) {
                    List<PremiseNumberPrefixElement> uniquePremiseNumberPrefixl = copy.getPremiseNumberPrefix();
                    uniquePremiseNumberPrefixl.addAll(copyPremiseNumberPrefix);
                }
            } else {
                copy.unsetPremiseNumberPrefix();
            }
            if (this.isSetPremiseNumberSuffix()) {
                List<PremiseNumberSuffixElement> sourcePremiseNumberSuffix;
                sourcePremiseNumberSuffix = (this.isSetPremiseNumberSuffix()?this.getPremiseNumberSuffix():null);
                @SuppressWarnings("unchecked")
                List<PremiseNumberSuffixElement> copyPremiseNumberSuffix = ((List<PremiseNumberSuffixElement> ) strategy.copy(LocatorUtils.property(locator, "premiseNumberSuffix", sourcePremiseNumberSuffix), sourcePremiseNumberSuffix));
                copy.unsetPremiseNumberSuffix();
                if (copyPremiseNumberSuffix!= null) {
                    List<PremiseNumberSuffixElement> uniquePremiseNumberSuffixl = copy.getPremiseNumberSuffix();
                    uniquePremiseNumberSuffixl.addAll(copyPremiseNumberSuffix);
                }
            } else {
                copy.unsetPremiseNumberSuffix();
            }
            if (this.isSetBuildingName()) {
                List<BuildingNameType> sourceBuildingName;
                sourceBuildingName = (this.isSetBuildingName()?this.getBuildingName():null);
                @SuppressWarnings("unchecked")
                List<BuildingNameType> copyBuildingName = ((List<BuildingNameType> ) strategy.copy(LocatorUtils.property(locator, "buildingName", sourceBuildingName), sourceBuildingName));
                copy.unsetBuildingName();
                if (copyBuildingName!= null) {
                    List<BuildingNameType> uniqueBuildingNamel = copy.getBuildingName();
                    uniqueBuildingNamel.addAll(copyBuildingName);
                }
            } else {
                copy.unsetBuildingName();
            }
            if (this.isSetSubPremise()) {
                List<SubPremiseType> sourceSubPremise;
                sourceSubPremise = (this.isSetSubPremise()?this.getSubPremise():null);
                @SuppressWarnings("unchecked")
                List<SubPremiseType> copySubPremise = ((List<SubPremiseType> ) strategy.copy(LocatorUtils.property(locator, "subPremise", sourceSubPremise), sourceSubPremise));
                copy.unsetSubPremise();
                if (copySubPremise!= null) {
                    List<SubPremiseType> uniqueSubPremisel = copy.getSubPremise();
                    uniqueSubPremisel.addAll(copySubPremise);
                }
            } else {
                copy.unsetSubPremise();
            }
            if (this.isSetFirm()) {
                FirmType sourceFirm;
                sourceFirm = this.getFirm();
                FirmType copyFirm = ((FirmType) strategy.copy(LocatorUtils.property(locator, "firm", sourceFirm), sourceFirm));
                copy.setFirm(copyFirm);
            } else {
                copy.firm = null;
            }
            if (this.isSetMailStop()) {
                MailStopType sourceMailStop;
                sourceMailStop = this.getMailStop();
                MailStopType copyMailStop = ((MailStopType) strategy.copy(LocatorUtils.property(locator, "mailStop", sourceMailStop), sourceMailStop));
                copy.setMailStop(copyMailStop);
            } else {
                copy.mailStop = null;
            }
            if (this.isSetPostalCode()) {
                PostalCodeElement sourcePostalCode;
                sourcePostalCode = this.getPostalCode();
                PostalCodeElement copyPostalCode = ((PostalCodeElement) strategy.copy(LocatorUtils.property(locator, "postalCode", sourcePostalCode), sourcePostalCode));
                copy.setPostalCode(copyPostalCode);
            } else {
                copy.postalCode = null;
            }
            if (this.isSetPremise()) {
                PremiseElement sourcePremise;
                sourcePremise = this.getPremise();
                PremiseElement copyPremise = ((PremiseElement) strategy.copy(LocatorUtils.property(locator, "premise", sourcePremise), sourcePremise));
                copy.setPremise(copyPremise);
            } else {
                copy.premise = null;
            }
            if (this.isSetAny()) {
                List<Object> sourceAny;
                sourceAny = (this.isSetAny()?this.getAny():null);
                @SuppressWarnings("unchecked")
                List<Object> copyAny = ((List<Object> ) strategy.copy(LocatorUtils.property(locator, "any", sourceAny), sourceAny));
                copy.unsetAny();
                if (copyAny!= null) {
                    List<Object> uniqueAnyl = copy.getAny();
                    uniqueAnyl.addAll(copyAny);
                }
            } else {
                copy.unsetAny();
            }
            if (this.isSetType()) {
                String sourceType;
                sourceType = this.getType();
                String copyType = ((String) strategy.copy(LocatorUtils.property(locator, "type", sourceType), sourceType));
                copy.setType(copyType);
            } else {
                copy.type = null;
            }
            if (this.isSetPremiseDependency()) {
                String sourcePremiseDependency;
                sourcePremiseDependency = this.getPremiseDependency();
                String copyPremiseDependency = ((String) strategy.copy(LocatorUtils.property(locator, "premiseDependency", sourcePremiseDependency), sourcePremiseDependency));
                copy.setPremiseDependency(copyPremiseDependency);
            } else {
                copy.premiseDependency = null;
            }
            if (this.isSetPremiseDependencyType()) {
                String sourcePremiseDependencyType;
                sourcePremiseDependencyType = this.getPremiseDependencyType();
                String copyPremiseDependencyType = ((String) strategy.copy(LocatorUtils.property(locator, "premiseDependencyType", sourcePremiseDependencyType), sourcePremiseDependencyType));
                copy.setPremiseDependencyType(copyPremiseDependencyType);
            } else {
                copy.premiseDependencyType = null;
            }
            if (this.isSetPremiseThoroughfareConnector()) {
                String sourcePremiseThoroughfareConnector;
                sourcePremiseThoroughfareConnector = this.getPremiseThoroughfareConnector();
                String copyPremiseThoroughfareConnector = ((String) strategy.copy(LocatorUtils.property(locator, "premiseThoroughfareConnector", sourcePremiseThoroughfareConnector), sourcePremiseThoroughfareConnector));
                copy.setPremiseThoroughfareConnector(copyPremiseThoroughfareConnector);
            } else {
                copy.premiseThoroughfareConnector = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new PremiseElement();
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
     *       &lt;anyAttribute namespace='##other'/&gt;
     *     &lt;/restriction&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "content"
    })
    public static class PremiseLocation
        implements Cloneable, CopyTo, Equals, HashCode, ToString
    {

        @XmlValue
        protected String content;
        @XmlAttribute(name = "Code")
        @XmlSchemaType(name = "anySimpleType")
        protected String code;
        @XmlAnyAttribute
        private Map<QName, String> otherAttributes = new HashMap<QName, String>();

        /**
         * Gets the value of the content property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getContent() {
            return content;
        }

        /**
         * Sets the value of the content property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setContent(String value) {
            this.content = value;
        }

        public boolean isSetContent() {
            return (this.content!= null);
        }

        /**
         * Gets the value of the code property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getCode() {
            return code;
        }

        /**
         * Sets the value of the code property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setCode(String value) {
            this.code = value;
        }

        public boolean isSetCode() {
            return (this.code!= null);
        }

        /**
         * Gets a map that contains attributes that aren't bound to any typed property on this class.
         * 
         * <p>
         * the map is keyed by the name of the attribute and 
         * the value is the string value of the attribute.
         * 
         * the map returned by this method is live, and you can add new attribute
         * by updating the map directly. Because of this design, there's no setter.
         * 
         * 
         * @return
         *     always non-null
         */
        public Map<QName, String> getOtherAttributes() {
            return otherAttributes;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                String theContent;
                theContent = this.getContent();
                strategy.appendField(locator, this, "content", buffer, theContent);
            }
            {
                String theCode;
                theCode = this.getCode();
                strategy.appendField(locator, this, "code", buffer, theCode);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof PremiseElement.PremiseLocation)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final PremiseElement.PremiseLocation that = ((PremiseElement.PremiseLocation) object);
            {
                String lhsContent;
                lhsContent = this.getContent();
                String rhsContent;
                rhsContent = that.getContent();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "content", lhsContent), LocatorUtils.property(thatLocator, "content", rhsContent), lhsContent, rhsContent)) {
                    return false;
                }
            }
            {
                String lhsCode;
                lhsCode = this.getCode();
                String rhsCode;
                rhsCode = that.getCode();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "code", lhsCode), LocatorUtils.property(thatLocator, "code", rhsCode), lhsCode, rhsCode)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                String theContent;
                theContent = this.getContent();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "content", theContent), currentHashCode, theContent);
            }
            {
                String theCode;
                theCode = this.getCode();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "code", theCode), currentHashCode, theCode);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public Object clone() {
            return copyTo(createNewInstance());
        }

        public Object copyTo(Object target) {
            final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
            return copyTo(null, target, strategy);
        }

        public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
            final Object draftCopy = ((target == null)?createNewInstance():target);
            if (draftCopy instanceof PremiseElement.PremiseLocation) {
                final PremiseElement.PremiseLocation copy = ((PremiseElement.PremiseLocation) draftCopy);
                if (this.isSetContent()) {
                    String sourceContent;
                    sourceContent = this.getContent();
                    String copyContent = ((String) strategy.copy(LocatorUtils.property(locator, "content", sourceContent), sourceContent));
                    copy.setContent(copyContent);
                } else {
                    copy.content = null;
                }
                if (this.isSetCode()) {
                    String sourceCode;
                    sourceCode = this.getCode();
                    String copyCode = ((String) strategy.copy(LocatorUtils.property(locator, "code", sourceCode), sourceCode));
                    copy.setCode(copyCode);
                } else {
                    copy.code = null;
                }
            }
            return draftCopy;
        }

        public Object createNewInstance() {
            return new PremiseElement.PremiseLocation();
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
     *       &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
     *       &lt;attribute name="TypeOccurrence"&gt;
     *         &lt;simpleType&gt;
     *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN"&gt;
     *             &lt;enumeration value="Before"/&gt;
     *             &lt;enumeration value="After"/&gt;
     *           &lt;/restriction&gt;
     *         &lt;/simpleType&gt;
     *       &lt;/attribute&gt;
     *       &lt;anyAttribute namespace='##other'/&gt;
     *     &lt;/restriction&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "content"
    })
    public static class PremiseName
        implements Cloneable, CopyTo, Equals, HashCode, ToString
    {

        @XmlValue
        protected String content;
        @XmlAttribute(name = "Type")
        @XmlSchemaType(name = "anySimpleType")
        protected String type;
        @XmlAttribute(name = "TypeOccurrence")
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        protected String typeOccurrence;
        @XmlAttribute(name = "Code")
        @XmlSchemaType(name = "anySimpleType")
        protected String code;
        @XmlAnyAttribute
        private Map<QName, String> otherAttributes = new HashMap<QName, String>();

        /**
         * Gets the value of the content property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getContent() {
            return content;
        }

        /**
         * Sets the value of the content property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setContent(String value) {
            this.content = value;
        }

        public boolean isSetContent() {
            return (this.content!= null);
        }

        /**
         * Gets the value of the type property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getType() {
            return type;
        }

        /**
         * Sets the value of the type property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setType(String value) {
            this.type = value;
        }

        public boolean isSetType() {
            return (this.type!= null);
        }

        /**
         * Gets the value of the typeOccurrence property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getTypeOccurrence() {
            return typeOccurrence;
        }

        /**
         * Sets the value of the typeOccurrence property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setTypeOccurrence(String value) {
            this.typeOccurrence = value;
        }

        public boolean isSetTypeOccurrence() {
            return (this.typeOccurrence!= null);
        }

        /**
         * Gets the value of the code property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getCode() {
            return code;
        }

        /**
         * Sets the value of the code property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setCode(String value) {
            this.code = value;
        }

        public boolean isSetCode() {
            return (this.code!= null);
        }

        /**
         * Gets a map that contains attributes that aren't bound to any typed property on this class.
         * 
         * <p>
         * the map is keyed by the name of the attribute and 
         * the value is the string value of the attribute.
         * 
         * the map returned by this method is live, and you can add new attribute
         * by updating the map directly. Because of this design, there's no setter.
         * 
         * 
         * @return
         *     always non-null
         */
        public Map<QName, String> getOtherAttributes() {
            return otherAttributes;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                String theContent;
                theContent = this.getContent();
                strategy.appendField(locator, this, "content", buffer, theContent);
            }
            {
                String theType;
                theType = this.getType();
                strategy.appendField(locator, this, "type", buffer, theType);
            }
            {
                String theTypeOccurrence;
                theTypeOccurrence = this.getTypeOccurrence();
                strategy.appendField(locator, this, "typeOccurrence", buffer, theTypeOccurrence);
            }
            {
                String theCode;
                theCode = this.getCode();
                strategy.appendField(locator, this, "code", buffer, theCode);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof PremiseElement.PremiseName)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final PremiseElement.PremiseName that = ((PremiseElement.PremiseName) object);
            {
                String lhsContent;
                lhsContent = this.getContent();
                String rhsContent;
                rhsContent = that.getContent();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "content", lhsContent), LocatorUtils.property(thatLocator, "content", rhsContent), lhsContent, rhsContent)) {
                    return false;
                }
            }
            {
                String lhsType;
                lhsType = this.getType();
                String rhsType;
                rhsType = that.getType();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "type", lhsType), LocatorUtils.property(thatLocator, "type", rhsType), lhsType, rhsType)) {
                    return false;
                }
            }
            {
                String lhsTypeOccurrence;
                lhsTypeOccurrence = this.getTypeOccurrence();
                String rhsTypeOccurrence;
                rhsTypeOccurrence = that.getTypeOccurrence();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "typeOccurrence", lhsTypeOccurrence), LocatorUtils.property(thatLocator, "typeOccurrence", rhsTypeOccurrence), lhsTypeOccurrence, rhsTypeOccurrence)) {
                    return false;
                }
            }
            {
                String lhsCode;
                lhsCode = this.getCode();
                String rhsCode;
                rhsCode = that.getCode();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "code", lhsCode), LocatorUtils.property(thatLocator, "code", rhsCode), lhsCode, rhsCode)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                String theContent;
                theContent = this.getContent();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "content", theContent), currentHashCode, theContent);
            }
            {
                String theType;
                theType = this.getType();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "type", theType), currentHashCode, theType);
            }
            {
                String theTypeOccurrence;
                theTypeOccurrence = this.getTypeOccurrence();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "typeOccurrence", theTypeOccurrence), currentHashCode, theTypeOccurrence);
            }
            {
                String theCode;
                theCode = this.getCode();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "code", theCode), currentHashCode, theCode);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public Object clone() {
            return copyTo(createNewInstance());
        }

        public Object copyTo(Object target) {
            final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
            return copyTo(null, target, strategy);
        }

        public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
            final Object draftCopy = ((target == null)?createNewInstance():target);
            if (draftCopy instanceof PremiseElement.PremiseName) {
                final PremiseElement.PremiseName copy = ((PremiseElement.PremiseName) draftCopy);
                if (this.isSetContent()) {
                    String sourceContent;
                    sourceContent = this.getContent();
                    String copyContent = ((String) strategy.copy(LocatorUtils.property(locator, "content", sourceContent), sourceContent));
                    copy.setContent(copyContent);
                } else {
                    copy.content = null;
                }
                if (this.isSetType()) {
                    String sourceType;
                    sourceType = this.getType();
                    String copyType = ((String) strategy.copy(LocatorUtils.property(locator, "type", sourceType), sourceType));
                    copy.setType(copyType);
                } else {
                    copy.type = null;
                }
                if (this.isSetTypeOccurrence()) {
                    String sourceTypeOccurrence;
                    sourceTypeOccurrence = this.getTypeOccurrence();
                    String copyTypeOccurrence = ((String) strategy.copy(LocatorUtils.property(locator, "typeOccurrence", sourceTypeOccurrence), sourceTypeOccurrence));
                    copy.setTypeOccurrence(copyTypeOccurrence);
                } else {
                    copy.typeOccurrence = null;
                }
                if (this.isSetCode()) {
                    String sourceCode;
                    sourceCode = this.getCode();
                    String copyCode = ((String) strategy.copy(LocatorUtils.property(locator, "code", sourceCode), sourceCode));
                    copy.setCode(copyCode);
                } else {
                    copy.code = null;
                }
            }
            return draftCopy;
        }

        public Object createNewInstance() {
            return new PremiseElement.PremiseName();
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;sequence&gt;
     *         &lt;element name="PremiseNumberRangeFrom"&gt;
     *           &lt;complexType&gt;
     *             &lt;complexContent&gt;
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                 &lt;sequence&gt;
     *                   &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}AddressLine" maxOccurs="unbounded" minOccurs="0"/&gt;
     *                   &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}PremiseNumberPrefix" maxOccurs="unbounded" minOccurs="0"/&gt;
     *                   &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}PremiseNumber" maxOccurs="unbounded"/&gt;
     *                   &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}PremiseNumberSuffix" maxOccurs="unbounded" minOccurs="0"/&gt;
     *                 &lt;/sequence&gt;
     *               &lt;/restriction&gt;
     *             &lt;/complexContent&gt;
     *           &lt;/complexType&gt;
     *         &lt;/element&gt;
     *         &lt;element name="PremiseNumberRangeTo"&gt;
     *           &lt;complexType&gt;
     *             &lt;complexContent&gt;
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                 &lt;sequence&gt;
     *                   &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}AddressLine" maxOccurs="unbounded" minOccurs="0"/&gt;
     *                   &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}PremiseNumberPrefix" maxOccurs="unbounded" minOccurs="0"/&gt;
     *                   &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}PremiseNumber" maxOccurs="unbounded"/&gt;
     *                   &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}PremiseNumberSuffix" maxOccurs="unbounded" minOccurs="0"/&gt;
     *                 &lt;/sequence&gt;
     *               &lt;/restriction&gt;
     *             &lt;/complexContent&gt;
     *           &lt;/complexType&gt;
     *         &lt;/element&gt;
     *       &lt;/sequence&gt;
     *       &lt;attribute name="RangeType" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
     *       &lt;attribute name="Indicator" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
     *       &lt;attribute name="Separator" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
     *       &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
     *       &lt;attribute name="IndicatorOccurence"&gt;
     *         &lt;simpleType&gt;
     *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN"&gt;
     *             &lt;enumeration value="Before"/&gt;
     *             &lt;enumeration value="After"/&gt;
     *           &lt;/restriction&gt;
     *         &lt;/simpleType&gt;
     *       &lt;/attribute&gt;
     *       &lt;attribute name="NumberRangeOccurence"&gt;
     *         &lt;simpleType&gt;
     *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN"&gt;
     *             &lt;enumeration value="BeforeName"/&gt;
     *             &lt;enumeration value="AfterName"/&gt;
     *             &lt;enumeration value="BeforeType"/&gt;
     *             &lt;enumeration value="AfterType"/&gt;
     *           &lt;/restriction&gt;
     *         &lt;/simpleType&gt;
     *       &lt;/attribute&gt;
     *     &lt;/restriction&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "premiseNumberRangeFrom",
        "premiseNumberRangeTo"
    })
    public static class PremiseNumberRange
        implements Cloneable, CopyTo, Equals, HashCode, ToString
    {

        @XmlElement(name = "PremiseNumberRangeFrom", required = true)
        protected PremiseElement.PremiseNumberRange.PremiseNumberRangeFrom premiseNumberRangeFrom;
        @XmlElement(name = "PremiseNumberRangeTo", required = true)
        protected PremiseElement.PremiseNumberRange.PremiseNumberRangeTo premiseNumberRangeTo;
        @XmlAttribute(name = "RangeType")
        @XmlSchemaType(name = "anySimpleType")
        protected String rangeType;
        @XmlAttribute(name = "Indicator")
        @XmlSchemaType(name = "anySimpleType")
        protected String indicator;
        @XmlAttribute(name = "Separator")
        @XmlSchemaType(name = "anySimpleType")
        protected String separator;
        @XmlAttribute(name = "Type")
        @XmlSchemaType(name = "anySimpleType")
        protected String type;
        @XmlAttribute(name = "IndicatorOccurence")
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        protected String indicatorOccurence;
        @XmlAttribute(name = "NumberRangeOccurence")
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        protected String numberRangeOccurence;

        /**
         * Gets the value of the premiseNumberRangeFrom property.
         * 
         * @return
         *     possible object is
         *     {@link PremiseElement.PremiseNumberRange.PremiseNumberRangeFrom }
         *     
         */
        public PremiseElement.PremiseNumberRange.PremiseNumberRangeFrom getPremiseNumberRangeFrom() {
            return premiseNumberRangeFrom;
        }

        /**
         * Sets the value of the premiseNumberRangeFrom property.
         * 
         * @param value
         *     allowed object is
         *     {@link PremiseElement.PremiseNumberRange.PremiseNumberRangeFrom }
         *     
         */
        public void setPremiseNumberRangeFrom(PremiseElement.PremiseNumberRange.PremiseNumberRangeFrom value) {
            this.premiseNumberRangeFrom = value;
        }

        public boolean isSetPremiseNumberRangeFrom() {
            return (this.premiseNumberRangeFrom!= null);
        }

        /**
         * Gets the value of the premiseNumberRangeTo property.
         * 
         * @return
         *     possible object is
         *     {@link PremiseElement.PremiseNumberRange.PremiseNumberRangeTo }
         *     
         */
        public PremiseElement.PremiseNumberRange.PremiseNumberRangeTo getPremiseNumberRangeTo() {
            return premiseNumberRangeTo;
        }

        /**
         * Sets the value of the premiseNumberRangeTo property.
         * 
         * @param value
         *     allowed object is
         *     {@link PremiseElement.PremiseNumberRange.PremiseNumberRangeTo }
         *     
         */
        public void setPremiseNumberRangeTo(PremiseElement.PremiseNumberRange.PremiseNumberRangeTo value) {
            this.premiseNumberRangeTo = value;
        }

        public boolean isSetPremiseNumberRangeTo() {
            return (this.premiseNumberRangeTo!= null);
        }

        /**
         * Gets the value of the rangeType property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getRangeType() {
            return rangeType;
        }

        /**
         * Sets the value of the rangeType property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setRangeType(String value) {
            this.rangeType = value;
        }

        public boolean isSetRangeType() {
            return (this.rangeType!= null);
        }

        /**
         * Gets the value of the indicator property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getIndicator() {
            return indicator;
        }

        /**
         * Sets the value of the indicator property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setIndicator(String value) {
            this.indicator = value;
        }

        public boolean isSetIndicator() {
            return (this.indicator!= null);
        }

        /**
         * Gets the value of the separator property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getSeparator() {
            return separator;
        }

        /**
         * Sets the value of the separator property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setSeparator(String value) {
            this.separator = value;
        }

        public boolean isSetSeparator() {
            return (this.separator!= null);
        }

        /**
         * Gets the value of the type property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getType() {
            return type;
        }

        /**
         * Sets the value of the type property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setType(String value) {
            this.type = value;
        }

        public boolean isSetType() {
            return (this.type!= null);
        }

        /**
         * Gets the value of the indicatorOccurence property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getIndicatorOccurence() {
            return indicatorOccurence;
        }

        /**
         * Sets the value of the indicatorOccurence property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setIndicatorOccurence(String value) {
            this.indicatorOccurence = value;
        }

        public boolean isSetIndicatorOccurence() {
            return (this.indicatorOccurence!= null);
        }

        /**
         * Gets the value of the numberRangeOccurence property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getNumberRangeOccurence() {
            return numberRangeOccurence;
        }

        /**
         * Sets the value of the numberRangeOccurence property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setNumberRangeOccurence(String value) {
            this.numberRangeOccurence = value;
        }

        public boolean isSetNumberRangeOccurence() {
            return (this.numberRangeOccurence!= null);
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                PremiseElement.PremiseNumberRange.PremiseNumberRangeFrom thePremiseNumberRangeFrom;
                thePremiseNumberRangeFrom = this.getPremiseNumberRangeFrom();
                strategy.appendField(locator, this, "premiseNumberRangeFrom", buffer, thePremiseNumberRangeFrom);
            }
            {
                PremiseElement.PremiseNumberRange.PremiseNumberRangeTo thePremiseNumberRangeTo;
                thePremiseNumberRangeTo = this.getPremiseNumberRangeTo();
                strategy.appendField(locator, this, "premiseNumberRangeTo", buffer, thePremiseNumberRangeTo);
            }
            {
                String theRangeType;
                theRangeType = this.getRangeType();
                strategy.appendField(locator, this, "rangeType", buffer, theRangeType);
            }
            {
                String theIndicator;
                theIndicator = this.getIndicator();
                strategy.appendField(locator, this, "indicator", buffer, theIndicator);
            }
            {
                String theSeparator;
                theSeparator = this.getSeparator();
                strategy.appendField(locator, this, "separator", buffer, theSeparator);
            }
            {
                String theType;
                theType = this.getType();
                strategy.appendField(locator, this, "type", buffer, theType);
            }
            {
                String theIndicatorOccurence;
                theIndicatorOccurence = this.getIndicatorOccurence();
                strategy.appendField(locator, this, "indicatorOccurence", buffer, theIndicatorOccurence);
            }
            {
                String theNumberRangeOccurence;
                theNumberRangeOccurence = this.getNumberRangeOccurence();
                strategy.appendField(locator, this, "numberRangeOccurence", buffer, theNumberRangeOccurence);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof PremiseElement.PremiseNumberRange)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final PremiseElement.PremiseNumberRange that = ((PremiseElement.PremiseNumberRange) object);
            {
                PremiseElement.PremiseNumberRange.PremiseNumberRangeFrom lhsPremiseNumberRangeFrom;
                lhsPremiseNumberRangeFrom = this.getPremiseNumberRangeFrom();
                PremiseElement.PremiseNumberRange.PremiseNumberRangeFrom rhsPremiseNumberRangeFrom;
                rhsPremiseNumberRangeFrom = that.getPremiseNumberRangeFrom();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "premiseNumberRangeFrom", lhsPremiseNumberRangeFrom), LocatorUtils.property(thatLocator, "premiseNumberRangeFrom", rhsPremiseNumberRangeFrom), lhsPremiseNumberRangeFrom, rhsPremiseNumberRangeFrom)) {
                    return false;
                }
            }
            {
                PremiseElement.PremiseNumberRange.PremiseNumberRangeTo lhsPremiseNumberRangeTo;
                lhsPremiseNumberRangeTo = this.getPremiseNumberRangeTo();
                PremiseElement.PremiseNumberRange.PremiseNumberRangeTo rhsPremiseNumberRangeTo;
                rhsPremiseNumberRangeTo = that.getPremiseNumberRangeTo();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "premiseNumberRangeTo", lhsPremiseNumberRangeTo), LocatorUtils.property(thatLocator, "premiseNumberRangeTo", rhsPremiseNumberRangeTo), lhsPremiseNumberRangeTo, rhsPremiseNumberRangeTo)) {
                    return false;
                }
            }
            {
                String lhsRangeType;
                lhsRangeType = this.getRangeType();
                String rhsRangeType;
                rhsRangeType = that.getRangeType();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "rangeType", lhsRangeType), LocatorUtils.property(thatLocator, "rangeType", rhsRangeType), lhsRangeType, rhsRangeType)) {
                    return false;
                }
            }
            {
                String lhsIndicator;
                lhsIndicator = this.getIndicator();
                String rhsIndicator;
                rhsIndicator = that.getIndicator();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "indicator", lhsIndicator), LocatorUtils.property(thatLocator, "indicator", rhsIndicator), lhsIndicator, rhsIndicator)) {
                    return false;
                }
            }
            {
                String lhsSeparator;
                lhsSeparator = this.getSeparator();
                String rhsSeparator;
                rhsSeparator = that.getSeparator();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "separator", lhsSeparator), LocatorUtils.property(thatLocator, "separator", rhsSeparator), lhsSeparator, rhsSeparator)) {
                    return false;
                }
            }
            {
                String lhsType;
                lhsType = this.getType();
                String rhsType;
                rhsType = that.getType();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "type", lhsType), LocatorUtils.property(thatLocator, "type", rhsType), lhsType, rhsType)) {
                    return false;
                }
            }
            {
                String lhsIndicatorOccurence;
                lhsIndicatorOccurence = this.getIndicatorOccurence();
                String rhsIndicatorOccurence;
                rhsIndicatorOccurence = that.getIndicatorOccurence();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "indicatorOccurence", lhsIndicatorOccurence), LocatorUtils.property(thatLocator, "indicatorOccurence", rhsIndicatorOccurence), lhsIndicatorOccurence, rhsIndicatorOccurence)) {
                    return false;
                }
            }
            {
                String lhsNumberRangeOccurence;
                lhsNumberRangeOccurence = this.getNumberRangeOccurence();
                String rhsNumberRangeOccurence;
                rhsNumberRangeOccurence = that.getNumberRangeOccurence();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "numberRangeOccurence", lhsNumberRangeOccurence), LocatorUtils.property(thatLocator, "numberRangeOccurence", rhsNumberRangeOccurence), lhsNumberRangeOccurence, rhsNumberRangeOccurence)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                PremiseElement.PremiseNumberRange.PremiseNumberRangeFrom thePremiseNumberRangeFrom;
                thePremiseNumberRangeFrom = this.getPremiseNumberRangeFrom();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "premiseNumberRangeFrom", thePremiseNumberRangeFrom), currentHashCode, thePremiseNumberRangeFrom);
            }
            {
                PremiseElement.PremiseNumberRange.PremiseNumberRangeTo thePremiseNumberRangeTo;
                thePremiseNumberRangeTo = this.getPremiseNumberRangeTo();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "premiseNumberRangeTo", thePremiseNumberRangeTo), currentHashCode, thePremiseNumberRangeTo);
            }
            {
                String theRangeType;
                theRangeType = this.getRangeType();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rangeType", theRangeType), currentHashCode, theRangeType);
            }
            {
                String theIndicator;
                theIndicator = this.getIndicator();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "indicator", theIndicator), currentHashCode, theIndicator);
            }
            {
                String theSeparator;
                theSeparator = this.getSeparator();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "separator", theSeparator), currentHashCode, theSeparator);
            }
            {
                String theType;
                theType = this.getType();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "type", theType), currentHashCode, theType);
            }
            {
                String theIndicatorOccurence;
                theIndicatorOccurence = this.getIndicatorOccurence();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "indicatorOccurence", theIndicatorOccurence), currentHashCode, theIndicatorOccurence);
            }
            {
                String theNumberRangeOccurence;
                theNumberRangeOccurence = this.getNumberRangeOccurence();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "numberRangeOccurence", theNumberRangeOccurence), currentHashCode, theNumberRangeOccurence);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public Object clone() {
            return copyTo(createNewInstance());
        }

        public Object copyTo(Object target) {
            final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
            return copyTo(null, target, strategy);
        }

        public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
            final Object draftCopy = ((target == null)?createNewInstance():target);
            if (draftCopy instanceof PremiseElement.PremiseNumberRange) {
                final PremiseElement.PremiseNumberRange copy = ((PremiseElement.PremiseNumberRange) draftCopy);
                if (this.isSetPremiseNumberRangeFrom()) {
                    PremiseElement.PremiseNumberRange.PremiseNumberRangeFrom sourcePremiseNumberRangeFrom;
                    sourcePremiseNumberRangeFrom = this.getPremiseNumberRangeFrom();
                    PremiseElement.PremiseNumberRange.PremiseNumberRangeFrom copyPremiseNumberRangeFrom = ((PremiseElement.PremiseNumberRange.PremiseNumberRangeFrom) strategy.copy(LocatorUtils.property(locator, "premiseNumberRangeFrom", sourcePremiseNumberRangeFrom), sourcePremiseNumberRangeFrom));
                    copy.setPremiseNumberRangeFrom(copyPremiseNumberRangeFrom);
                } else {
                    copy.premiseNumberRangeFrom = null;
                }
                if (this.isSetPremiseNumberRangeTo()) {
                    PremiseElement.PremiseNumberRange.PremiseNumberRangeTo sourcePremiseNumberRangeTo;
                    sourcePremiseNumberRangeTo = this.getPremiseNumberRangeTo();
                    PremiseElement.PremiseNumberRange.PremiseNumberRangeTo copyPremiseNumberRangeTo = ((PremiseElement.PremiseNumberRange.PremiseNumberRangeTo) strategy.copy(LocatorUtils.property(locator, "premiseNumberRangeTo", sourcePremiseNumberRangeTo), sourcePremiseNumberRangeTo));
                    copy.setPremiseNumberRangeTo(copyPremiseNumberRangeTo);
                } else {
                    copy.premiseNumberRangeTo = null;
                }
                if (this.isSetRangeType()) {
                    String sourceRangeType;
                    sourceRangeType = this.getRangeType();
                    String copyRangeType = ((String) strategy.copy(LocatorUtils.property(locator, "rangeType", sourceRangeType), sourceRangeType));
                    copy.setRangeType(copyRangeType);
                } else {
                    copy.rangeType = null;
                }
                if (this.isSetIndicator()) {
                    String sourceIndicator;
                    sourceIndicator = this.getIndicator();
                    String copyIndicator = ((String) strategy.copy(LocatorUtils.property(locator, "indicator", sourceIndicator), sourceIndicator));
                    copy.setIndicator(copyIndicator);
                } else {
                    copy.indicator = null;
                }
                if (this.isSetSeparator()) {
                    String sourceSeparator;
                    sourceSeparator = this.getSeparator();
                    String copySeparator = ((String) strategy.copy(LocatorUtils.property(locator, "separator", sourceSeparator), sourceSeparator));
                    copy.setSeparator(copySeparator);
                } else {
                    copy.separator = null;
                }
                if (this.isSetType()) {
                    String sourceType;
                    sourceType = this.getType();
                    String copyType = ((String) strategy.copy(LocatorUtils.property(locator, "type", sourceType), sourceType));
                    copy.setType(copyType);
                } else {
                    copy.type = null;
                }
                if (this.isSetIndicatorOccurence()) {
                    String sourceIndicatorOccurence;
                    sourceIndicatorOccurence = this.getIndicatorOccurence();
                    String copyIndicatorOccurence = ((String) strategy.copy(LocatorUtils.property(locator, "indicatorOccurence", sourceIndicatorOccurence), sourceIndicatorOccurence));
                    copy.setIndicatorOccurence(copyIndicatorOccurence);
                } else {
                    copy.indicatorOccurence = null;
                }
                if (this.isSetNumberRangeOccurence()) {
                    String sourceNumberRangeOccurence;
                    sourceNumberRangeOccurence = this.getNumberRangeOccurence();
                    String copyNumberRangeOccurence = ((String) strategy.copy(LocatorUtils.property(locator, "numberRangeOccurence", sourceNumberRangeOccurence), sourceNumberRangeOccurence));
                    copy.setNumberRangeOccurence(copyNumberRangeOccurence);
                } else {
                    copy.numberRangeOccurence = null;
                }
            }
            return draftCopy;
        }

        public Object createNewInstance() {
            return new PremiseElement.PremiseNumberRange();
        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType&gt;
         *   &lt;complexContent&gt;
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
         *       &lt;sequence&gt;
         *         &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}AddressLine" maxOccurs="unbounded" minOccurs="0"/&gt;
         *         &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}PremiseNumberPrefix" maxOccurs="unbounded" minOccurs="0"/&gt;
         *         &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}PremiseNumber" maxOccurs="unbounded"/&gt;
         *         &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}PremiseNumberSuffix" maxOccurs="unbounded" minOccurs="0"/&gt;
         *       &lt;/sequence&gt;
         *     &lt;/restriction&gt;
         *   &lt;/complexContent&gt;
         * &lt;/complexType&gt;
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "addressLine",
            "premiseNumberPrefix",
            "premiseNumber",
            "premiseNumberSuffix"
        })
        public static class PremiseNumberRangeFrom
            implements Cloneable, CopyTo, Equals, HashCode, ToString
        {

            @XmlElement(name = "AddressLine")
            protected List<AddressLineElement> addressLine;
            @XmlElement(name = "PremiseNumberPrefix")
            protected List<PremiseNumberPrefixElement> premiseNumberPrefix;
            @XmlElement(name = "PremiseNumber", required = true)
            protected List<PremiseNumberElement> premiseNumber;
            @XmlElement(name = "PremiseNumberSuffix")
            protected List<PremiseNumberSuffixElement> premiseNumberSuffix;

            /**
             * Gets the value of the addressLine property.
             * 
             * <p>
             * This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the addressLine property.
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * <pre>
             *    getAddressLine().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link AddressLineElement }
             * 
             * 
             */
            public List<AddressLineElement> getAddressLine() {
                if (addressLine == null) {
                    addressLine = new ArrayList<AddressLineElement>();
                }
                return this.addressLine;
            }

            public boolean isSetAddressLine() {
                return ((this.addressLine!= null)&&(!this.addressLine.isEmpty()));
            }

            public void unsetAddressLine() {
                this.addressLine = null;
            }

            /**
             * Gets the value of the premiseNumberPrefix property.
             * 
             * <p>
             * This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the premiseNumberPrefix property.
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * <pre>
             *    getPremiseNumberPrefix().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link PremiseNumberPrefixElement }
             * 
             * 
             */
            public List<PremiseNumberPrefixElement> getPremiseNumberPrefix() {
                if (premiseNumberPrefix == null) {
                    premiseNumberPrefix = new ArrayList<PremiseNumberPrefixElement>();
                }
                return this.premiseNumberPrefix;
            }

            public boolean isSetPremiseNumberPrefix() {
                return ((this.premiseNumberPrefix!= null)&&(!this.premiseNumberPrefix.isEmpty()));
            }

            public void unsetPremiseNumberPrefix() {
                this.premiseNumberPrefix = null;
            }

            /**
             * Gets the value of the premiseNumber property.
             * 
             * <p>
             * This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the premiseNumber property.
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * <pre>
             *    getPremiseNumber().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link PremiseNumberElement }
             * 
             * 
             */
            public List<PremiseNumberElement> getPremiseNumber() {
                if (premiseNumber == null) {
                    premiseNumber = new ArrayList<PremiseNumberElement>();
                }
                return this.premiseNumber;
            }

            public boolean isSetPremiseNumber() {
                return ((this.premiseNumber!= null)&&(!this.premiseNumber.isEmpty()));
            }

            public void unsetPremiseNumber() {
                this.premiseNumber = null;
            }

            /**
             * Gets the value of the premiseNumberSuffix property.
             * 
             * <p>
             * This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the premiseNumberSuffix property.
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * <pre>
             *    getPremiseNumberSuffix().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link PremiseNumberSuffixElement }
             * 
             * 
             */
            public List<PremiseNumberSuffixElement> getPremiseNumberSuffix() {
                if (premiseNumberSuffix == null) {
                    premiseNumberSuffix = new ArrayList<PremiseNumberSuffixElement>();
                }
                return this.premiseNumberSuffix;
            }

            public boolean isSetPremiseNumberSuffix() {
                return ((this.premiseNumberSuffix!= null)&&(!this.premiseNumberSuffix.isEmpty()));
            }

            public void unsetPremiseNumberSuffix() {
                this.premiseNumberSuffix = null;
            }

            public String toString() {
                final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
                final StringBuilder buffer = new StringBuilder();
                append(null, buffer, strategy);
                return buffer.toString();
            }

            public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                strategy.appendStart(locator, this, buffer);
                appendFields(locator, buffer, strategy);
                strategy.appendEnd(locator, this, buffer);
                return buffer;
            }

            public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                {
                    List<AddressLineElement> theAddressLine;
                    theAddressLine = (this.isSetAddressLine()?this.getAddressLine():null);
                    strategy.appendField(locator, this, "addressLine", buffer, theAddressLine);
                }
                {
                    List<PremiseNumberPrefixElement> thePremiseNumberPrefix;
                    thePremiseNumberPrefix = (this.isSetPremiseNumberPrefix()?this.getPremiseNumberPrefix():null);
                    strategy.appendField(locator, this, "premiseNumberPrefix", buffer, thePremiseNumberPrefix);
                }
                {
                    List<PremiseNumberElement> thePremiseNumber;
                    thePremiseNumber = (this.isSetPremiseNumber()?this.getPremiseNumber():null);
                    strategy.appendField(locator, this, "premiseNumber", buffer, thePremiseNumber);
                }
                {
                    List<PremiseNumberSuffixElement> thePremiseNumberSuffix;
                    thePremiseNumberSuffix = (this.isSetPremiseNumberSuffix()?this.getPremiseNumberSuffix():null);
                    strategy.appendField(locator, this, "premiseNumberSuffix", buffer, thePremiseNumberSuffix);
                }
                return buffer;
            }

            public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
                if (!(object instanceof PremiseElement.PremiseNumberRange.PremiseNumberRangeFrom)) {
                    return false;
                }
                if (this == object) {
                    return true;
                }
                final PremiseElement.PremiseNumberRange.PremiseNumberRangeFrom that = ((PremiseElement.PremiseNumberRange.PremiseNumberRangeFrom) object);
                {
                    List<AddressLineElement> lhsAddressLine;
                    lhsAddressLine = (this.isSetAddressLine()?this.getAddressLine():null);
                    List<AddressLineElement> rhsAddressLine;
                    rhsAddressLine = (that.isSetAddressLine()?that.getAddressLine():null);
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "addressLine", lhsAddressLine), LocatorUtils.property(thatLocator, "addressLine", rhsAddressLine), lhsAddressLine, rhsAddressLine)) {
                        return false;
                    }
                }
                {
                    List<PremiseNumberPrefixElement> lhsPremiseNumberPrefix;
                    lhsPremiseNumberPrefix = (this.isSetPremiseNumberPrefix()?this.getPremiseNumberPrefix():null);
                    List<PremiseNumberPrefixElement> rhsPremiseNumberPrefix;
                    rhsPremiseNumberPrefix = (that.isSetPremiseNumberPrefix()?that.getPremiseNumberPrefix():null);
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "premiseNumberPrefix", lhsPremiseNumberPrefix), LocatorUtils.property(thatLocator, "premiseNumberPrefix", rhsPremiseNumberPrefix), lhsPremiseNumberPrefix, rhsPremiseNumberPrefix)) {
                        return false;
                    }
                }
                {
                    List<PremiseNumberElement> lhsPremiseNumber;
                    lhsPremiseNumber = (this.isSetPremiseNumber()?this.getPremiseNumber():null);
                    List<PremiseNumberElement> rhsPremiseNumber;
                    rhsPremiseNumber = (that.isSetPremiseNumber()?that.getPremiseNumber():null);
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "premiseNumber", lhsPremiseNumber), LocatorUtils.property(thatLocator, "premiseNumber", rhsPremiseNumber), lhsPremiseNumber, rhsPremiseNumber)) {
                        return false;
                    }
                }
                {
                    List<PremiseNumberSuffixElement> lhsPremiseNumberSuffix;
                    lhsPremiseNumberSuffix = (this.isSetPremiseNumberSuffix()?this.getPremiseNumberSuffix():null);
                    List<PremiseNumberSuffixElement> rhsPremiseNumberSuffix;
                    rhsPremiseNumberSuffix = (that.isSetPremiseNumberSuffix()?that.getPremiseNumberSuffix():null);
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "premiseNumberSuffix", lhsPremiseNumberSuffix), LocatorUtils.property(thatLocator, "premiseNumberSuffix", rhsPremiseNumberSuffix), lhsPremiseNumberSuffix, rhsPremiseNumberSuffix)) {
                        return false;
                    }
                }
                return true;
            }

            public boolean equals(Object object) {
                final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
                return equals(null, null, object, strategy);
            }

            public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
                int currentHashCode = 1;
                {
                    List<AddressLineElement> theAddressLine;
                    theAddressLine = (this.isSetAddressLine()?this.getAddressLine():null);
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "addressLine", theAddressLine), currentHashCode, theAddressLine);
                }
                {
                    List<PremiseNumberPrefixElement> thePremiseNumberPrefix;
                    thePremiseNumberPrefix = (this.isSetPremiseNumberPrefix()?this.getPremiseNumberPrefix():null);
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "premiseNumberPrefix", thePremiseNumberPrefix), currentHashCode, thePremiseNumberPrefix);
                }
                {
                    List<PremiseNumberElement> thePremiseNumber;
                    thePremiseNumber = (this.isSetPremiseNumber()?this.getPremiseNumber():null);
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "premiseNumber", thePremiseNumber), currentHashCode, thePremiseNumber);
                }
                {
                    List<PremiseNumberSuffixElement> thePremiseNumberSuffix;
                    thePremiseNumberSuffix = (this.isSetPremiseNumberSuffix()?this.getPremiseNumberSuffix():null);
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "premiseNumberSuffix", thePremiseNumberSuffix), currentHashCode, thePremiseNumberSuffix);
                }
                return currentHashCode;
            }

            public int hashCode() {
                final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
                return this.hashCode(null, strategy);
            }

            public Object clone() {
                return copyTo(createNewInstance());
            }

            public Object copyTo(Object target) {
                final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
                return copyTo(null, target, strategy);
            }

            public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
                final Object draftCopy = ((target == null)?createNewInstance():target);
                if (draftCopy instanceof PremiseElement.PremiseNumberRange.PremiseNumberRangeFrom) {
                    final PremiseElement.PremiseNumberRange.PremiseNumberRangeFrom copy = ((PremiseElement.PremiseNumberRange.PremiseNumberRangeFrom) draftCopy);
                    if (this.isSetAddressLine()) {
                        List<AddressLineElement> sourceAddressLine;
                        sourceAddressLine = (this.isSetAddressLine()?this.getAddressLine():null);
                        @SuppressWarnings("unchecked")
                        List<AddressLineElement> copyAddressLine = ((List<AddressLineElement> ) strategy.copy(LocatorUtils.property(locator, "addressLine", sourceAddressLine), sourceAddressLine));
                        copy.unsetAddressLine();
                        if (copyAddressLine!= null) {
                            List<AddressLineElement> uniqueAddressLinel = copy.getAddressLine();
                            uniqueAddressLinel.addAll(copyAddressLine);
                        }
                    } else {
                        copy.unsetAddressLine();
                    }
                    if (this.isSetPremiseNumberPrefix()) {
                        List<PremiseNumberPrefixElement> sourcePremiseNumberPrefix;
                        sourcePremiseNumberPrefix = (this.isSetPremiseNumberPrefix()?this.getPremiseNumberPrefix():null);
                        @SuppressWarnings("unchecked")
                        List<PremiseNumberPrefixElement> copyPremiseNumberPrefix = ((List<PremiseNumberPrefixElement> ) strategy.copy(LocatorUtils.property(locator, "premiseNumberPrefix", sourcePremiseNumberPrefix), sourcePremiseNumberPrefix));
                        copy.unsetPremiseNumberPrefix();
                        if (copyPremiseNumberPrefix!= null) {
                            List<PremiseNumberPrefixElement> uniquePremiseNumberPrefixl = copy.getPremiseNumberPrefix();
                            uniquePremiseNumberPrefixl.addAll(copyPremiseNumberPrefix);
                        }
                    } else {
                        copy.unsetPremiseNumberPrefix();
                    }
                    if (this.isSetPremiseNumber()) {
                        List<PremiseNumberElement> sourcePremiseNumber;
                        sourcePremiseNumber = (this.isSetPremiseNumber()?this.getPremiseNumber():null);
                        @SuppressWarnings("unchecked")
                        List<PremiseNumberElement> copyPremiseNumber = ((List<PremiseNumberElement> ) strategy.copy(LocatorUtils.property(locator, "premiseNumber", sourcePremiseNumber), sourcePremiseNumber));
                        copy.unsetPremiseNumber();
                        if (copyPremiseNumber!= null) {
                            List<PremiseNumberElement> uniquePremiseNumberl = copy.getPremiseNumber();
                            uniquePremiseNumberl.addAll(copyPremiseNumber);
                        }
                    } else {
                        copy.unsetPremiseNumber();
                    }
                    if (this.isSetPremiseNumberSuffix()) {
                        List<PremiseNumberSuffixElement> sourcePremiseNumberSuffix;
                        sourcePremiseNumberSuffix = (this.isSetPremiseNumberSuffix()?this.getPremiseNumberSuffix():null);
                        @SuppressWarnings("unchecked")
                        List<PremiseNumberSuffixElement> copyPremiseNumberSuffix = ((List<PremiseNumberSuffixElement> ) strategy.copy(LocatorUtils.property(locator, "premiseNumberSuffix", sourcePremiseNumberSuffix), sourcePremiseNumberSuffix));
                        copy.unsetPremiseNumberSuffix();
                        if (copyPremiseNumberSuffix!= null) {
                            List<PremiseNumberSuffixElement> uniquePremiseNumberSuffixl = copy.getPremiseNumberSuffix();
                            uniquePremiseNumberSuffixl.addAll(copyPremiseNumberSuffix);
                        }
                    } else {
                        copy.unsetPremiseNumberSuffix();
                    }
                }
                return draftCopy;
            }

            public Object createNewInstance() {
                return new PremiseElement.PremiseNumberRange.PremiseNumberRangeFrom();
            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType&gt;
         *   &lt;complexContent&gt;
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
         *       &lt;sequence&gt;
         *         &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}AddressLine" maxOccurs="unbounded" minOccurs="0"/&gt;
         *         &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}PremiseNumberPrefix" maxOccurs="unbounded" minOccurs="0"/&gt;
         *         &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}PremiseNumber" maxOccurs="unbounded"/&gt;
         *         &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}PremiseNumberSuffix" maxOccurs="unbounded" minOccurs="0"/&gt;
         *       &lt;/sequence&gt;
         *     &lt;/restriction&gt;
         *   &lt;/complexContent&gt;
         * &lt;/complexType&gt;
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "addressLine",
            "premiseNumberPrefix",
            "premiseNumber",
            "premiseNumberSuffix"
        })
        public static class PremiseNumberRangeTo
            implements Cloneable, CopyTo, Equals, HashCode, ToString
        {

            @XmlElement(name = "AddressLine")
            protected List<AddressLineElement> addressLine;
            @XmlElement(name = "PremiseNumberPrefix")
            protected List<PremiseNumberPrefixElement> premiseNumberPrefix;
            @XmlElement(name = "PremiseNumber", required = true)
            protected List<PremiseNumberElement> premiseNumber;
            @XmlElement(name = "PremiseNumberSuffix")
            protected List<PremiseNumberSuffixElement> premiseNumberSuffix;

            /**
             * Gets the value of the addressLine property.
             * 
             * <p>
             * This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the addressLine property.
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * <pre>
             *    getAddressLine().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link AddressLineElement }
             * 
             * 
             */
            public List<AddressLineElement> getAddressLine() {
                if (addressLine == null) {
                    addressLine = new ArrayList<AddressLineElement>();
                }
                return this.addressLine;
            }

            public boolean isSetAddressLine() {
                return ((this.addressLine!= null)&&(!this.addressLine.isEmpty()));
            }

            public void unsetAddressLine() {
                this.addressLine = null;
            }

            /**
             * Gets the value of the premiseNumberPrefix property.
             * 
             * <p>
             * This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the premiseNumberPrefix property.
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * <pre>
             *    getPremiseNumberPrefix().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link PremiseNumberPrefixElement }
             * 
             * 
             */
            public List<PremiseNumberPrefixElement> getPremiseNumberPrefix() {
                if (premiseNumberPrefix == null) {
                    premiseNumberPrefix = new ArrayList<PremiseNumberPrefixElement>();
                }
                return this.premiseNumberPrefix;
            }

            public boolean isSetPremiseNumberPrefix() {
                return ((this.premiseNumberPrefix!= null)&&(!this.premiseNumberPrefix.isEmpty()));
            }

            public void unsetPremiseNumberPrefix() {
                this.premiseNumberPrefix = null;
            }

            /**
             * Gets the value of the premiseNumber property.
             * 
             * <p>
             * This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the premiseNumber property.
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * <pre>
             *    getPremiseNumber().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link PremiseNumberElement }
             * 
             * 
             */
            public List<PremiseNumberElement> getPremiseNumber() {
                if (premiseNumber == null) {
                    premiseNumber = new ArrayList<PremiseNumberElement>();
                }
                return this.premiseNumber;
            }

            public boolean isSetPremiseNumber() {
                return ((this.premiseNumber!= null)&&(!this.premiseNumber.isEmpty()));
            }

            public void unsetPremiseNumber() {
                this.premiseNumber = null;
            }

            /**
             * Gets the value of the premiseNumberSuffix property.
             * 
             * <p>
             * This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the premiseNumberSuffix property.
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * <pre>
             *    getPremiseNumberSuffix().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link PremiseNumberSuffixElement }
             * 
             * 
             */
            public List<PremiseNumberSuffixElement> getPremiseNumberSuffix() {
                if (premiseNumberSuffix == null) {
                    premiseNumberSuffix = new ArrayList<PremiseNumberSuffixElement>();
                }
                return this.premiseNumberSuffix;
            }

            public boolean isSetPremiseNumberSuffix() {
                return ((this.premiseNumberSuffix!= null)&&(!this.premiseNumberSuffix.isEmpty()));
            }

            public void unsetPremiseNumberSuffix() {
                this.premiseNumberSuffix = null;
            }

            public String toString() {
                final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
                final StringBuilder buffer = new StringBuilder();
                append(null, buffer, strategy);
                return buffer.toString();
            }

            public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                strategy.appendStart(locator, this, buffer);
                appendFields(locator, buffer, strategy);
                strategy.appendEnd(locator, this, buffer);
                return buffer;
            }

            public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                {
                    List<AddressLineElement> theAddressLine;
                    theAddressLine = (this.isSetAddressLine()?this.getAddressLine():null);
                    strategy.appendField(locator, this, "addressLine", buffer, theAddressLine);
                }
                {
                    List<PremiseNumberPrefixElement> thePremiseNumberPrefix;
                    thePremiseNumberPrefix = (this.isSetPremiseNumberPrefix()?this.getPremiseNumberPrefix():null);
                    strategy.appendField(locator, this, "premiseNumberPrefix", buffer, thePremiseNumberPrefix);
                }
                {
                    List<PremiseNumberElement> thePremiseNumber;
                    thePremiseNumber = (this.isSetPremiseNumber()?this.getPremiseNumber():null);
                    strategy.appendField(locator, this, "premiseNumber", buffer, thePremiseNumber);
                }
                {
                    List<PremiseNumberSuffixElement> thePremiseNumberSuffix;
                    thePremiseNumberSuffix = (this.isSetPremiseNumberSuffix()?this.getPremiseNumberSuffix():null);
                    strategy.appendField(locator, this, "premiseNumberSuffix", buffer, thePremiseNumberSuffix);
                }
                return buffer;
            }

            public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
                if (!(object instanceof PremiseElement.PremiseNumberRange.PremiseNumberRangeTo)) {
                    return false;
                }
                if (this == object) {
                    return true;
                }
                final PremiseElement.PremiseNumberRange.PremiseNumberRangeTo that = ((PremiseElement.PremiseNumberRange.PremiseNumberRangeTo) object);
                {
                    List<AddressLineElement> lhsAddressLine;
                    lhsAddressLine = (this.isSetAddressLine()?this.getAddressLine():null);
                    List<AddressLineElement> rhsAddressLine;
                    rhsAddressLine = (that.isSetAddressLine()?that.getAddressLine():null);
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "addressLine", lhsAddressLine), LocatorUtils.property(thatLocator, "addressLine", rhsAddressLine), lhsAddressLine, rhsAddressLine)) {
                        return false;
                    }
                }
                {
                    List<PremiseNumberPrefixElement> lhsPremiseNumberPrefix;
                    lhsPremiseNumberPrefix = (this.isSetPremiseNumberPrefix()?this.getPremiseNumberPrefix():null);
                    List<PremiseNumberPrefixElement> rhsPremiseNumberPrefix;
                    rhsPremiseNumberPrefix = (that.isSetPremiseNumberPrefix()?that.getPremiseNumberPrefix():null);
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "premiseNumberPrefix", lhsPremiseNumberPrefix), LocatorUtils.property(thatLocator, "premiseNumberPrefix", rhsPremiseNumberPrefix), lhsPremiseNumberPrefix, rhsPremiseNumberPrefix)) {
                        return false;
                    }
                }
                {
                    List<PremiseNumberElement> lhsPremiseNumber;
                    lhsPremiseNumber = (this.isSetPremiseNumber()?this.getPremiseNumber():null);
                    List<PremiseNumberElement> rhsPremiseNumber;
                    rhsPremiseNumber = (that.isSetPremiseNumber()?that.getPremiseNumber():null);
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "premiseNumber", lhsPremiseNumber), LocatorUtils.property(thatLocator, "premiseNumber", rhsPremiseNumber), lhsPremiseNumber, rhsPremiseNumber)) {
                        return false;
                    }
                }
                {
                    List<PremiseNumberSuffixElement> lhsPremiseNumberSuffix;
                    lhsPremiseNumberSuffix = (this.isSetPremiseNumberSuffix()?this.getPremiseNumberSuffix():null);
                    List<PremiseNumberSuffixElement> rhsPremiseNumberSuffix;
                    rhsPremiseNumberSuffix = (that.isSetPremiseNumberSuffix()?that.getPremiseNumberSuffix():null);
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "premiseNumberSuffix", lhsPremiseNumberSuffix), LocatorUtils.property(thatLocator, "premiseNumberSuffix", rhsPremiseNumberSuffix), lhsPremiseNumberSuffix, rhsPremiseNumberSuffix)) {
                        return false;
                    }
                }
                return true;
            }

            public boolean equals(Object object) {
                final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
                return equals(null, null, object, strategy);
            }

            public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
                int currentHashCode = 1;
                {
                    List<AddressLineElement> theAddressLine;
                    theAddressLine = (this.isSetAddressLine()?this.getAddressLine():null);
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "addressLine", theAddressLine), currentHashCode, theAddressLine);
                }
                {
                    List<PremiseNumberPrefixElement> thePremiseNumberPrefix;
                    thePremiseNumberPrefix = (this.isSetPremiseNumberPrefix()?this.getPremiseNumberPrefix():null);
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "premiseNumberPrefix", thePremiseNumberPrefix), currentHashCode, thePremiseNumberPrefix);
                }
                {
                    List<PremiseNumberElement> thePremiseNumber;
                    thePremiseNumber = (this.isSetPremiseNumber()?this.getPremiseNumber():null);
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "premiseNumber", thePremiseNumber), currentHashCode, thePremiseNumber);
                }
                {
                    List<PremiseNumberSuffixElement> thePremiseNumberSuffix;
                    thePremiseNumberSuffix = (this.isSetPremiseNumberSuffix()?this.getPremiseNumberSuffix():null);
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "premiseNumberSuffix", thePremiseNumberSuffix), currentHashCode, thePremiseNumberSuffix);
                }
                return currentHashCode;
            }

            public int hashCode() {
                final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
                return this.hashCode(null, strategy);
            }

            public Object clone() {
                return copyTo(createNewInstance());
            }

            public Object copyTo(Object target) {
                final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
                return copyTo(null, target, strategy);
            }

            public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
                final Object draftCopy = ((target == null)?createNewInstance():target);
                if (draftCopy instanceof PremiseElement.PremiseNumberRange.PremiseNumberRangeTo) {
                    final PremiseElement.PremiseNumberRange.PremiseNumberRangeTo copy = ((PremiseElement.PremiseNumberRange.PremiseNumberRangeTo) draftCopy);
                    if (this.isSetAddressLine()) {
                        List<AddressLineElement> sourceAddressLine;
                        sourceAddressLine = (this.isSetAddressLine()?this.getAddressLine():null);
                        @SuppressWarnings("unchecked")
                        List<AddressLineElement> copyAddressLine = ((List<AddressLineElement> ) strategy.copy(LocatorUtils.property(locator, "addressLine", sourceAddressLine), sourceAddressLine));
                        copy.unsetAddressLine();
                        if (copyAddressLine!= null) {
                            List<AddressLineElement> uniqueAddressLinel = copy.getAddressLine();
                            uniqueAddressLinel.addAll(copyAddressLine);
                        }
                    } else {
                        copy.unsetAddressLine();
                    }
                    if (this.isSetPremiseNumberPrefix()) {
                        List<PremiseNumberPrefixElement> sourcePremiseNumberPrefix;
                        sourcePremiseNumberPrefix = (this.isSetPremiseNumberPrefix()?this.getPremiseNumberPrefix():null);
                        @SuppressWarnings("unchecked")
                        List<PremiseNumberPrefixElement> copyPremiseNumberPrefix = ((List<PremiseNumberPrefixElement> ) strategy.copy(LocatorUtils.property(locator, "premiseNumberPrefix", sourcePremiseNumberPrefix), sourcePremiseNumberPrefix));
                        copy.unsetPremiseNumberPrefix();
                        if (copyPremiseNumberPrefix!= null) {
                            List<PremiseNumberPrefixElement> uniquePremiseNumberPrefixl = copy.getPremiseNumberPrefix();
                            uniquePremiseNumberPrefixl.addAll(copyPremiseNumberPrefix);
                        }
                    } else {
                        copy.unsetPremiseNumberPrefix();
                    }
                    if (this.isSetPremiseNumber()) {
                        List<PremiseNumberElement> sourcePremiseNumber;
                        sourcePremiseNumber = (this.isSetPremiseNumber()?this.getPremiseNumber():null);
                        @SuppressWarnings("unchecked")
                        List<PremiseNumberElement> copyPremiseNumber = ((List<PremiseNumberElement> ) strategy.copy(LocatorUtils.property(locator, "premiseNumber", sourcePremiseNumber), sourcePremiseNumber));
                        copy.unsetPremiseNumber();
                        if (copyPremiseNumber!= null) {
                            List<PremiseNumberElement> uniquePremiseNumberl = copy.getPremiseNumber();
                            uniquePremiseNumberl.addAll(copyPremiseNumber);
                        }
                    } else {
                        copy.unsetPremiseNumber();
                    }
                    if (this.isSetPremiseNumberSuffix()) {
                        List<PremiseNumberSuffixElement> sourcePremiseNumberSuffix;
                        sourcePremiseNumberSuffix = (this.isSetPremiseNumberSuffix()?this.getPremiseNumberSuffix():null);
                        @SuppressWarnings("unchecked")
                        List<PremiseNumberSuffixElement> copyPremiseNumberSuffix = ((List<PremiseNumberSuffixElement> ) strategy.copy(LocatorUtils.property(locator, "premiseNumberSuffix", sourcePremiseNumberSuffix), sourcePremiseNumberSuffix));
                        copy.unsetPremiseNumberSuffix();
                        if (copyPremiseNumberSuffix!= null) {
                            List<PremiseNumberSuffixElement> uniquePremiseNumberSuffixl = copy.getPremiseNumberSuffix();
                            uniquePremiseNumberSuffixl.addAll(copyPremiseNumberSuffix);
                        }
                    } else {
                        copy.unsetPremiseNumberSuffix();
                    }
                }
                return draftCopy;
            }

            public Object createNewInstance() {
                return new PremiseElement.PremiseNumberRange.PremiseNumberRangeTo();
            }

        }

    }

}
