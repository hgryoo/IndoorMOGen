//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.10.10 at 10:41:43 AM KST 
//


package oasis.names.tc.ciq.xsdschema.xal;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAnyAttribute;
import javax.xml.bind.annotation.XmlAnyElement;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;
import javax.xml.namespace.QName;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}AddressLine" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="PostalCodeNumber" maxOccurs="unbounded" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                 &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
 *                 &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *                 &lt;anyAttribute namespace='##other'/&gt;
 *               &lt;/restriction&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="PostalCodeNumberExtension" maxOccurs="unbounded" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                 &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
 *                 &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *                 &lt;attribute name="NumberExtensionSeparator" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *                 &lt;anyAttribute namespace='##other'/&gt;
 *               &lt;/restriction&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="PostTown" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                 &lt;sequence&gt;
 *                   &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}AddressLine" maxOccurs="unbounded" minOccurs="0"/&gt;
 *                   &lt;element name="PostTownName" maxOccurs="unbounded" minOccurs="0"&gt;
 *                     &lt;complexType&gt;
 *                       &lt;complexContent&gt;
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                           &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
 *                           &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *                           &lt;anyAttribute namespace='##other'/&gt;
 *                         &lt;/restriction&gt;
 *                       &lt;/complexContent&gt;
 *                     &lt;/complexType&gt;
 *                   &lt;/element&gt;
 *                   &lt;element name="PostTownSuffix" minOccurs="0"&gt;
 *                     &lt;complexType&gt;
 *                       &lt;complexContent&gt;
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                           &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
 *                           &lt;anyAttribute namespace='##other'/&gt;
 *                         &lt;/restriction&gt;
 *                       &lt;/complexContent&gt;
 *                     &lt;/complexType&gt;
 *                   &lt;/element&gt;
 *                 &lt;/sequence&gt;
 *                 &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *                 &lt;anyAttribute namespace='##other'/&gt;
 *               &lt;/restriction&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;any namespace='##other' maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *       &lt;anyAttribute namespace='##other'/&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "addressLine",
    "postalCodeNumber",
    "postalCodeNumberExtension",
    "postTown",
    "any"
})
@XmlRootElement(name = "PostalCode")
public class PostalCodeElement
    implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    @XmlElement(name = "AddressLine")
    protected List<AddressLineElement> addressLine;
    @XmlElement(name = "PostalCodeNumber")
    protected List<PostalCodeElement.PostalCodeNumber> postalCodeNumber;
    @XmlElement(name = "PostalCodeNumberExtension")
    protected List<PostalCodeElement.PostalCodeNumberExtension> postalCodeNumberExtension;
    @XmlElement(name = "PostTown")
    protected PostalCodeElement.PostTown postTown;
    @XmlAnyElement(lax = true)
    protected List<Object> any;
    @XmlAttribute(name = "Type")
    @XmlSchemaType(name = "anySimpleType")
    protected String type;
    @XmlAnyAttribute
    private Map<QName, String> otherAttributes = new HashMap<QName, String>();

    /**
     * Gets the value of the addressLine property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the addressLine property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAddressLine().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AddressLineElement }
     * 
     * 
     */
    public List<AddressLineElement> getAddressLine() {
        if (addressLine == null) {
            addressLine = new ArrayList<AddressLineElement>();
        }
        return this.addressLine;
    }

    public boolean isSetAddressLine() {
        return ((this.addressLine!= null)&&(!this.addressLine.isEmpty()));
    }

    public void unsetAddressLine() {
        this.addressLine = null;
    }

    /**
     * Gets the value of the postalCodeNumber property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the postalCodeNumber property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPostalCodeNumber().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PostalCodeElement.PostalCodeNumber }
     * 
     * 
     */
    public List<PostalCodeElement.PostalCodeNumber> getPostalCodeNumber() {
        if (postalCodeNumber == null) {
            postalCodeNumber = new ArrayList<PostalCodeElement.PostalCodeNumber>();
        }
        return this.postalCodeNumber;
    }

    public boolean isSetPostalCodeNumber() {
        return ((this.postalCodeNumber!= null)&&(!this.postalCodeNumber.isEmpty()));
    }

    public void unsetPostalCodeNumber() {
        this.postalCodeNumber = null;
    }

    /**
     * Gets the value of the postalCodeNumberExtension property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the postalCodeNumberExtension property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPostalCodeNumberExtension().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PostalCodeElement.PostalCodeNumberExtension }
     * 
     * 
     */
    public List<PostalCodeElement.PostalCodeNumberExtension> getPostalCodeNumberExtension() {
        if (postalCodeNumberExtension == null) {
            postalCodeNumberExtension = new ArrayList<PostalCodeElement.PostalCodeNumberExtension>();
        }
        return this.postalCodeNumberExtension;
    }

    public boolean isSetPostalCodeNumberExtension() {
        return ((this.postalCodeNumberExtension!= null)&&(!this.postalCodeNumberExtension.isEmpty()));
    }

    public void unsetPostalCodeNumberExtension() {
        this.postalCodeNumberExtension = null;
    }

    /**
     * Gets the value of the postTown property.
     * 
     * @return
     *     possible object is
     *     {@link PostalCodeElement.PostTown }
     *     
     */
    public PostalCodeElement.PostTown getPostTown() {
        return postTown;
    }

    /**
     * Sets the value of the postTown property.
     * 
     * @param value
     *     allowed object is
     *     {@link PostalCodeElement.PostTown }
     *     
     */
    public void setPostTown(PostalCodeElement.PostTown value) {
        this.postTown = value;
    }

    public boolean isSetPostTown() {
        return (this.postTown!= null);
    }

    /**
     * Gets the value of the any property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the any property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAny().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Object }
     * 
     * 
     */
    public List<Object> getAny() {
        if (any == null) {
            any = new ArrayList<Object>();
        }
        return this.any;
    }

    public boolean isSetAny() {
        return ((this.any!= null)&&(!this.any.isEmpty()));
    }

    public void unsetAny() {
        this.any = null;
    }

    /**
     * Gets the value of the type property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getType() {
        return type;
    }

    /**
     * Sets the value of the type property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setType(String value) {
        this.type = value;
    }

    public boolean isSetType() {
        return (this.type!= null);
    }

    /**
     * Gets a map that contains attributes that aren't bound to any typed property on this class.
     * 
     * <p>
     * the map is keyed by the name of the attribute and 
     * the value is the string value of the attribute.
     * 
     * the map returned by this method is live, and you can add new attribute
     * by updating the map directly. Because of this design, there's no setter.
     * 
     * 
     * @return
     *     always non-null
     */
    public Map<QName, String> getOtherAttributes() {
        return otherAttributes;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            List<AddressLineElement> theAddressLine;
            theAddressLine = (this.isSetAddressLine()?this.getAddressLine():null);
            strategy.appendField(locator, this, "addressLine", buffer, theAddressLine);
        }
        {
            List<PostalCodeElement.PostalCodeNumber> thePostalCodeNumber;
            thePostalCodeNumber = (this.isSetPostalCodeNumber()?this.getPostalCodeNumber():null);
            strategy.appendField(locator, this, "postalCodeNumber", buffer, thePostalCodeNumber);
        }
        {
            List<PostalCodeElement.PostalCodeNumberExtension> thePostalCodeNumberExtension;
            thePostalCodeNumberExtension = (this.isSetPostalCodeNumberExtension()?this.getPostalCodeNumberExtension():null);
            strategy.appendField(locator, this, "postalCodeNumberExtension", buffer, thePostalCodeNumberExtension);
        }
        {
            PostalCodeElement.PostTown thePostTown;
            thePostTown = this.getPostTown();
            strategy.appendField(locator, this, "postTown", buffer, thePostTown);
        }
        {
            List<Object> theAny;
            theAny = (this.isSetAny()?this.getAny():null);
            strategy.appendField(locator, this, "any", buffer, theAny);
        }
        {
            String theType;
            theType = this.getType();
            strategy.appendField(locator, this, "type", buffer, theType);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof PostalCodeElement)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final PostalCodeElement that = ((PostalCodeElement) object);
        {
            List<AddressLineElement> lhsAddressLine;
            lhsAddressLine = (this.isSetAddressLine()?this.getAddressLine():null);
            List<AddressLineElement> rhsAddressLine;
            rhsAddressLine = (that.isSetAddressLine()?that.getAddressLine():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "addressLine", lhsAddressLine), LocatorUtils.property(thatLocator, "addressLine", rhsAddressLine), lhsAddressLine, rhsAddressLine)) {
                return false;
            }
        }
        {
            List<PostalCodeElement.PostalCodeNumber> lhsPostalCodeNumber;
            lhsPostalCodeNumber = (this.isSetPostalCodeNumber()?this.getPostalCodeNumber():null);
            List<PostalCodeElement.PostalCodeNumber> rhsPostalCodeNumber;
            rhsPostalCodeNumber = (that.isSetPostalCodeNumber()?that.getPostalCodeNumber():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "postalCodeNumber", lhsPostalCodeNumber), LocatorUtils.property(thatLocator, "postalCodeNumber", rhsPostalCodeNumber), lhsPostalCodeNumber, rhsPostalCodeNumber)) {
                return false;
            }
        }
        {
            List<PostalCodeElement.PostalCodeNumberExtension> lhsPostalCodeNumberExtension;
            lhsPostalCodeNumberExtension = (this.isSetPostalCodeNumberExtension()?this.getPostalCodeNumberExtension():null);
            List<PostalCodeElement.PostalCodeNumberExtension> rhsPostalCodeNumberExtension;
            rhsPostalCodeNumberExtension = (that.isSetPostalCodeNumberExtension()?that.getPostalCodeNumberExtension():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "postalCodeNumberExtension", lhsPostalCodeNumberExtension), LocatorUtils.property(thatLocator, "postalCodeNumberExtension", rhsPostalCodeNumberExtension), lhsPostalCodeNumberExtension, rhsPostalCodeNumberExtension)) {
                return false;
            }
        }
        {
            PostalCodeElement.PostTown lhsPostTown;
            lhsPostTown = this.getPostTown();
            PostalCodeElement.PostTown rhsPostTown;
            rhsPostTown = that.getPostTown();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "postTown", lhsPostTown), LocatorUtils.property(thatLocator, "postTown", rhsPostTown), lhsPostTown, rhsPostTown)) {
                return false;
            }
        }
        {
            List<Object> lhsAny;
            lhsAny = (this.isSetAny()?this.getAny():null);
            List<Object> rhsAny;
            rhsAny = (that.isSetAny()?that.getAny():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "any", lhsAny), LocatorUtils.property(thatLocator, "any", rhsAny), lhsAny, rhsAny)) {
                return false;
            }
        }
        {
            String lhsType;
            lhsType = this.getType();
            String rhsType;
            rhsType = that.getType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "type", lhsType), LocatorUtils.property(thatLocator, "type", rhsType), lhsType, rhsType)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            List<AddressLineElement> theAddressLine;
            theAddressLine = (this.isSetAddressLine()?this.getAddressLine():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "addressLine", theAddressLine), currentHashCode, theAddressLine);
        }
        {
            List<PostalCodeElement.PostalCodeNumber> thePostalCodeNumber;
            thePostalCodeNumber = (this.isSetPostalCodeNumber()?this.getPostalCodeNumber():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "postalCodeNumber", thePostalCodeNumber), currentHashCode, thePostalCodeNumber);
        }
        {
            List<PostalCodeElement.PostalCodeNumberExtension> thePostalCodeNumberExtension;
            thePostalCodeNumberExtension = (this.isSetPostalCodeNumberExtension()?this.getPostalCodeNumberExtension():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "postalCodeNumberExtension", thePostalCodeNumberExtension), currentHashCode, thePostalCodeNumberExtension);
        }
        {
            PostalCodeElement.PostTown thePostTown;
            thePostTown = this.getPostTown();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "postTown", thePostTown), currentHashCode, thePostTown);
        }
        {
            List<Object> theAny;
            theAny = (this.isSetAny()?this.getAny():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "any", theAny), currentHashCode, theAny);
        }
        {
            String theType;
            theType = this.getType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "type", theType), currentHashCode, theType);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof PostalCodeElement) {
            final PostalCodeElement copy = ((PostalCodeElement) draftCopy);
            if (this.isSetAddressLine()) {
                List<AddressLineElement> sourceAddressLine;
                sourceAddressLine = (this.isSetAddressLine()?this.getAddressLine():null);
                @SuppressWarnings("unchecked")
                List<AddressLineElement> copyAddressLine = ((List<AddressLineElement> ) strategy.copy(LocatorUtils.property(locator, "addressLine", sourceAddressLine), sourceAddressLine));
                copy.unsetAddressLine();
                if (copyAddressLine!= null) {
                    List<AddressLineElement> uniqueAddressLinel = copy.getAddressLine();
                    uniqueAddressLinel.addAll(copyAddressLine);
                }
            } else {
                copy.unsetAddressLine();
            }
            if (this.isSetPostalCodeNumber()) {
                List<PostalCodeElement.PostalCodeNumber> sourcePostalCodeNumber;
                sourcePostalCodeNumber = (this.isSetPostalCodeNumber()?this.getPostalCodeNumber():null);
                @SuppressWarnings("unchecked")
                List<PostalCodeElement.PostalCodeNumber> copyPostalCodeNumber = ((List<PostalCodeElement.PostalCodeNumber> ) strategy.copy(LocatorUtils.property(locator, "postalCodeNumber", sourcePostalCodeNumber), sourcePostalCodeNumber));
                copy.unsetPostalCodeNumber();
                if (copyPostalCodeNumber!= null) {
                    List<PostalCodeElement.PostalCodeNumber> uniquePostalCodeNumberl = copy.getPostalCodeNumber();
                    uniquePostalCodeNumberl.addAll(copyPostalCodeNumber);
                }
            } else {
                copy.unsetPostalCodeNumber();
            }
            if (this.isSetPostalCodeNumberExtension()) {
                List<PostalCodeElement.PostalCodeNumberExtension> sourcePostalCodeNumberExtension;
                sourcePostalCodeNumberExtension = (this.isSetPostalCodeNumberExtension()?this.getPostalCodeNumberExtension():null);
                @SuppressWarnings("unchecked")
                List<PostalCodeElement.PostalCodeNumberExtension> copyPostalCodeNumberExtension = ((List<PostalCodeElement.PostalCodeNumberExtension> ) strategy.copy(LocatorUtils.property(locator, "postalCodeNumberExtension", sourcePostalCodeNumberExtension), sourcePostalCodeNumberExtension));
                copy.unsetPostalCodeNumberExtension();
                if (copyPostalCodeNumberExtension!= null) {
                    List<PostalCodeElement.PostalCodeNumberExtension> uniquePostalCodeNumberExtensionl = copy.getPostalCodeNumberExtension();
                    uniquePostalCodeNumberExtensionl.addAll(copyPostalCodeNumberExtension);
                }
            } else {
                copy.unsetPostalCodeNumberExtension();
            }
            if (this.isSetPostTown()) {
                PostalCodeElement.PostTown sourcePostTown;
                sourcePostTown = this.getPostTown();
                PostalCodeElement.PostTown copyPostTown = ((PostalCodeElement.PostTown) strategy.copy(LocatorUtils.property(locator, "postTown", sourcePostTown), sourcePostTown));
                copy.setPostTown(copyPostTown);
            } else {
                copy.postTown = null;
            }
            if (this.isSetAny()) {
                List<Object> sourceAny;
                sourceAny = (this.isSetAny()?this.getAny():null);
                @SuppressWarnings("unchecked")
                List<Object> copyAny = ((List<Object> ) strategy.copy(LocatorUtils.property(locator, "any", sourceAny), sourceAny));
                copy.unsetAny();
                if (copyAny!= null) {
                    List<Object> uniqueAnyl = copy.getAny();
                    uniqueAnyl.addAll(copyAny);
                }
            } else {
                copy.unsetAny();
            }
            if (this.isSetType()) {
                String sourceType;
                sourceType = this.getType();
                String copyType = ((String) strategy.copy(LocatorUtils.property(locator, "type", sourceType), sourceType));
                copy.setType(copyType);
            } else {
                copy.type = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new PostalCodeElement();
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;sequence&gt;
     *         &lt;element ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}AddressLine" maxOccurs="unbounded" minOccurs="0"/&gt;
     *         &lt;element name="PostTownName" maxOccurs="unbounded" minOccurs="0"&gt;
     *           &lt;complexType&gt;
     *             &lt;complexContent&gt;
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                 &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
     *                 &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
     *                 &lt;anyAttribute namespace='##other'/&gt;
     *               &lt;/restriction&gt;
     *             &lt;/complexContent&gt;
     *           &lt;/complexType&gt;
     *         &lt;/element&gt;
     *         &lt;element name="PostTownSuffix" minOccurs="0"&gt;
     *           &lt;complexType&gt;
     *             &lt;complexContent&gt;
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                 &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
     *                 &lt;anyAttribute namespace='##other'/&gt;
     *               &lt;/restriction&gt;
     *             &lt;/complexContent&gt;
     *           &lt;/complexType&gt;
     *         &lt;/element&gt;
     *       &lt;/sequence&gt;
     *       &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
     *       &lt;anyAttribute namespace='##other'/&gt;
     *     &lt;/restriction&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "addressLine",
        "postTownName",
        "postTownSuffix"
    })
    public static class PostTown
        implements Cloneable, CopyTo, Equals, HashCode, ToString
    {

        @XmlElement(name = "AddressLine")
        protected List<AddressLineElement> addressLine;
        @XmlElement(name = "PostTownName")
        protected List<PostalCodeElement.PostTown.PostTownName> postTownName;
        @XmlElement(name = "PostTownSuffix")
        protected PostalCodeElement.PostTown.PostTownSuffix postTownSuffix;
        @XmlAttribute(name = "Type")
        @XmlSchemaType(name = "anySimpleType")
        protected String type;
        @XmlAnyAttribute
        private Map<QName, String> otherAttributes = new HashMap<QName, String>();

        /**
         * Gets the value of the addressLine property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the addressLine property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getAddressLine().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link AddressLineElement }
         * 
         * 
         */
        public List<AddressLineElement> getAddressLine() {
            if (addressLine == null) {
                addressLine = new ArrayList<AddressLineElement>();
            }
            return this.addressLine;
        }

        public boolean isSetAddressLine() {
            return ((this.addressLine!= null)&&(!this.addressLine.isEmpty()));
        }

        public void unsetAddressLine() {
            this.addressLine = null;
        }

        /**
         * Gets the value of the postTownName property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the postTownName property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getPostTownName().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link PostalCodeElement.PostTown.PostTownName }
         * 
         * 
         */
        public List<PostalCodeElement.PostTown.PostTownName> getPostTownName() {
            if (postTownName == null) {
                postTownName = new ArrayList<PostalCodeElement.PostTown.PostTownName>();
            }
            return this.postTownName;
        }

        public boolean isSetPostTownName() {
            return ((this.postTownName!= null)&&(!this.postTownName.isEmpty()));
        }

        public void unsetPostTownName() {
            this.postTownName = null;
        }

        /**
         * Gets the value of the postTownSuffix property.
         * 
         * @return
         *     possible object is
         *     {@link PostalCodeElement.PostTown.PostTownSuffix }
         *     
         */
        public PostalCodeElement.PostTown.PostTownSuffix getPostTownSuffix() {
            return postTownSuffix;
        }

        /**
         * Sets the value of the postTownSuffix property.
         * 
         * @param value
         *     allowed object is
         *     {@link PostalCodeElement.PostTown.PostTownSuffix }
         *     
         */
        public void setPostTownSuffix(PostalCodeElement.PostTown.PostTownSuffix value) {
            this.postTownSuffix = value;
        }

        public boolean isSetPostTownSuffix() {
            return (this.postTownSuffix!= null);
        }

        /**
         * Gets the value of the type property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getType() {
            return type;
        }

        /**
         * Sets the value of the type property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setType(String value) {
            this.type = value;
        }

        public boolean isSetType() {
            return (this.type!= null);
        }

        /**
         * Gets a map that contains attributes that aren't bound to any typed property on this class.
         * 
         * <p>
         * the map is keyed by the name of the attribute and 
         * the value is the string value of the attribute.
         * 
         * the map returned by this method is live, and you can add new attribute
         * by updating the map directly. Because of this design, there's no setter.
         * 
         * 
         * @return
         *     always non-null
         */
        public Map<QName, String> getOtherAttributes() {
            return otherAttributes;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                List<AddressLineElement> theAddressLine;
                theAddressLine = (this.isSetAddressLine()?this.getAddressLine():null);
                strategy.appendField(locator, this, "addressLine", buffer, theAddressLine);
            }
            {
                List<PostalCodeElement.PostTown.PostTownName> thePostTownName;
                thePostTownName = (this.isSetPostTownName()?this.getPostTownName():null);
                strategy.appendField(locator, this, "postTownName", buffer, thePostTownName);
            }
            {
                PostalCodeElement.PostTown.PostTownSuffix thePostTownSuffix;
                thePostTownSuffix = this.getPostTownSuffix();
                strategy.appendField(locator, this, "postTownSuffix", buffer, thePostTownSuffix);
            }
            {
                String theType;
                theType = this.getType();
                strategy.appendField(locator, this, "type", buffer, theType);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof PostalCodeElement.PostTown)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final PostalCodeElement.PostTown that = ((PostalCodeElement.PostTown) object);
            {
                List<AddressLineElement> lhsAddressLine;
                lhsAddressLine = (this.isSetAddressLine()?this.getAddressLine():null);
                List<AddressLineElement> rhsAddressLine;
                rhsAddressLine = (that.isSetAddressLine()?that.getAddressLine():null);
                if (!strategy.equals(LocatorUtils.property(thisLocator, "addressLine", lhsAddressLine), LocatorUtils.property(thatLocator, "addressLine", rhsAddressLine), lhsAddressLine, rhsAddressLine)) {
                    return false;
                }
            }
            {
                List<PostalCodeElement.PostTown.PostTownName> lhsPostTownName;
                lhsPostTownName = (this.isSetPostTownName()?this.getPostTownName():null);
                List<PostalCodeElement.PostTown.PostTownName> rhsPostTownName;
                rhsPostTownName = (that.isSetPostTownName()?that.getPostTownName():null);
                if (!strategy.equals(LocatorUtils.property(thisLocator, "postTownName", lhsPostTownName), LocatorUtils.property(thatLocator, "postTownName", rhsPostTownName), lhsPostTownName, rhsPostTownName)) {
                    return false;
                }
            }
            {
                PostalCodeElement.PostTown.PostTownSuffix lhsPostTownSuffix;
                lhsPostTownSuffix = this.getPostTownSuffix();
                PostalCodeElement.PostTown.PostTownSuffix rhsPostTownSuffix;
                rhsPostTownSuffix = that.getPostTownSuffix();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "postTownSuffix", lhsPostTownSuffix), LocatorUtils.property(thatLocator, "postTownSuffix", rhsPostTownSuffix), lhsPostTownSuffix, rhsPostTownSuffix)) {
                    return false;
                }
            }
            {
                String lhsType;
                lhsType = this.getType();
                String rhsType;
                rhsType = that.getType();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "type", lhsType), LocatorUtils.property(thatLocator, "type", rhsType), lhsType, rhsType)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                List<AddressLineElement> theAddressLine;
                theAddressLine = (this.isSetAddressLine()?this.getAddressLine():null);
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "addressLine", theAddressLine), currentHashCode, theAddressLine);
            }
            {
                List<PostalCodeElement.PostTown.PostTownName> thePostTownName;
                thePostTownName = (this.isSetPostTownName()?this.getPostTownName():null);
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "postTownName", thePostTownName), currentHashCode, thePostTownName);
            }
            {
                PostalCodeElement.PostTown.PostTownSuffix thePostTownSuffix;
                thePostTownSuffix = this.getPostTownSuffix();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "postTownSuffix", thePostTownSuffix), currentHashCode, thePostTownSuffix);
            }
            {
                String theType;
                theType = this.getType();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "type", theType), currentHashCode, theType);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public Object clone() {
            return copyTo(createNewInstance());
        }

        public Object copyTo(Object target) {
            final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
            return copyTo(null, target, strategy);
        }

        public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
            final Object draftCopy = ((target == null)?createNewInstance():target);
            if (draftCopy instanceof PostalCodeElement.PostTown) {
                final PostalCodeElement.PostTown copy = ((PostalCodeElement.PostTown) draftCopy);
                if (this.isSetAddressLine()) {
                    List<AddressLineElement> sourceAddressLine;
                    sourceAddressLine = (this.isSetAddressLine()?this.getAddressLine():null);
                    @SuppressWarnings("unchecked")
                    List<AddressLineElement> copyAddressLine = ((List<AddressLineElement> ) strategy.copy(LocatorUtils.property(locator, "addressLine", sourceAddressLine), sourceAddressLine));
                    copy.unsetAddressLine();
                    if (copyAddressLine!= null) {
                        List<AddressLineElement> uniqueAddressLinel = copy.getAddressLine();
                        uniqueAddressLinel.addAll(copyAddressLine);
                    }
                } else {
                    copy.unsetAddressLine();
                }
                if (this.isSetPostTownName()) {
                    List<PostalCodeElement.PostTown.PostTownName> sourcePostTownName;
                    sourcePostTownName = (this.isSetPostTownName()?this.getPostTownName():null);
                    @SuppressWarnings("unchecked")
                    List<PostalCodeElement.PostTown.PostTownName> copyPostTownName = ((List<PostalCodeElement.PostTown.PostTownName> ) strategy.copy(LocatorUtils.property(locator, "postTownName", sourcePostTownName), sourcePostTownName));
                    copy.unsetPostTownName();
                    if (copyPostTownName!= null) {
                        List<PostalCodeElement.PostTown.PostTownName> uniquePostTownNamel = copy.getPostTownName();
                        uniquePostTownNamel.addAll(copyPostTownName);
                    }
                } else {
                    copy.unsetPostTownName();
                }
                if (this.isSetPostTownSuffix()) {
                    PostalCodeElement.PostTown.PostTownSuffix sourcePostTownSuffix;
                    sourcePostTownSuffix = this.getPostTownSuffix();
                    PostalCodeElement.PostTown.PostTownSuffix copyPostTownSuffix = ((PostalCodeElement.PostTown.PostTownSuffix) strategy.copy(LocatorUtils.property(locator, "postTownSuffix", sourcePostTownSuffix), sourcePostTownSuffix));
                    copy.setPostTownSuffix(copyPostTownSuffix);
                } else {
                    copy.postTownSuffix = null;
                }
                if (this.isSetType()) {
                    String sourceType;
                    sourceType = this.getType();
                    String copyType = ((String) strategy.copy(LocatorUtils.property(locator, "type", sourceType), sourceType));
                    copy.setType(copyType);
                } else {
                    copy.type = null;
                }
            }
            return draftCopy;
        }

        public Object createNewInstance() {
            return new PostalCodeElement.PostTown();
        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType&gt;
         *   &lt;complexContent&gt;
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
         *       &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
         *       &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
         *       &lt;anyAttribute namespace='##other'/&gt;
         *     &lt;/restriction&gt;
         *   &lt;/complexContent&gt;
         * &lt;/complexType&gt;
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "content"
        })
        public static class PostTownName
            implements Cloneable, CopyTo, Equals, HashCode, ToString
        {

            @XmlValue
            protected String content;
            @XmlAttribute(name = "Type")
            @XmlSchemaType(name = "anySimpleType")
            protected String type;
            @XmlAttribute(name = "Code")
            @XmlSchemaType(name = "anySimpleType")
            protected String code;
            @XmlAnyAttribute
            private Map<QName, String> otherAttributes = new HashMap<QName, String>();

            /**
             * Gets the value of the content property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getContent() {
                return content;
            }

            /**
             * Sets the value of the content property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setContent(String value) {
                this.content = value;
            }

            public boolean isSetContent() {
                return (this.content!= null);
            }

            /**
             * Gets the value of the type property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getType() {
                return type;
            }

            /**
             * Sets the value of the type property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setType(String value) {
                this.type = value;
            }

            public boolean isSetType() {
                return (this.type!= null);
            }

            /**
             * Gets the value of the code property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getCode() {
                return code;
            }

            /**
             * Sets the value of the code property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setCode(String value) {
                this.code = value;
            }

            public boolean isSetCode() {
                return (this.code!= null);
            }

            /**
             * Gets a map that contains attributes that aren't bound to any typed property on this class.
             * 
             * <p>
             * the map is keyed by the name of the attribute and 
             * the value is the string value of the attribute.
             * 
             * the map returned by this method is live, and you can add new attribute
             * by updating the map directly. Because of this design, there's no setter.
             * 
             * 
             * @return
             *     always non-null
             */
            public Map<QName, String> getOtherAttributes() {
                return otherAttributes;
            }

            public String toString() {
                final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
                final StringBuilder buffer = new StringBuilder();
                append(null, buffer, strategy);
                return buffer.toString();
            }

            public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                strategy.appendStart(locator, this, buffer);
                appendFields(locator, buffer, strategy);
                strategy.appendEnd(locator, this, buffer);
                return buffer;
            }

            public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                {
                    String theContent;
                    theContent = this.getContent();
                    strategy.appendField(locator, this, "content", buffer, theContent);
                }
                {
                    String theType;
                    theType = this.getType();
                    strategy.appendField(locator, this, "type", buffer, theType);
                }
                {
                    String theCode;
                    theCode = this.getCode();
                    strategy.appendField(locator, this, "code", buffer, theCode);
                }
                return buffer;
            }

            public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
                if (!(object instanceof PostalCodeElement.PostTown.PostTownName)) {
                    return false;
                }
                if (this == object) {
                    return true;
                }
                final PostalCodeElement.PostTown.PostTownName that = ((PostalCodeElement.PostTown.PostTownName) object);
                {
                    String lhsContent;
                    lhsContent = this.getContent();
                    String rhsContent;
                    rhsContent = that.getContent();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "content", lhsContent), LocatorUtils.property(thatLocator, "content", rhsContent), lhsContent, rhsContent)) {
                        return false;
                    }
                }
                {
                    String lhsType;
                    lhsType = this.getType();
                    String rhsType;
                    rhsType = that.getType();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "type", lhsType), LocatorUtils.property(thatLocator, "type", rhsType), lhsType, rhsType)) {
                        return false;
                    }
                }
                {
                    String lhsCode;
                    lhsCode = this.getCode();
                    String rhsCode;
                    rhsCode = that.getCode();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "code", lhsCode), LocatorUtils.property(thatLocator, "code", rhsCode), lhsCode, rhsCode)) {
                        return false;
                    }
                }
                return true;
            }

            public boolean equals(Object object) {
                final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
                return equals(null, null, object, strategy);
            }

            public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
                int currentHashCode = 1;
                {
                    String theContent;
                    theContent = this.getContent();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "content", theContent), currentHashCode, theContent);
                }
                {
                    String theType;
                    theType = this.getType();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "type", theType), currentHashCode, theType);
                }
                {
                    String theCode;
                    theCode = this.getCode();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "code", theCode), currentHashCode, theCode);
                }
                return currentHashCode;
            }

            public int hashCode() {
                final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
                return this.hashCode(null, strategy);
            }

            public Object clone() {
                return copyTo(createNewInstance());
            }

            public Object copyTo(Object target) {
                final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
                return copyTo(null, target, strategy);
            }

            public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
                final Object draftCopy = ((target == null)?createNewInstance():target);
                if (draftCopy instanceof PostalCodeElement.PostTown.PostTownName) {
                    final PostalCodeElement.PostTown.PostTownName copy = ((PostalCodeElement.PostTown.PostTownName) draftCopy);
                    if (this.isSetContent()) {
                        String sourceContent;
                        sourceContent = this.getContent();
                        String copyContent = ((String) strategy.copy(LocatorUtils.property(locator, "content", sourceContent), sourceContent));
                        copy.setContent(copyContent);
                    } else {
                        copy.content = null;
                    }
                    if (this.isSetType()) {
                        String sourceType;
                        sourceType = this.getType();
                        String copyType = ((String) strategy.copy(LocatorUtils.property(locator, "type", sourceType), sourceType));
                        copy.setType(copyType);
                    } else {
                        copy.type = null;
                    }
                    if (this.isSetCode()) {
                        String sourceCode;
                        sourceCode = this.getCode();
                        String copyCode = ((String) strategy.copy(LocatorUtils.property(locator, "code", sourceCode), sourceCode));
                        copy.setCode(copyCode);
                    } else {
                        copy.code = null;
                    }
                }
                return draftCopy;
            }

            public Object createNewInstance() {
                return new PostalCodeElement.PostTown.PostTownName();
            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType&gt;
         *   &lt;complexContent&gt;
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
         *       &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
         *       &lt;anyAttribute namespace='##other'/&gt;
         *     &lt;/restriction&gt;
         *   &lt;/complexContent&gt;
         * &lt;/complexType&gt;
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "content"
        })
        public static class PostTownSuffix
            implements Cloneable, CopyTo, Equals, HashCode, ToString
        {

            @XmlValue
            protected String content;
            @XmlAttribute(name = "Code")
            @XmlSchemaType(name = "anySimpleType")
            protected String code;
            @XmlAnyAttribute
            private Map<QName, String> otherAttributes = new HashMap<QName, String>();

            /**
             * Gets the value of the content property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getContent() {
                return content;
            }

            /**
             * Sets the value of the content property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setContent(String value) {
                this.content = value;
            }

            public boolean isSetContent() {
                return (this.content!= null);
            }

            /**
             * Gets the value of the code property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getCode() {
                return code;
            }

            /**
             * Sets the value of the code property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setCode(String value) {
                this.code = value;
            }

            public boolean isSetCode() {
                return (this.code!= null);
            }

            /**
             * Gets a map that contains attributes that aren't bound to any typed property on this class.
             * 
             * <p>
             * the map is keyed by the name of the attribute and 
             * the value is the string value of the attribute.
             * 
             * the map returned by this method is live, and you can add new attribute
             * by updating the map directly. Because of this design, there's no setter.
             * 
             * 
             * @return
             *     always non-null
             */
            public Map<QName, String> getOtherAttributes() {
                return otherAttributes;
            }

            public String toString() {
                final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
                final StringBuilder buffer = new StringBuilder();
                append(null, buffer, strategy);
                return buffer.toString();
            }

            public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                strategy.appendStart(locator, this, buffer);
                appendFields(locator, buffer, strategy);
                strategy.appendEnd(locator, this, buffer);
                return buffer;
            }

            public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                {
                    String theContent;
                    theContent = this.getContent();
                    strategy.appendField(locator, this, "content", buffer, theContent);
                }
                {
                    String theCode;
                    theCode = this.getCode();
                    strategy.appendField(locator, this, "code", buffer, theCode);
                }
                return buffer;
            }

            public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
                if (!(object instanceof PostalCodeElement.PostTown.PostTownSuffix)) {
                    return false;
                }
                if (this == object) {
                    return true;
                }
                final PostalCodeElement.PostTown.PostTownSuffix that = ((PostalCodeElement.PostTown.PostTownSuffix) object);
                {
                    String lhsContent;
                    lhsContent = this.getContent();
                    String rhsContent;
                    rhsContent = that.getContent();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "content", lhsContent), LocatorUtils.property(thatLocator, "content", rhsContent), lhsContent, rhsContent)) {
                        return false;
                    }
                }
                {
                    String lhsCode;
                    lhsCode = this.getCode();
                    String rhsCode;
                    rhsCode = that.getCode();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "code", lhsCode), LocatorUtils.property(thatLocator, "code", rhsCode), lhsCode, rhsCode)) {
                        return false;
                    }
                }
                return true;
            }

            public boolean equals(Object object) {
                final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
                return equals(null, null, object, strategy);
            }

            public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
                int currentHashCode = 1;
                {
                    String theContent;
                    theContent = this.getContent();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "content", theContent), currentHashCode, theContent);
                }
                {
                    String theCode;
                    theCode = this.getCode();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "code", theCode), currentHashCode, theCode);
                }
                return currentHashCode;
            }

            public int hashCode() {
                final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
                return this.hashCode(null, strategy);
            }

            public Object clone() {
                return copyTo(createNewInstance());
            }

            public Object copyTo(Object target) {
                final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
                return copyTo(null, target, strategy);
            }

            public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
                final Object draftCopy = ((target == null)?createNewInstance():target);
                if (draftCopy instanceof PostalCodeElement.PostTown.PostTownSuffix) {
                    final PostalCodeElement.PostTown.PostTownSuffix copy = ((PostalCodeElement.PostTown.PostTownSuffix) draftCopy);
                    if (this.isSetContent()) {
                        String sourceContent;
                        sourceContent = this.getContent();
                        String copyContent = ((String) strategy.copy(LocatorUtils.property(locator, "content", sourceContent), sourceContent));
                        copy.setContent(copyContent);
                    } else {
                        copy.content = null;
                    }
                    if (this.isSetCode()) {
                        String sourceCode;
                        sourceCode = this.getCode();
                        String copyCode = ((String) strategy.copy(LocatorUtils.property(locator, "code", sourceCode), sourceCode));
                        copy.setCode(copyCode);
                    } else {
                        copy.code = null;
                    }
                }
                return draftCopy;
            }

            public Object createNewInstance() {
                return new PostalCodeElement.PostTown.PostTownSuffix();
            }

        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
     *       &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
     *       &lt;anyAttribute namespace='##other'/&gt;
     *     &lt;/restriction&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "content"
    })
    public static class PostalCodeNumber
        implements Cloneable, CopyTo, Equals, HashCode, ToString
    {

        @XmlValue
        protected String content;
        @XmlAttribute(name = "Type")
        @XmlSchemaType(name = "anySimpleType")
        protected String type;
        @XmlAttribute(name = "Code")
        @XmlSchemaType(name = "anySimpleType")
        protected String code;
        @XmlAnyAttribute
        private Map<QName, String> otherAttributes = new HashMap<QName, String>();

        /**
         * Gets the value of the content property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getContent() {
            return content;
        }

        /**
         * Sets the value of the content property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setContent(String value) {
            this.content = value;
        }

        public boolean isSetContent() {
            return (this.content!= null);
        }

        /**
         * Gets the value of the type property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getType() {
            return type;
        }

        /**
         * Sets the value of the type property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setType(String value) {
            this.type = value;
        }

        public boolean isSetType() {
            return (this.type!= null);
        }

        /**
         * Gets the value of the code property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getCode() {
            return code;
        }

        /**
         * Sets the value of the code property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setCode(String value) {
            this.code = value;
        }

        public boolean isSetCode() {
            return (this.code!= null);
        }

        /**
         * Gets a map that contains attributes that aren't bound to any typed property on this class.
         * 
         * <p>
         * the map is keyed by the name of the attribute and 
         * the value is the string value of the attribute.
         * 
         * the map returned by this method is live, and you can add new attribute
         * by updating the map directly. Because of this design, there's no setter.
         * 
         * 
         * @return
         *     always non-null
         */
        public Map<QName, String> getOtherAttributes() {
            return otherAttributes;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                String theContent;
                theContent = this.getContent();
                strategy.appendField(locator, this, "content", buffer, theContent);
            }
            {
                String theType;
                theType = this.getType();
                strategy.appendField(locator, this, "type", buffer, theType);
            }
            {
                String theCode;
                theCode = this.getCode();
                strategy.appendField(locator, this, "code", buffer, theCode);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof PostalCodeElement.PostalCodeNumber)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final PostalCodeElement.PostalCodeNumber that = ((PostalCodeElement.PostalCodeNumber) object);
            {
                String lhsContent;
                lhsContent = this.getContent();
                String rhsContent;
                rhsContent = that.getContent();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "content", lhsContent), LocatorUtils.property(thatLocator, "content", rhsContent), lhsContent, rhsContent)) {
                    return false;
                }
            }
            {
                String lhsType;
                lhsType = this.getType();
                String rhsType;
                rhsType = that.getType();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "type", lhsType), LocatorUtils.property(thatLocator, "type", rhsType), lhsType, rhsType)) {
                    return false;
                }
            }
            {
                String lhsCode;
                lhsCode = this.getCode();
                String rhsCode;
                rhsCode = that.getCode();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "code", lhsCode), LocatorUtils.property(thatLocator, "code", rhsCode), lhsCode, rhsCode)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                String theContent;
                theContent = this.getContent();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "content", theContent), currentHashCode, theContent);
            }
            {
                String theType;
                theType = this.getType();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "type", theType), currentHashCode, theType);
            }
            {
                String theCode;
                theCode = this.getCode();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "code", theCode), currentHashCode, theCode);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public Object clone() {
            return copyTo(createNewInstance());
        }

        public Object copyTo(Object target) {
            final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
            return copyTo(null, target, strategy);
        }

        public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
            final Object draftCopy = ((target == null)?createNewInstance():target);
            if (draftCopy instanceof PostalCodeElement.PostalCodeNumber) {
                final PostalCodeElement.PostalCodeNumber copy = ((PostalCodeElement.PostalCodeNumber) draftCopy);
                if (this.isSetContent()) {
                    String sourceContent;
                    sourceContent = this.getContent();
                    String copyContent = ((String) strategy.copy(LocatorUtils.property(locator, "content", sourceContent), sourceContent));
                    copy.setContent(copyContent);
                } else {
                    copy.content = null;
                }
                if (this.isSetType()) {
                    String sourceType;
                    sourceType = this.getType();
                    String copyType = ((String) strategy.copy(LocatorUtils.property(locator, "type", sourceType), sourceType));
                    copy.setType(copyType);
                } else {
                    copy.type = null;
                }
                if (this.isSetCode()) {
                    String sourceCode;
                    sourceCode = this.getCode();
                    String copyCode = ((String) strategy.copy(LocatorUtils.property(locator, "code", sourceCode), sourceCode));
                    copy.setCode(copyCode);
                } else {
                    copy.code = null;
                }
            }
            return draftCopy;
        }

        public Object createNewInstance() {
            return new PostalCodeElement.PostalCodeNumber();
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;attGroup ref="{urn:oasis:names:tc:ciq:xsdschema:xAL:2.0}grPostal"/&gt;
     *       &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
     *       &lt;attribute name="NumberExtensionSeparator" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
     *       &lt;anyAttribute namespace='##other'/&gt;
     *     &lt;/restriction&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "content"
    })
    public static class PostalCodeNumberExtension
        implements Cloneable, CopyTo, Equals, HashCode, ToString
    {

        @XmlValue
        protected String content;
        @XmlAttribute(name = "Type")
        @XmlSchemaType(name = "anySimpleType")
        protected String type;
        @XmlAttribute(name = "NumberExtensionSeparator")
        @XmlSchemaType(name = "anySimpleType")
        protected String numberExtensionSeparator;
        @XmlAttribute(name = "Code")
        @XmlSchemaType(name = "anySimpleType")
        protected String code;
        @XmlAnyAttribute
        private Map<QName, String> otherAttributes = new HashMap<QName, String>();

        /**
         * Gets the value of the content property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getContent() {
            return content;
        }

        /**
         * Sets the value of the content property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setContent(String value) {
            this.content = value;
        }

        public boolean isSetContent() {
            return (this.content!= null);
        }

        /**
         * Gets the value of the type property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getType() {
            return type;
        }

        /**
         * Sets the value of the type property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setType(String value) {
            this.type = value;
        }

        public boolean isSetType() {
            return (this.type!= null);
        }

        /**
         * Gets the value of the numberExtensionSeparator property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getNumberExtensionSeparator() {
            return numberExtensionSeparator;
        }

        /**
         * Sets the value of the numberExtensionSeparator property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setNumberExtensionSeparator(String value) {
            this.numberExtensionSeparator = value;
        }

        public boolean isSetNumberExtensionSeparator() {
            return (this.numberExtensionSeparator!= null);
        }

        /**
         * Gets the value of the code property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getCode() {
            return code;
        }

        /**
         * Sets the value of the code property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setCode(String value) {
            this.code = value;
        }

        public boolean isSetCode() {
            return (this.code!= null);
        }

        /**
         * Gets a map that contains attributes that aren't bound to any typed property on this class.
         * 
         * <p>
         * the map is keyed by the name of the attribute and 
         * the value is the string value of the attribute.
         * 
         * the map returned by this method is live, and you can add new attribute
         * by updating the map directly. Because of this design, there's no setter.
         * 
         * 
         * @return
         *     always non-null
         */
        public Map<QName, String> getOtherAttributes() {
            return otherAttributes;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                String theContent;
                theContent = this.getContent();
                strategy.appendField(locator, this, "content", buffer, theContent);
            }
            {
                String theType;
                theType = this.getType();
                strategy.appendField(locator, this, "type", buffer, theType);
            }
            {
                String theNumberExtensionSeparator;
                theNumberExtensionSeparator = this.getNumberExtensionSeparator();
                strategy.appendField(locator, this, "numberExtensionSeparator", buffer, theNumberExtensionSeparator);
            }
            {
                String theCode;
                theCode = this.getCode();
                strategy.appendField(locator, this, "code", buffer, theCode);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof PostalCodeElement.PostalCodeNumberExtension)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final PostalCodeElement.PostalCodeNumberExtension that = ((PostalCodeElement.PostalCodeNumberExtension) object);
            {
                String lhsContent;
                lhsContent = this.getContent();
                String rhsContent;
                rhsContent = that.getContent();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "content", lhsContent), LocatorUtils.property(thatLocator, "content", rhsContent), lhsContent, rhsContent)) {
                    return false;
                }
            }
            {
                String lhsType;
                lhsType = this.getType();
                String rhsType;
                rhsType = that.getType();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "type", lhsType), LocatorUtils.property(thatLocator, "type", rhsType), lhsType, rhsType)) {
                    return false;
                }
            }
            {
                String lhsNumberExtensionSeparator;
                lhsNumberExtensionSeparator = this.getNumberExtensionSeparator();
                String rhsNumberExtensionSeparator;
                rhsNumberExtensionSeparator = that.getNumberExtensionSeparator();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "numberExtensionSeparator", lhsNumberExtensionSeparator), LocatorUtils.property(thatLocator, "numberExtensionSeparator", rhsNumberExtensionSeparator), lhsNumberExtensionSeparator, rhsNumberExtensionSeparator)) {
                    return false;
                }
            }
            {
                String lhsCode;
                lhsCode = this.getCode();
                String rhsCode;
                rhsCode = that.getCode();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "code", lhsCode), LocatorUtils.property(thatLocator, "code", rhsCode), lhsCode, rhsCode)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                String theContent;
                theContent = this.getContent();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "content", theContent), currentHashCode, theContent);
            }
            {
                String theType;
                theType = this.getType();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "type", theType), currentHashCode, theType);
            }
            {
                String theNumberExtensionSeparator;
                theNumberExtensionSeparator = this.getNumberExtensionSeparator();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "numberExtensionSeparator", theNumberExtensionSeparator), currentHashCode, theNumberExtensionSeparator);
            }
            {
                String theCode;
                theCode = this.getCode();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "code", theCode), currentHashCode, theCode);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public Object clone() {
            return copyTo(createNewInstance());
        }

        public Object copyTo(Object target) {
            final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
            return copyTo(null, target, strategy);
        }

        public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
            final Object draftCopy = ((target == null)?createNewInstance():target);
            if (draftCopy instanceof PostalCodeElement.PostalCodeNumberExtension) {
                final PostalCodeElement.PostalCodeNumberExtension copy = ((PostalCodeElement.PostalCodeNumberExtension) draftCopy);
                if (this.isSetContent()) {
                    String sourceContent;
                    sourceContent = this.getContent();
                    String copyContent = ((String) strategy.copy(LocatorUtils.property(locator, "content", sourceContent), sourceContent));
                    copy.setContent(copyContent);
                } else {
                    copy.content = null;
                }
                if (this.isSetType()) {
                    String sourceType;
                    sourceType = this.getType();
                    String copyType = ((String) strategy.copy(LocatorUtils.property(locator, "type", sourceType), sourceType));
                    copy.setType(copyType);
                } else {
                    copy.type = null;
                }
                if (this.isSetNumberExtensionSeparator()) {
                    String sourceNumberExtensionSeparator;
                    sourceNumberExtensionSeparator = this.getNumberExtensionSeparator();
                    String copyNumberExtensionSeparator = ((String) strategy.copy(LocatorUtils.property(locator, "numberExtensionSeparator", sourceNumberExtensionSeparator), sourceNumberExtensionSeparator));
                    copy.setNumberExtensionSeparator(copyNumberExtensionSeparator);
                } else {
                    copy.numberExtensionSeparator = null;
                }
                if (this.isSetCode()) {
                    String sourceCode;
                    sourceCode = this.getCode();
                    String copyCode = ((String) strategy.copy(LocatorUtils.property(locator, "code", sourceCode), sourceCode));
                    copy.setCode(copyCode);
                } else {
                    copy.code = null;
                }
            }
            return draftCopy;
        }

        public Object createNewInstance() {
            return new PostalCodeElement.PostalCodeNumberExtension();
        }

    }

}
